{"version":3,"sources":["../../../../react-express-dashbord/client2/src/serviceWorker.js","../../../../react-express-dashbord/client2/src/handlers.js","../../../../react-express-dashbord/client2/src/ui/Components/types/Delay.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Transposer.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Pan.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Player.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/SignalGen.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Speaker.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/DirectInput.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Pitch.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/VSTHost.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Routing.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Mixer.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Record.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Spectroscope.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Oscilloscope.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Envelope.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Filter.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Keyboard.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/SamplePlayer.jsx","../../../../react-express-dashbord/client2/src/ui/Components/types/Sequencer.jsx","../../../../react-express-dashbord/client2/src/ui/Components/WithHeader.jsx","../../../../react-express-dashbord/client2/src/ui/Components/blockSpecs.jsx","../../../../react-express-dashbord/client2/src/ui/Components/AddBlock.jsx","../../../../react-express-dashbord/client2/src/ui/Components/SLButton.jsx","../../../../react-express-dashbord/client2/src/audio/sc-context.js","../../../../react-express-dashbord/client2/src/audio/sc-module.js","../../../../react-express-dashbord/client2/src/audio/sc-oscillator.js","../../../../react-express-dashbord/client2/src/audio/sc-signalgen.js","../../../../react-express-dashbord/client2/src/audio/sc-analyzer.js","../../../../react-express-dashbord/client2/src/audio/sc-speakers.js","../../../../react-express-dashbord/client2/src/audio/sc-delay.js","../../../../react-express-dashbord/client2/src/audio/sc-directin.js","../../../../react-express-dashbord/client2/src/audio/sc-player.js","../../../../react-express-dashbord/client2/src/audio/sc-pan.js","../../../../react-express-dashbord/client2/src/audio/sc-oscilloscope.js","../../../../react-express-dashbord/client2/src/audio/sc-spectroscope.js","../../../../react-express-dashbord/client2/src/ui/reducers/block.js","../../../../react-express-dashbord/client2/src/ui/reducers/blocks.js","../../../../react-express-dashbord/client2/src/ui/component_pp/extra.js","../../../../react-express-dashbord/client2/src/ui/shared/content_box.js","../../../../react-express-dashbord/client2/src/ui/component_pp/ProjectPage.js","../../../../react-express-dashbord/client2/src/index.js"],"names":["Boolean","window","location","hostname","match","changeBlock","id","field","value","store","dispatch","type","Delay","_ref","blockInfo","delayTime","feedback","react_default","a","createElement","Fragment","className","style","width","height","position","top","left","onChange","e","target","min","max","htmlFor","fontSize","step","backgroundColor","onClick","undefined","circleStyle","textAlign","padding","lineHeight","borderRadius","borderColor","Transposer","sliderCents","buttonCents","c","parseInt","right","Object","objectSpread","x","console","log","Pan","panVal","class","Player","speed","volume","hour","minute","second","role","aria-valuenow","aria-valuemin","aria-valuemax","index_esm","marginLeft","transform","orient","files","changeWaveform","w","changeMod","SignalGen","modParam","frequency","waveform","modulation","MI","FD","Math","floor","pow","E","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","Speaker","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomMeter","random","renderAudioL","audioObj","canvasL","canvasLRef","current","renderCtx","getContext","data","getAudioData","clearRect","fillStyle","fillRect","clearInterval","rendererL","renderAudioR","canvasR","canvasRRef","rendererR","componentDidMount","renderRate","setInterval","bind","assertThisInitialized","React","createRef","playButton","_this$props$blockInfo","muted","ref","Component","DirectInput","direction","Pitch","cents","VSTHost","module","version","Routing","name","inNode","outNode","color","node","Channel","num","Mixer","_ref2","volume1","volume2","volume3","volume4","volume5","volume6","volume7","volume8","volumeMaster","Mixer_Channel","timing","toString","length","Record","recordButton","recording","timer","marginTop","Spectroscope","renderAudio","canvas","canvasRef","fftSize","options","W","H","minDb","analyzerNode","analyzer","minDecibels","maxDb","maxDecibels","beginPath","moveTo","i","lineTo","fill","renderer","Oscilloscope","scaleY","y","strokeStyle","stroke","Envelope","objectDestructuringEmpty","Filter","changeMIDIMessage","m","Keyboard","instrument","channel","viewNames","octave","noteOn","midiMessage","instruments","noteNames","map","changeInstrument","indexOf","defineProperty","toConsumableArray","Array","keys","borderStyle","borderWidth","status","IndividualPlayer","file","SamplePlayer","masterVolume","key","SamplePlayer_IndividualPlayer","Beat","note","modValue","selected","skipped","duration","mod","commonjs","preciseMode","Sequencer","waveforms","modulations","modulationValues","notes","durations","selecteds","skippeds","looping","playStyle","Sequencer_Beat","WithHeader","inButton","outButton","nowOut","typeName","handleDelete","inDisabled","outDisabled","collapse","Block","t","eva","outId","Collapse","isOpen","toHex","r","g","b","specValues","kinect","osc","playing","reversed","loop","meterL","meterR","off1","output11","output21","off2","output12","output22","fileName","envelope","dur","playings","addBlock","values","AddBlock","SLButton","scContext","AudioContext","ScModule","context","connReady","connFailed","inputs","outputs","connPromise","Promise","resolve","reject","outScModule","connect","push","outStr","constructor","then","error","catch","outputId","inputId","disconnect","splice","gain","parseFloat","ScOscillator","defOpts","arguments","waveType","freq","assign","bufferSources","oscSources","createGain","connectSource","createOscillator","setOscType","createAndFillBuffer","start","stop","soundType","buffer","dataL","getChannelData","dataR","sample","fillWhiteNoise","b0","b1","b2","b3","b4","b5","b6","imax","white","fillPinkNoise","fillSilence","createBufferSource","buffSize","sampleRate","createBuffer","fillBuffer","newSoundType","includes","detachSource","ScSignalGen","setupNodes","gainNode","carr","modParamNode","createConstantSource","connectNodes","modNew","disconnectNodes","offset","ScAnalyzer","arraySize","smoothing","createAnalyser","smoothingTimeConstant","array","Uint8Array","getData","getByteTimeDomainData","Float32Array","frequencyBinCount","getFloatFrequencyData","sqSum","rms","sqrt","LN10","ScSpeakers","destination","splitter","ChannelSplitterNode","numberOfOutputs","analyzerL","analyzerR","ScDelay","delayNode","createDelay","delayGain","val","ScDirectIn","connectStream","stream","createMediaStreamSource","connectError","message","navigator","mediaDevices","getUserMedia","audio","channelCount","ScPlayer","path","reverse","playbackRate","createBufferError","request","XMLHttpRequest","open","responseType","onload","progressEvent","decodeAudioData","response","send","ScPan","createStereoPanner","pan","ScOscilloscope","ScSpectroscope","block","state","action","newId","typeId","newTypeId","charAt","newInNode","newOutNode","n","blocks","filter","nowIn","nameIn","nameOut","indexIn","indexOut","_ref3","idIn","idOut","_ref4","audioObjIn","connectTo","allTypes","bs","nextBlockId","nextTypeId","typeIds","newAction","concat","filteredBs","s","localStorage","setItem","JSON","stringify","newState","getItem","parse","reorder","list","startIndex","endIndex","result","from","_result$splice","removed","slicedToArray","move","source","droppableSource","droppableDestination","lastIndex","sourceClone","destClone","droppableId","newValue","index","sidebar1","image","sidebar2","major1","major2","blockApp","combineReducers","createStore","BlockList","Components_WithHeader","BlockApp","href","substring","projectId","Components_SLButton","Components_AddBlock","src_BlockList","render","ReactDOM","src_BlockApp","getState","document","getElementById","subscribe","serviceWorker","ready","registration","unregister"],"mappings":"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ACA,gBACA,aACA,eACA,mBACA,uBACA,mBACA,sBACA,gBACA,kBACA,gBACA,eACA,eACA,iCACA,6BACA,6BACA,4BACA,6BACA,6BACA,uBACA,uBACA,sBACA,mBACA,4BACA,0BACA,mBACA,iBACA,iBACA,kBACA,kBACA,YACA,WACA,WACA,gBACA,qBACA,uBACA,qBACA,aACA,uBACA,uBACA,qBACA,qBACA,gBACA,gBACA,iBACA,mBACA,aACA,cACA,UACA,mBACA,iBACA,mBACA,mBACA,mBACA,iBACA,cACA,eACA,kBACA,UACA,kBACA,aACA,cACA,aACA,WACA,cACA,eACA,kBACA,gBACA,aACA,aACA,qBACA,uBACA,uBACA,oBACA,sBACA,oBACA,qBACA,0BACA,qBACA,kBACA,uBACA,mBACA,mBACA,sBACA,kBACA,mBACA,iBACA,uBACA,oBACA,wBACA,wBACA,qBACA,oBACA,oBACA,YACA,YACA,eACA,WACA,cACA,cACA,aACA,aACA,kBACA,YACA,kBACA,gBACA,iBACA,kBACA,iBACA,qBACA,wBACA,mBACA,eACA,iBACA,qBACA,iBACA,eACA,eAEEC,EAAY,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,MAC5D,OACE5L,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OACEE,UAAU,GACVC,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRC,SAAU,aAIZR,EAAAC,EAAAC,cAAA,OACEuC,MAAM,WACNpC,MAAO,CACLG,SAAU,WACVC,IAAK,MACLC,KAAM,SAGRV,EAAAC,EAAAC,cAAA,UACEE,UAAU,wCACVC,MAAO,CACLY,SAAU,SACVO,QAAS,MACTlB,MAAO,QACPC,OAAQ,QAEVlB,GAAG,sBACHkF,cAAY,WACZC,gBAAc,OACdC,gBAAc,SAEb4G,GAEHrL,EAAAC,EAAAC,cAAA,OACEuC,MAAM,gBACNpC,MAAO,CAAEY,SAAU,UACnByD,kBAAgB,uBAEfiH,EAAYE,IAAI,SAAAvB,GAAC,OAChBtK,EAAAC,EAAAC,cAA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","file":"static/js/main.666d4e4f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import store from \"./index\";\n\nconst changeBlock = (id, field, value) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id,\n    field,\n    value\n  });\n};\n\nexport default changeBlock;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\n\nconst Delay = ({ blockInfo }) => {\n  let { id, delayTime, feedback } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{ width: \"288px\", height: \"44px\", position: \"relative\" }}\n      >\n        {/* Delay Time */}\n        <input\n          className=\"slider\"\n          type=\"range\"\n          style={{\n            width: \"178px\",\n            position: \"absolute\",\n            top: \"6px\",\n            left: \"6px\"\n          }}\n          onChange={e => changeBlock(id, \"delayTime\", e.target.value)}\n          min={0}\n          max={1000}\n          value={delayTime}\n          id=\"delayTime\"\n        />\n        <label\n          htmlFor=\"delayTime\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"4px\",\n            left: \"194px\"\n          }}\n        >\n          {\"delay(ms): \"}\n        </label>\n        <input\n          type=\"number\"\n          value={delayTime}\n          style={{\n            position: \"absolute\",\n            width: \"40px\",\n            height: \"16px\",\n            left: \"260px\",\n            top: \"5px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => changeBlock(id, \"delayTime\", e.target.value)}\n        />\n\n        {/* Feedback */}\n        <input\n          className=\"slider \"\n          type=\"range\"\n          style={{\n            width: \"178px\",\n            position: \"absolute\",\n            top: \"24px\",\n            left: \"6px\"\n          }}\n          onChange={e => changeBlock(id, \"feedback\", e.target.value)}\n          step={0.001}\n          min={0}\n          max={1}\n          value={feedback}\n          id=\"feedback\"\n        />\n        <span\n          htmlFor=\"feedback\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"22px\",\n            left: \"194px\"\n          }}\n        >\n          {\"feedback: \"}\n        </span>\n        <input\n          type=\"number\"\n          value={feedback}\n          style={{\n            position: \"absolute\",\n            width: \"40px\",\n            height: \"16px\",\n            left: \"260px\",\n            top: \"24px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => changeBlock(id, \"feedback\", e.target.value)}\n        />\n      </div>\n\n      {/* Footer */}\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"30px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"kinect\",\n                value: undefined\n              });\n            }}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Delay;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nconst circleStyle = {\n  width: \"1.5rem\",\n  height: \"1.5rem\",\n  textAlign: \"center\",\n  padding: \"0px\",\n  fontSize: \"16px\",\n  lineHeight: 1.428571429,\n  borderRadius: \"1rem\",\n  borderColor: \"black\"\n};\n\nconst Transposer = ({ blockInfo }) => {\n  let { id, sliderCents, buttonCents } = blockInfo;\n  const c = parseInt(buttonCents) + parseInt(sliderCents);\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{ width: \"288px\", height: \"88px\", position: \"relative\" }}\n      >\n        <label\n          htmlFor=\"cents\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            right: \"24px\",\n            top: \"4px\"\n          }}\n          className=\"float-right mx-2\"\n        >\n          {\"Cents: \" + c}\n        </label>\n        <div className=\"text-center\">\n          <input\n            className=\"slider mx-2\"\n            type=\"range\"\n            style={{\n              width: \"15rem\",\n              position: \"absolute\",\n              left: \"10px\",\n              top: \"20px\"\n            }}\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"sliderCents\",\n                value: e.target.value\n              });\n            }}\n            min={-50}\n            max={50}\n            value={c === 0 ? 0 : sliderCents}\n            id=\"cents\"\n          />\n          <div\n            className=\"mx-2\"\n            style={{ fontSize: \"0.8rem\", position: \"absolute\", top: \"36px\" }}\n          >\n            <span\n              className=\"float-left\"\n              style={{ position: \"absolute\", left: \"5px\" }}\n            >\n              -50\n            </span>\n            <span\n              className=\"float-center\"\n              style={{ position: \"absolute\", left: \"126px\" }}\n            >\n              0\n            </span>\n            <span\n              className=\"float-right\"\n              style={{ position: \"absolute\", left: \"235px\" }}\n            >\n              +50\n            </span>\n          </div>\n        </div>\n        <div\n          className=\"text-center\"\n          style={{ position: \"absolute\", top: \"50px\" }}\n        >\n          <button\n            className=\"btn btn-light m-2\"\n            style={{ ...circleStyle, position: \"absolute\", left: \"56px\" }}\n            onClick={e => {\n              let x = buttonCents - 100;\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"buttonCents\",\n                value: x\n              });\n            }}\n          >\n            &#9837;\n          </button>\n          <button\n            className=\"btn btn-light btn-circle m-2\"\n            style={{ ...circleStyle, position: \"absolute\", left: \"116px\" }}\n            onClick={() => {\n              let x = 0 - sliderCents;\n              console.log(x);\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"buttonCents\",\n                value: x\n              });\n            }}\n          >\n            &#9838;\n          </button>\n          <button\n            className=\"btn btn-light btn-circle m-2\"\n            style={{ ...circleStyle, position: \"absolute\", left: \"176px\" }}\n            onClick={e => {\n              let x = buttonCents + 100;\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"buttonCents\",\n                value: x\n              });\n            }}\n          >\n            &#9839;\n          </button>\n        </div>\n      </div>\n\n      <div\n        className=\"text-center\"\n        style={{ height: \"30px\", backgroundColor: \"grey\" }}\n      >\n        <div className=\"col-md-12\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"m-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Transposer;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nconst Pan = ({ blockInfo }) => {\n  let { id, panVal } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        class=\"text-center\"\n        style={{ width: \"288px\", height: \"40px\", position: \"relative\" }}\n      >\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"20px\",\n            top: \"10px\"\n          }}\n        >\n          L\n        </span>\n        <input\n          className=\"slider mx-2\"\n          type=\"range\"\n          style={{\n            width: \"208px\",\n            position: \"absolute\",\n            left: \"24px\",\n            top: \"12px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"panVal\",\n              value: e.target.value\n            });\n          }}\n          min={-50}\n          max={50}\n          value={panVal}\n          id=\"panVal\"\n        />\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"244px\",\n            top: \"10px\"\n          }}\n        >\n          R\n        </span>\n      </div>\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"30px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"kinect\",\n                value: undefined\n              });\n            }}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Pan;\n","import React from \"react\";\nimport changeBlock from \"../../../handlers\";\nimport \"../../../index.css\";\nimport { FaPlay, FaSquare } from \"react-icons/fa\";\n\nconst circleStyle = {\n  width: \"1.5rem\",\n  height: \"1.5rem\",\n  textAlign: \"center\",\n  padding: \"0px\",\n  fontSize: \"10px\",\n  // lineHeight: 1.428571429,\n  borderRadius: \"1rem\",\n  borderColor: \"black\"\n};\n\nconst Player = ({ blockInfo }) => {\n  let { id, speed, volume, hour, minute, second } = blockInfo;\n  return (\n    <React.Fragment>\n      <div className=\"\" style={{ position: \"relative\", height: \"140px\" }}>\n        <div style={{ fontSize: \"0.8rem\", position: \"absolute\", left: \"10px\" }}>\n          Speed\n        </div>\n        <input\n          className=\"slider mx-1 my-2 text-center\"\n          type=\"range\"\n          style={{\n            width: \"190px\",\n            position: \"absolute\",\n            left: \"5px\",\n            top: \"12px\"\n          }}\n          onChange={e => changeBlock(id, \"speed\", e.target.value)}\n          min={0}\n          max={2}\n          step={0.1}\n          value={speed}\n          id=\"speed\"\n        />\n        <div\n          className=\"text-center mx-1\"\n          style={{ fontSize: \"0.8rem\", position: \"absolute\", top: \"36px\" }}\n        >\n          <span className=\"\" style={{ position: \"absolute\", left: \"5px\" }}>\n            x0\n          </span>\n          <span className=\"\" style={{ position: \"absolute\", left: \"92px\" }}>\n            x1\n          </span>\n          <span className=\"\" style={{ position: \"absolute\", left: \"180px\" }}>\n            x2\n          </span>\n        </div>\n\n        <div\n          className=\"progress\"\n          style={{\n            width: \"190px\",\n            position: \"absolute\",\n            left: \"8px\",\n            top: \"60px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ width: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        <div\n          style={{\n            fontSize: \"0.8rem\",\n            textAlign: \"right\",\n            position: \"absolute\",\n            top: \"80px\",\n            right: \"85px\"\n          }}\n        >\n          {hour + \":\" + minute + \":\" + second}\n        </div>\n\n        {/* check and buttons */}\n        <span\n          className=\"text-center\"\n          style={{ position: \"absolute\", top: \"100px\" }}\n        >\n          <label\n            htmlFor=\"loop\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"10px\",\n              top: \"4px\"\n            }}\n          >\n            Loop\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"\"\n            id=\"loop\"\n            style={{\n              position: \"absolute\",\n              left: \"45px\",\n              top: \"5px\",\n              height: \"20px\",\n              width: \"20px\"\n            }}\n            onClick={() => changeBlock(id, \"loop\", undefined)}\n          />\n\n          <button\n            className=\"btn btn-light m-1\"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              left: \"78px\"\n            }}\n            onClick={() => changeBlock(id, \"playing\", undefined)}\n          >\n            <FaPlay style={{ fontSize: \"12px\", marginLeft: \"2.5px\" }} />\n          </button>\n          <button\n            className=\"btn btn-light btn-circle m-1\"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              left: \"120px\"\n            }}\n            onClick={() => changeBlock(id, \"playing\", undefined)}\n          >\n            <FaSquare style={{ fontSize: \"12px\" }} />\n          </button>\n          <button\n            className=\"btn btn-light btn-circle m-1\"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              left: \"160px\"\n            }}\n            onClick={() => changeBlock(id, \"reversed\", undefined)}\n          >\n            <FaPlay\n              style={{\n                fontSize: \"12px\",\n                marginLeft: \"-2px\",\n                transform: \"scaleX(-1)\"\n              }}\n            />\n          </button>\n        </span>\n\n        <div\n          className=\"progress progress-bar-vertical\"\n          style={{\n            position: \"absolute\",\n            left: \"220px\",\n            top: \"25px\",\n            height: \"110px\",\n            width: \"15px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ height: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        <div\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"230px\",\n            top: \"5px\"\n          }}\n        >\n          {\"Vol. \" + volume}{\" \"}\n        </div>\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"110px\",\n            position: \"absolute\",\n            left: \"248px\",\n            top: \"26px\"\n          }}\n          onChange={e => changeBlock(id, \"volume\", e.target.value)}\n          min={0}\n          max={100}\n          step={1}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n      <div className=\"text-center\" style={{ backgroundColor: \"grey\" }}>\n        <div className=\"row\">\n          <input\n            className=\"mx-4 my-1\"\n            style={{ fontSize: \"0.8rem\" }}\n            type=\"file\"\n            onChange={e => changeBlock(id, \"file\", e.target.files[0])}\n          />\n        </div>\n\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => changeBlock(id, \"kinect\", undefined)}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => changeBlock(id, \"osc\", e.target.value)}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\nimport \"../../../index.css\";\n// import oscDemo from \"../../player-module\";\n\nconst changeWaveform = (w, id) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"waveform\",\n    value: w\n  });\n};\n\nconst changeMod = (w, id) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"modulation\",\n    value: w\n  });\n};\n\nconst SignalGen = ({ blockInfo }) => {\n  let { id, frequency, waveform, modulation, volume, MI, FD } = blockInfo;\n  let modParam;\n  if (modulation === \"No Mod\" || modulation === \"RM\") {\n    modParam = \"Not Applicable\";\n  } else {\n    modParam = modulation === \"AM\" ? \"MI for AM: \" + MI : \"FD for FM: \" + FD;\n  }\n  return (\n    <React.Fragment>\n      <div className=\"\" style={{ position: \"relative\", height: \"134px\" }}>\n        {/* frequency slider */}\n        <label\n          htmlFor=\"frequency\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"8px\",\n            top: \"5px\"\n          }}\n        >\n          {\"Frequency(hz): \"}\n        </label>\n        <input\n          type=\"number\"\n          value={frequency}\n          style={{\n            position: \"absolute\",\n            width: \"40px\",\n            height: \"16px\",\n            left: \"110px\",\n            top: \"7px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"frequency\",\n              value: e.target.value\n            });\n          }}\n        />\n        <input\n          type=\"range\"\n          className=\"slider\"\n          style={{\n            width: \"250px\",\n            position: \"absolute\",\n            left: \"5px\",\n            top: \"24px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"frequency\",\n              value: e.target.value\n            });\n          }}\n          min={0}\n          max={15000}\n          value={frequency}\n          id=\"frequency\"\n        />\n\n        {/* modParam slider */}\n        <label\n          htmlFor=\"param\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"8px\",\n            top: \"40px\"\n          }}\n        >\n          {modParam}\n        </label>\n        <input\n          className=\"slider\"\n          type=\"range\"\n          style={{\n            width: \"250px\",\n            position: \"absolute\",\n            left: \"5px\",\n            top: \"58px\"\n          }}\n          onChange={e => {\n            if (modulation === \"No Mod\" || modulation === \"RM\") {\n              return;\n            } else {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: modulation === \"AM\" ? \"MI\" : \"FD\",\n                value: Math.floor(Math.pow(Math.E, e.target.value))\n              });\n            }\n          }}\n          min={0}\n          max={modulation === \"AM\" ? 20 : 10}\n          step={modulation === \"AM\" ? 0.1 : 0.01}\n          value={\n            modParam === \"Not applicable\"\n              ? 0\n              : modulation === \"AM\"\n              ? MI\n              : Math.log(FD)\n          }\n          id=\"param\"\n        />\n\n        {/* Two Dropdowns */}\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"5px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle l-6 \"\n            style={{\n              fontSize: \"0.8rem\",\n              padding: \"0px\",\n              width: \"100px\",\n              height: \"25px\"\n            }}\n            id=\"waveform dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {waveform}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"waveform dropdown\"\n          >\n            <div\n              class=\"dropdown-item\"\n              onClick={() => {\n                changeWaveform(\"Silence\", id);\n              }}\n            >\n              Silence\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Sine Wave\", id)}\n            >\n              Sine Wave\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Triangle\", id)}\n            >\n              Triangle\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Square\", id)}\n            >\n              Square\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Sawtooth\", id)}\n            >\n              Sawtooth\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"White Noise\", id)}\n            >\n              White Noise\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Pink Noise\", id)}\n            >\n              Pink Noise\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"120px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle\"\n            style={{\n              fontSize: \"0.8rem\",\n              padding: \"0px\",\n              width: \"80px\",\n              height: \"25px\"\n            }}\n            id=\"mod dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {modulation}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"mod dropdown\"\n          >\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"No Mod\", id)}>\n              No Mod\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"RM\", id)}>\n              RM\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"AM\", id)}>\n              AM\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"FM\", id)}>\n              FM\n            </div>\n          </div>\n        </div>\n\n        {/* Volume Slider */}\n        <div\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"260px\",\n            top: \"5px\"\n          }}\n        >\n          {\"Vol: \" + volume}{\" \"}\n        </div>\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"100px\",\n            position: \"absolute\",\n            left: \"275px\",\n            top: \"26px\"\n          }}\n          onChange={e => changeBlock(id, \"volume\", e.target.value)}\n          min={0}\n          max={1}\n          step={0.01}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"32px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => changeBlock(id, \"kinect\", undefined)}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => changeBlock(id, \"osc\", e.target.value)}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default SignalGen;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\nimport { FaVolumeUp, FaVolumeMute } from \"react-icons/fa\";\n\nconst circleStyle = {\n  width: \"2rem\",\n  height: \"2rem\",\n  textAlign: \"center\",\n  fontSize: \"15px\",\n  lineHeight: 1.428571429,\n  borderRadius: \"0.5rem\"\n};\n\nclass Speaker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasLRef = React.createRef();\n    this.canvasRRef = React.createRef();\n    this.rendererL = undefined;\n    this.rendererR = undefined;\n  }\n\n  randomMeter = () => {\n    let x = Math.random();\n    return x;\n  };\n\n  // render function\n  renderAudioL = () => {\n    let { audioObj } = this.props.blockInfo;\n    let canvasL = this.canvasLRef.current;\n    if (canvasL === null) {\n      clearInterval(this.rendererL);\n      return;\n    }\n    let canvasLCtx = canvasL.getContext(\"2d\");\n    let renderCtx = canvasLCtx;\n    let data = audioObj.getAudioData()[0];\n\n    renderCtx.clearRect(0, 0, 230, 140);\n    renderCtx.fillStyle = \"green\";\n    renderCtx.fillRect(0, 0, (data - 40) * 40, 140);\n  };\n\n  // render function\n  renderAudioR = () => {\n    let { audioObj } = this.props.blockInfo;\n    let canvasR = this.canvasRRef.current;\n    if (canvasR === null) {\n      clearInterval(this.rendererR);\n      return;\n    }\n    let canvasRCtx = canvasR.getContext(\"2d\");\n    let renderCtx = canvasRCtx;\n    let data = audioObj.getAudioData()[1];\n\n    renderCtx.clearRect(0, 0, 230, 140);\n    renderCtx.fillStyle = \"green\";\n    renderCtx.fillRect(0, 0, (data - 40) * 40, 140);\n  };\n\n  // bindtocanvas\n  componentDidMount = () => {\n    let { renderRate } = this.props.blockInfo;\n    this.rendererL = setInterval(this.renderAudioL.bind(this), renderRate);\n    this.rendererR = setInterval(this.renderAudioR.bind(this), renderRate);\n  };\n\n  render() {\n    let { id, muted } = this.props.blockInfo;\n    let playButton;\n    if (muted) {\n      playButton = <FaVolumeMute />;\n    } else {\n      playButton = <FaVolumeUp />;\n    }\n    return (\n      <React.Fragment>\n        <div\n          class=\"text-center\"\n          style={{ position: \"relative\", height: \"48px\" }}\n        >\n          {/* L and R Progress Bars */}\n          <div\n            className=\"\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              top: \"3px\",\n              left: \"12px\"\n            }}\n          >\n            L\n          </div>\n          <div\n            className=\"progress\"\n            style={{\n              width: \"230px\",\n              position: \"absolute\",\n              top: \"5px\",\n              left: \"30px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <canvas ref={this.canvasLRef} />\n            {/* <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuenow={meterL}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: meterL + \"%\", backgroundColor: \"green\" }}\n            /> */}\n          </div>\n\n          <div\n            className=\"\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              top: \"23px\",\n              left: \"12px\"\n            }}\n          >\n            R\n          </div>\n          <div\n            className=\"progress\"\n            style={{\n              width: \"230px\",\n              position: \"absolute\",\n              top: \"25px\",\n              left: \"30px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <canvas ref={this.canvasRRef} />\n          </div>\n\n          {/* speaker icon button */}\n          <button\n            className=\"btn btn-light \"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              padding: \"0px\",\n              top: \"5px\",\n              left: \"270px\",\n              backgroundColor: \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"muted\", undefined)}\n          >\n            {playButton}\n          </button>\n        </div>\n\n        <div className=\"text-center\" style={{ backgroundColor: \"grey\" }}>\n          <span className=\"col-md-4\">\n            <button\n              className=\"badge-pill badge-light badge-sm mx-2 my-1\"\n              style={{ fontSize: \"0.8rem\" }}\n            >\n              Audio Settings\n            </button>\n          </span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Speaker;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\n\nconst DirectInput = ({ blockInfo }) => {\n  // catch\n  // store.dispatch('delete')\n\n  let { id, direction, volume } = blockInfo;\n  return (\n    <React.Fragment>\n      <div className=\"\" style={{ position: \"relative\", height: \"100px\" }}>\n        <div\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"0px\",\n            left: \"125px\"\n          }}\n        >\n          Pan\n        </div>\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"15px\",\n            top: \"18px\"\n          }}\n        >\n          L\n        </span>\n        <input\n          className=\"slider\"\n          type=\"range\"\n          style={{\n            width: \"218px\",\n            position: \"absolute\",\n            left: \"28px\",\n            top: \"20px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"direction\",\n              value: e.target.value\n            });\n          }}\n          min={-50}\n          max={50}\n          value={direction}\n          id=\"direction\"\n        />\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"254px\",\n            top: \"18px\"\n          }}\n        >\n          R\n        </span>\n\n        {/* Progress Bar */}\n        <div\n          className=\"progress\"\n          style={{\n            width: \"250px\",\n            position: \"absolute\",\n            top: \"42px\",\n            left: \"15px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ width: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        {/* Mute and Channel */}\n        <div\n          className=\"text-center\"\n          style={{ position: \"absolute\", top: \"68px\" }}\n        >\n          <label\n            htmlFor=\"muted\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"35px\",\n              top: \"2px\"\n            }}\n          >\n            MUTE\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"my-1\"\n            id=\"muted\"\n            style={{ position: \"absolute\", left: \"80px\" }}\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"muted\",\n                value: undefined\n              });\n            }}\n          />\n          <label\n            htmlFor=\"channel\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"125px\",\n              top: \"2px\"\n            }}\n          >\n            Channel:\n          </label>\n          <input\n            type=\"text\"\n            className=\"\"\n            style={{\n              height: \"1.5rem\",\n              width: \"3rem\",\n              position: \"absolute\",\n              left: \"190px\"\n            }}\n            id=\"channel\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"channel\",\n                value: e.target.value\n              });\n            }}\n          />\n        </div>\n\n        {/* Volume Slider */}\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"90px\",\n            position: \"absolute\",\n            left: \"278px\",\n            top: \"5px\"\n          }}\n          onChange={e => changeBlock(id, \"volume\", e.target.value)}\n          min={0}\n          max={10}\n          step={0.1}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"32px\" }}\n      >\n        <button\n          className=\"badge-pill badge-light badge-sm mx-2 my-1\"\n          style={{ fontSize: \"0.8rem\" }}\n        >\n          Audio Settings\n        </button>\n        <span className=\"\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"m-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DirectInput;\n","import React from \"react\";\nimport changeBlock from \"../../../handlers\";\nimport store from \"../../../index\";\n\nconst Pitch = ({ blockInfo }) => {\n  let { id, cents } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{ width: \"288px\", height: \"62px\", position: \"relative\" }}\n      >\n        <label\n          htmlFor=\"cents\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            right: \"34px\",\n            top: \"4px\"\n          }}\n          className=\"float-right mx-2\"\n        >\n          {\"Cents: \"}\n        </label>\n\n        <input\n          type=\"number\"\n          value={cents}\n          style={{\n            position: \"absolute\",\n            width: \"30px\",\n            height: \"16px\",\n            right: \"10px\",\n            top: \"5px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => changeBlock(id, \"cents\", e.target.value)}\n        />\n\n        <div className=\"text-center\">\n          <input\n            className=\"slider mx-2\"\n            type=\"range\"\n            style={{\n              width: \"15rem\",\n              position: \"absolute\",\n              left: \"10px\",\n              top: \"20px\"\n            }}\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"cents\",\n                value: e.target.value\n              });\n            }}\n            min={-400}\n            max={400}\n            value={cents}\n            id=\"cents\"\n          />\n          <div\n            className=\"mx-2\"\n            style={{ fontSize: \"0.8rem\", position: \"absolute\", top: \"36px\" }}\n          >\n            <span\n              className=\"float-left\"\n              style={{ position: \"absolute\", left: \"5px\" }}\n            >\n              -400\n            </span>\n            <span\n              className=\"float-center\"\n              style={{ position: \"absolute\", left: \"126px\" }}\n            >\n              0\n            </span>\n            <span\n              className=\"float-right\"\n              style={{ position: \"absolute\", left: \"235px\" }}\n            >\n              +400\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"30px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"kinect\",\n                value: undefined\n              });\n            }}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Pitch;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport \"../../../index.css\";\n\nconst VSTHost = ({ blockInfo }) => {\n  let { id, module, version } = blockInfo;\n  return (\n    <React.Fragment>\n      <div className=\"text-center\">\n        <div className=\"row my-2\">\n          <input\n            className=\"mx-4\"\n            style={{ fontSize: \"0.8rem\" }}\n            type=\"file\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id,\n                field: \"file\",\n                value: e.target.files[0]\n              });\n            }}\n          />\n        </div>\n        <div\n          className=\"btn btn-sm btn-light m-2\"\n          style={{ fontSize: \"0.7rem\", width: \"8rem\" }}\n          onClick={() => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id,\n              field: \"module\",\n              value: undefined\n            });\n          }}\n        >\n          {module ? \"Module Input\" : \"MIDI Input\"}\n        </div>\n\n        <div className=\"text-center\">\n          <div class=\"dropdown col\">\n            <button\n              className=\"btn btn-info dropdown-toggle\"\n              style={{ fontSize: \"0.7rem\", width: \"8rem\" }}\n              id=\"version dropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              {version}\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"version dropdown\">\n              <div\n                class=\"dropdown-item\"\n                onClick={() => {\n                  store.dispatch({\n                    type: \"CHANGE_BLOCK\",\n                    id,\n                    field: \"version\",\n                    value: \"to Soundcool 3.1.1\"\n                  });\n                }}\n              >\n                to Soundcool 3.1.1\n              </div>\n              <div\n                class=\"dropdown-item\"\n                onClick={() => {\n                  store.dispatch({\n                    type: \"CHANGE_BLOCK\",\n                    id,\n                    field: \"version\",\n                    value: \"to Soundcool 3.1.2\"\n                  });\n                }}\n              >\n                to Soundcool 3.1.2\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <span className=\"row text-center m-2\">\n          <label htmlFor=\"channel\" style={{ fontSize: \"0.8rem\" }}>\n            MIDI Ch.\n          </label>\n          <input\n            type=\"text\"\n            className=\"col-md-6 mx-2\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"channel\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"channel\",\n                value: e.target.value\n              });\n            }}\n          />\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default VSTHost;\n","import React from \"react\";\nimport changeBlock from \"../../../handlers\";\nimport store from \"../../../index\";\n\nconst Routing = ({ blockInfo }) => {\n  let { id, name, inNode, outNode, audioObj } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        class=\"\"\n        style={{ position: \"relative\", height: \"170px\", color: \"white\" }}\n      >\n        <div className=\"\" style={{ position: \"absolute\" }}>\n          <div style={{ position: \"absolute\", top: \"5px\" }}>\n            <span style={{ position: \"absolute\", left: \"50px\" }}>1</span>\n            <button\n              id=\"inButton1\"\n              className=\"btn btn-light btn-sm\"\n              style={{\n                width: \"1.5rem\",\n                height: \"1.5rem\",\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                position: \"absolute\",\n                left: \"70px\"\n              }}\n              onClick={() => {\n                store.dispatch({\n                  type: \"CONNECTING_BLOCK\",\n                  node: \"nowIn\",\n                  value: [name, \"0\", id, audioObj]\n                });\n              }}\n            >\n              {inNode[0] === undefined ? \"In\" : inNode[0][0]}\n            </button>\n          </div>\n\n          <div style={{ fontSize: \"0.8rem\" }}>\n            <div className=\"\" style={{ position: \"absolute\", top: \"36px\" }}>\n              <label\n                htmlFor=\"off1\"\n                style={{ position: \"absolute\", left: \"20px\" }}\n              >\n                Off\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"off1\"\n                onClick={() => changeBlock(id, \"off1\", undefined)}\n              />\n            </div>\n            <div className=\"\" style={{ position: \"absolute\", top: \"56px\" }}>\n              <label\n                htmlFor=\"output11\"\n                style={{ position: \"absolute\", left: \"20px\", width: \"70px\" }}\n              >\n                {\"Output 1\"}\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"output11\"\n                onClick={() => changeBlock(id, \"output11\", undefined)}\n              />\n            </div>\n            <div className=\"\" style={{ position: \"absolute\", top: \"76px\" }}>\n              <label\n                htmlFor=\"output21\"\n                style={{ position: \"absolute\", left: \"20px\", width: \"70px\" }}\n              >\n                {\"Output 2\"}\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"output21\"\n                onClick={() => changeBlock(id, \"output21\", undefined)}\n              />\n            </div>\n          </div>\n\n          <div\n            className=\"progress\"\n            style={{\n              position: \"absolute\",\n              left: \"15px\",\n              top: \"100px\",\n              width: \"102px\",\n              height: \"10px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <div\n              className=\"progress-bar \"\n              role=\"progressbar\"\n              aria-valuenow=\"60\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: \"60%\", backgroundColor: \"green\" }}\n            />\n          </div>\n          <div\n            className=\"progress\"\n            style={{\n              position: \"absolute\",\n              left: \"15px\",\n              top: \"115px\",\n              width: \"102px\",\n              height: \"10px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <div\n              className=\"progress-bar \"\n              role=\"progressbar\"\n              aria-valuenow=\"60\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: \"60%\", backgroundColor: \"green\" }}\n            />\n          </div>\n\n          <div style={{ position: \"absolute\", top: \"136px\" }}>\n            <span style={{ position: \"absolute\", left: \"50px\" }}>1</span>\n            <button\n              id=\"outButton1\"\n              className=\"btn btn-light btn-sm\"\n              style={{\n                width: \"1.5rem\",\n                height: \"1.5rem\",\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                position: \"absolute\",\n                left: \"70px\"\n              }}\n              onClick={() => {\n                store.dispatch({\n                  type: \"CONNECTING_BLOCK\",\n                  node: \"nowOut\",\n                  value: [name, \"0\", id, audioObj]\n                });\n              }}\n            >\n              {outNode[0] === undefined ? \"Out\" : outNode[0][0]}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"\" style={{ position: \"absolute\", left: \"130px\" }}>\n          <div style={{ position: \"absolute\", top: \"5px\" }}>\n            <span style={{ position: \"absolute\", left: \"50px\" }}>2</span>\n            <button\n              id=\"inButton2\"\n              className=\"btn btn-light btn-sm\"\n              style={{\n                width: \"1.5rem\",\n                height: \"1.5rem\",\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                position: \"absolute\",\n                left: \"70px\"\n              }}\n              onClick={() => {\n                store.dispatch({\n                  type: \"CONNECTING_BLOCK\",\n                  node: \"nowIn\",\n                  value: [name, \"1\", id, audioObj]\n                });\n              }}\n            >\n              {inNode[1] === undefined ? \"In\" : inNode[1][0]}\n            </button>\n          </div>\n\n          <div style={{ fontSize: \"0.8rem\" }}>\n            <div className=\"\" style={{ position: \"absolute\", top: \"36px\" }}>\n              <label\n                htmlFor=\"off2\"\n                style={{ position: \"absolute\", left: \"20px\" }}\n              >\n                Off\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"off2\"\n                onClick={() => changeBlock(id, \"off2\", undefined)}\n              />\n            </div>\n            <div className=\"\" style={{ position: \"absolute\", top: \"56px\" }}>\n              <label\n                htmlFor=\"output12\"\n                style={{ position: \"absolute\", left: \"20px\", width: \"70px\" }}\n              >\n                {\"Output 1\"}\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"output12\"\n                onClick={() => changeBlock(id, \"output12\", undefined)}\n              />\n            </div>\n            <div className=\"\" style={{ position: \"absolute\", top: \"76px\" }}>\n              <label\n                htmlFor=\"output22\"\n                style={{ position: \"absolute\", left: \"20px\", width: \"70px\" }}\n              >\n                {\"Output 2\"}\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"output22\"\n                onClick={() => changeBlock(id, \"output22\", undefined)}\n              />\n            </div>\n          </div>\n\n          <div\n            className=\"progress\"\n            style={{\n              position: \"absolute\",\n              left: \"15px\",\n              top: \"100px\",\n              width: \"102px\",\n              height: \"10px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <div\n              className=\"progress-bar \"\n              role=\"progressbar\"\n              aria-valuenow=\"60\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: \"60%\", backgroundColor: \"green\" }}\n            />\n          </div>\n          <div\n            className=\"progress\"\n            style={{\n              position: \"absolute\",\n              left: \"15px\",\n              top: \"115px\",\n              width: \"102px\",\n              height: \"10px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <div\n              className=\"progress-bar \"\n              role=\"progressbar\"\n              aria-valuenow=\"60\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: \"60%\", backgroundColor: \"green\" }}\n            />\n          </div>\n\n          <div style={{ position: \"absolute\", top: \"136px\" }}>\n            <span style={{ position: \"absolute\", left: \"50px\" }}>2</span>\n            <button\n              id=\"outButton2\"\n              className=\"btn btn-light btn-sm\"\n              style={{\n                width: \"1.5rem\",\n                height: \"1.5rem\",\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                position: \"absolute\",\n                left: \"70px\"\n              }}\n              onClick={() => {\n                store.dispatch({\n                  type: \"CONNECTING_BLOCK\",\n                  node: \"nowOut\",\n                  value: [name, \"1\", id, audioObj]\n                });\n              }}\n            >\n              {outNode[1] === undefined ? \"Out\" : outNode[1][0]}\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Routing;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nconst Channel = ({ num, name, id, inNode, volume, audioObj }) => {\n  return (\n    <React.Fragment\n      style={{ position: \"absolute\", width: \"40px\", height: \"120px\" }}\n    >\n      <span style={{ position: \"absolute\", left: \"8px\" }}>{num}</span>\n      <button\n        id={\"inButton\" + num}\n        className=\"btn btn-light btn-sm\"\n        style={{\n          width: \"1.5rem\",\n          height: \"1.5rem\",\n          fontSize: \"0.8rem\",\n          padding: \"0px\",\n          position: \"absolute\",\n          left: \"20px\"\n        }}\n        onClick={() => {\n          store.dispatch({\n            type: \"CONNECTING_BLOCK\",\n            node: \"nowIn\",\n            value: [name, num - 1, id, audioObj]\n          });\n        }}\n      >\n        {inNode[num - 1] === undefined ? \"In\" : inNode[num - 1][0]}\n      </button>\n      <div className=\"\">\n        <div\n          className=\"progress progress-bar-vertical\"\n          style={{\n            position: \"absolute\",\n            backgroundColor: \"black\",\n            width: \"10px\",\n            left: \"7px\",\n            top: \"30px\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ height: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n        <div\n          className=\"progress progress-bar-vertical\"\n          style={{\n            position: \"absolute\",\n            backgroundColor: \"black\",\n            width: \"10px\",\n            left: \"20px\",\n            top: \"30px\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ height: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1rem\",\n            height: \"102px\",\n            position: \"absolute\",\n            left: \"32px\",\n            top: \"28px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"volume\" + num,\n              value: e.target.value\n            });\n          }}\n          min={0}\n          max={100}\n          step={1}\n          value={volume}\n          id={\"volume\" + num}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst Mixer = ({ blockInfo }) => {\n  // #region props\n  let {\n    id,\n    name,\n    inNode,\n    volume1,\n    volume2,\n    volume3,\n    volume4,\n    volume5,\n    volume6,\n    volume7,\n    volume8,\n    volumeMaster,\n    audioObj\n  } = blockInfo;\n  // #endregion\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\", height: \"280px\" }}>\n        <div style={{ position: \"absolute\", left: \"10px\" }}>\n          <Channel\n            num={1}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume1}\n          />\n        </div>\n        <div style={{ position: \"absolute\", left: \"62px\" }}>\n          <Channel\n            num={2}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume2}\n          />\n        </div>\n        <div style={{ position: \"absolute\", left: \"114px\" }}>\n          <Channel\n            num={3}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume3}\n          />\n        </div>\n        <div style={{ position: \"absolute\", left: \"166px\" }}>\n          <Channel\n            num={4}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume4}\n          />\n        </div>\n        <div style={{ position: \"absolute\", top: \"140px\", left: \"10px\" }}>\n          <Channel\n            num={5}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume5}\n          />\n        </div>\n        <div style={{ position: \"absolute\", top: \"140px\", left: \"62px\" }}>\n          <Channel\n            num={6}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume6}\n          />\n        </div>\n        <div style={{ position: \"absolute\", top: \"140px\", left: \"114px\" }}>\n          <Channel\n            num={7}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume7}\n          />\n        </div>\n        <div style={{ position: \"absolute\", top: \"140px\", left: \"166px\" }}>\n          <Channel\n            num={8}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume8}\n          />\n        </div>\n\n        <div className=\"\" style={{ position: \"absolute\", left: \"220px\" }}>\n          <div className=\"\">\n            <div\n              className=\"progress progress-bar-vertical\"\n              style={{\n                position: \"absolute\",\n                backgroundColor: \"black\",\n                height: \"200px\",\n                width: \"10px\",\n                left: \"7px\",\n                top: \"30px\"\n              }}\n            >\n              <div\n                className=\"progress-bar \"\n                role=\"progressbar\"\n                aria-valuenow=\"60\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ height: \"60%\", backgroundColor: \"green\" }}\n              />\n            </div>\n            <div\n              className=\"progress progress-bar-vertical\"\n              style={{\n                position: \"absolute\",\n                backgroundColor: \"black\",\n                height: \"200px\",\n                width: \"10px\",\n                left: \"20px\",\n                top: \"30px\"\n              }}\n            >\n              <div\n                className=\"progress-bar \"\n                role=\"progressbar\"\n                aria-valuenow=\"60\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ height: \"60%\", backgroundColor: \"green\" }}\n              />\n            </div>\n            <input\n              className=\"slider \"\n              orient=\"vertical\"\n              type=\"range\"\n              style={{\n                width: \"1rem\",\n                height: \"200px\",\n                position: \"absolute\",\n                left: \"32px\",\n                top: \"28px\"\n              }}\n              onChange={e => {\n                store.dispatch({\n                  type: \"CHANGE_BLOCK\",\n                  id: id,\n                  field: \"volumeMaster\",\n                  value: e.target.value\n                });\n              }}\n              min={0}\n              max={100}\n              step={1}\n              value={volumeMaster}\n              id={\"volumeMaster\"}\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"text-center\"\n        style={{ height: \"30px\", backgroundColor: \"grey\" }}\n      >\n        <div className=\"col-md-12\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"m-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Mixer;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\nimport { FaCircle, FaSquare } from \"react-icons/fa\";\n\nconst circleStyle = {\n  width: \"1.5rem\",\n  height: \"1.5rem\",\n  textAlign: \"center\",\n  fontSize: \"14px\",\n  lineHeight: 1.428571429,\n  borderRadius: \"1rem\",\n  borderColor: \"black\"\n};\n\nconst timing = x => {\n  if (x.toString().length === 1) {\n    return \"0\" + x;\n  } else {\n    return x;\n  }\n};\n\nconst Record = ({ blockInfo }) => {\n  let { id, module, recording, volume, timer } = blockInfo;\n  let hour = timing(timer / 3600);\n  let minute = timing((timer / 60) % 60);\n  let second = timing(timer % 60);\n  let recordButton;\n  if (!recording) {\n    recordButton = (\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"180px\"\n        }}\n      >\n        <button\n          className=\"btn btn-light \"\n          style={{\n            ...circleStyle,\n            position: \"absolute\",\n            fontSize: \"14px\",\n            padding: \"0px\",\n            backgroundColor: \"white\"\n          }}\n          onClick={() => changeBlock(id, \"recording\", undefined)}\n        >\n          <FaCircle style={{ color: \"red\", marginTop: \"-3px\" }} />\n        </button>\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"4px\",\n            left: \"28px\"\n          }}\n        >\n          Record\n        </span>\n      </div>\n    );\n  } else {\n    recordButton = (\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"180px\"\n        }}\n      >\n        <button\n          className=\"btn btn-light \"\n          style={{\n            ...circleStyle,\n            position: \"absolute\",\n            fontSize: \"14px\",\n            padding: \"0px\",\n            backgroundColor: \"red\"\n          }}\n          onClick={() => changeBlock(id, \"recording\", undefined)}\n        >\n          <FaSquare style={{ color: \"white\", marginTop: \"-3px\" }} />\n        </button>\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"4px\",\n            left: \"28px\"\n          }}\n        >\n          Stop\n        </span>\n      </div>\n    );\n  }\n  return (\n    <React.Fragment>\n      <div class=\"text-center\" style={{ position: \"relative\", height: \"88px\" }}>\n        <label\n          htmlFor=\"fileName\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"6px\",\n            top: \"4px\"\n          }}\n        >\n          {\"File Name: \"}\n        </label>\n\n        <input\n          type=\"text\"\n          style={{\n            position: \"absolute\",\n            width: \"70px\",\n            height: \"16px\",\n            left: \"70px\",\n            top: \"5px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => changeBlock(id, \"fileName\", e.target.value)}\n        />\n\n        {recordButton}\n\n        {/* Progress Bars */}\n        <div\n          className=\"\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"28px\",\n            left: \"6px\"\n          }}\n        >\n          L\n        </div>\n        <div\n          className=\"progress\"\n          style={{\n            width: \"270px\",\n            height: \"15px\",\n            position: \"absolute\",\n            top: \"30px\",\n            left: \"20px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ width: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        <div\n          className=\"\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"48px\",\n            left: \"6px\"\n          }}\n        >\n          R\n        </div>\n        <div\n          className=\"progress\"\n          style={{\n            width: \"270px\",\n            height: \"15px\",\n            position: \"absolute\",\n            top: \"50px\",\n            left: \"20px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ width: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        {/* Volume Slider */}\n        <input\n          className=\"slider\"\n          type=\"range\"\n          style={{\n            width: \"270px\",\n            position: \"absolute\",\n            left: \"20px\",\n            top: \"70px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"volume\",\n              value: e.target.value\n            });\n          }}\n          min={0}\n          max={100}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n\n      <div className=\"text-center\" style={{ backgroundColor: \"grey\" }}>\n        <div className=\"badge badge-fill badge-light badge-sm\">\n          {hour + \":\" + minute + \":\" + second}\n        </div>\n        <button\n          className=\"badge-pill badge-light badge-sm mx-2 my-1\"\n          style={{ fontSize: \"0.8rem\" }}\n          onClick={() => changeBlock(id, \"module\", undefined)}\n        >\n          {module ? \"Module Input\" : \"Input Device\"}\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Record;\n","import React from \"react\";\n\nclass Spectroscope extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.renderer = undefined;\n  }\n\n  // render function\n  renderAudio = () => {\n    let { audioObj } = this.props.blockInfo;\n    let canvas = this.canvasRef.current;\n    if (canvas === null) {\n      clearInterval(this.renderer);\n      return;\n    }\n    let canvasCtx = canvas.getContext(\"2d\");\n    let renderCtx = canvasCtx;\n    let data = audioObj.getAudioData();\n    // let length = data.length;\n    let fftSize = audioObj.options.fftSize;\n    let W = renderCtx.canvas.width - 6;\n    let H = renderCtx.canvas.height;\n    let minDb = audioObj.analyzerNode.analyzer.minDecibels;\n    let maxDb = audioObj.analyzerNode.analyzer.maxDecibels;\n    let scaleY = function(y) {\n      y = (y - minDb) / (maxDb - minDb);\n      return (1 - y) * H;\n    };\n    renderCtx.clearRect(0, 0, W, H);\n    renderCtx.beginPath();\n    renderCtx.fillStyle = \"rgba(0,0,0,.4)\";\n    renderCtx.moveTo(0, H);\n    // let range = fftSize;\n    for (let i = 0; i <= fftSize; i++) {\n      renderCtx.lineTo(i, scaleY(data[i]));\n    }\n    renderCtx.lineTo(W, H);\n    renderCtx.fill();\n  };\n\n  // bindtocanvas\n  componentDidMount = () => {\n    let { audioObj, renderRate } = this.props.blockInfo;\n    this.renderer = setInterval(this.renderAudio.bind(audioObj), renderRate);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className=\"\"\n          style={{\n            width: \"288px\",\n            height: \"188px\",\n            position: \"relative\"\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"293px\",\n              height: \"168px\",\n              top: \"10px\",\n              left: \"10px\",\n              backgroundColor: \"#DCDEE0\"\n            }}\n          >\n            <canvas\n              ref={this.canvasRef}\n              style={{ position: \"absolute\", height: \"168px\", width: \"293px\" }}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Spectroscope;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nclass Oscilloscope extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.renderer = undefined;\n  }\n\n  // render function\n  renderAudio = () => {\n    let { audioObj } = this.props.blockInfo;\n    let canvas = this.canvasRef.current;\n    if (canvas === null) {\n      clearInterval(this.renderer);\n      return;\n    }\n\n    let canvasCtx = canvas.getContext(\"2d\");\n    let renderCtx = canvasCtx;\n    let data = audioObj.getAudioData();\n    let length = data.length;\n    let W = renderCtx.canvas.width;\n    let H = renderCtx.canvas.height;\n    let scaleY = function(y) {\n      return (y / 128.0) * (H / 2);\n    };\n    renderCtx.clearRect(0, 0, W, H);\n    renderCtx.beginPath();\n    renderCtx.strokeStyle = \"rgba(93,168,60,0.8)\";\n    renderCtx.moveTo(0, scaleY(data[0]));\n    for (let i = 0; i < length; ++i) {\n      renderCtx.lineTo((W * i) / length, scaleY(data[i]));\n    }\n    renderCtx.stroke();\n  };\n\n  // bindtocanvas\n  componentDidMount = () => {\n    let { audioObj, renderRate } = this.props.blockInfo;\n    this.renderer = setInterval(this.renderAudio.bind(audioObj), renderRate);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className=\"\"\n          style={{\n            width: \"288px\",\n            height: \"188px\",\n            position: \"relative\"\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"293px\",\n              height: \"168px\",\n              top: \"10px\",\n              left: \"10px\",\n              backgroundColor: \"#DCDEE0\"\n            }}\n          >\n            <canvas\n              ref={this.canvasRef}\n              style={{ position: \"absolute\", width: \"293px\", height: \"168px\" }}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Oscilloscope;\n","import React from \"react\";\nimport store from \"../../../index\";\n// import {canvas} from \"react-canvas\"\n\nconst Envelope = ({ blockInfo }) => {\n  let {} = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"188px\",\n          position: \"relative\"\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"263px\",\n            height: \"168px\",\n            top: \"10px\",\n            left: \"10px\",\n            backgroundColor: \"#DCDEE0\"\n          }}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Envelope;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nconst Filter = ({ blockInfo }) => {\n  let {} = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"188px\",\n          position: \"relative\"\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"263px\",\n            height: \"168px\",\n            top: \"10px\",\n            left: \"10px\",\n            backgroundColor: \"#DCDEE0\"\n          }}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\n\nconst changeInstrument = (i, id) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"instrument\",\n    value: i\n  });\n};\n\nconst changeMIDIMessage = (m, id) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"midiMessage\",\n    value: m\n  });\n};\n\nconst Keyboard = ({ blockInfo }) => {\n  let {\n    id,\n    instrument,\n    channel,\n    viewNames,\n    volume,\n    module,\n    octave,\n    noteOn,\n    midiMessage\n  } = blockInfo;\n  // a list of 128 general midi instruments\n  let instruments = [\n    \"1 Acoustic Grand Piano\",\n    \"2 Bright Acoustic Piano\",\n    \"3 Electric Grand Piano\",\n    \"4 Honky-Tonk Piano\",\n    \"5 Electric Piano 1\",\n    \"6 Electric Piano 2\",\n    \"7 Harpsichord\",\n    \"8 Clavinet\",\n    \"9 Celesta\",\n    \"10 Glockenspiel\",\n    \"11 Music Box\",\n    \"12 Vibraphone\",\n    \"13 Marimba\",\n    \"14 Xylophone\",\n    \"15 Tubular Bells\",\n    \"16 Dulcimer / Santur\",\n    \"17 Drawbar Organ\",\n    \"18 Percussive Organ\",\n    \"19 Rock Organ\",\n    \"20 Church Organ\",\n    \"21 Reed Organ\",\n    \"22 Accordion\",\n    \"23 Harmonica\",\n    \"24 Tango Accordion / Bandoneon\",\n    \"25 Acoustic Guitar (Nylon)\",\n    \"26 Acoustic Guitar (Steel)\",\n    \"27 Electric Guitar (Jazz)\",\n    \"28 Electric Guitar (Clean)\",\n    \"29 Electric Guitar (Muted)\",\n    \"30 Overdriven Guitar\",\n    \"31 Distortion Guitar\",\n    \"32 Guitar Harmonics\",\n    \"33 Acoustic Bass\",\n    \"34 Electric Bass (Finger)\",\n    \"35 Electric Bass (Pick)\",\n    \"36 Fretless Bass\",\n    \"37 Slap Bass 1\",\n    \"38 Slap Bass 2\",\n    \"39 Synth Bass 1\",\n    \"40 Synth Bass 2\",\n    \"41 Violin\",\n    \"42 Viola\",\n    \"43 Cello\",\n    \"44 Contrabass\",\n    \"45 Tremolo Strings\",\n    \"46 Pizzicato Strings\",\n    \"47 Orchestral Harp\",\n    \"48 Timpani\",\n    \"49 String Ensemble 1\",\n    \"50 String Ensemble 2\",\n    \"51 Synth Strings 1\",\n    \"52 Synth Strings 2\",\n    \"53 Choir Aahs\",\n    \"54 Voice Oohs\",\n    \"55 Synth Voice\",\n    \"56 Orchestra Hit\",\n    \"57 Trumpet\",\n    \"58 Trombone\",\n    \"59 Tuba\",\n    \"60 Muted Trumpet\",\n    \"61 French Horn\",\n    \"62 Brass Section\",\n    \"63 Synth Brass 1\",\n    \"64 Synth Brass 2\",\n    \"65 Soprano Sax\",\n    \"66 Alto Sax\",\n    \"67 Tenor Sax\",\n    \"68 Baritone Sax\",\n    \"69 Oboe\",\n    \"70 English Horn\",\n    \"71 Bassoon\",\n    \"72 Clarinet\",\n    \"73 Piccolo\",\n    \"74 Flute\",\n    \"75 Recorder\",\n    \"76 Pan Flute\",\n    \"77 Blown Bottle\",\n    \"78 Shakuhachi\",\n    \"79 Whistle\",\n    \"80 Ocarina\",\n    \"81 Lead 1 (Square)\",\n    \"82 Lead 2 (Sawtooth)\",\n    \"83 Lead 3 (Calliope)\",\n    \"84 Lead 4 (Chiff)\",\n    \"85 Lead 5 (Charang)\",\n    \"86 Lead 6 (Voice)\",\n    \"87 Lead 7 (Fifths)\",\n    \"88 Lead 8 (Bass + Lead)\",\n    \"89 Pad 1 (New Age)\",\n    \"90 Pad 2 (Warm)\",\n    \"91 Pad 3 (Polysynth)\",\n    \"92 Pad 4 (Choir)\",\n    \"93 Pad 5 (Bowed)\",\n    \"94 Pad 6 (Metallic)\",\n    \"95 Pad 7 (Halo)\",\n    \"96 Pad 8 (Sweep)\",\n    \"97 FX 1 (Rain)\",\n    \"98 FX 2 (Soundtrack)\",\n    \"99 FX 3 (Crystal)\",\n    \"100 FX 4 (Atmosphere)\",\n    \"101 FX 5 (Brightness)\",\n    \"102 FX 6 (Goblins)\",\n    \"103 FX 7 (Echoes)\",\n    \"104 FX 8 (Sci-Fi)\",\n    \"105 Sitar\",\n    \"106 Banjo\",\n    \"107 Shamisen\",\n    \"108 Koto\",\n    \"109 Kalimba\",\n    \"110 Bagpipe\",\n    \"111 Fiddle\",\n    \"112 Shanai\",\n    \"113 Tinkle Bell\",\n    \"114 Agogo\",\n    \"115 Steel Drums\",\n    \"116 Woodblock\",\n    \"117 Taiko Drum\",\n    \"118 Melodic Tom\",\n    \"119 Synth Drum\",\n    \"120 Reverse Cymbal\",\n    \"121 Guitar Fret Noise\",\n    \"122 Breath Noise\",\n    \"123 Seashore\",\n    \"124 Bird Tweet\",\n    \"125 Telephone Ring\",\n    \"126 Helicopter\",\n    \"127 Applause\",\n    \"128 Gunshot\"\n  ];\n  let noteNames = [\"DO\", \"RE\", \"MI\", \"FA\", \"SOL\", \"LA\", \"SI\", \"DO\"];\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"178px\",\n          position: \"relative\"\n        }}\n      >\n        {/* Instrument Dropdown menu */}\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"5px\",\n            left: \"10px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle l-6 \"\n            style={{\n              fontSize: \"0.8rem\",\n              padding: \"0px\",\n              width: \"220px\",\n              height: \"25px\"\n            }}\n            id=\"instrument dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {instrument}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"instrument dropdown\"\n          >\n            {instruments.map(i => (\n              <div\n                class=\"dropdown-item\"\n                onClick={() => {\n                  changeInstrument(i, id);\n                  changeMIDIMessage(\n                    \"0xc\" +\n                      (channel - 1).toString(16) +\n                      instruments.indexOf(i).toString(16),\n                    id\n                  );\n                }}\n              >\n                {i}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {console.log(midiMessage)}\n\n        {/* Output selection */}\n        <button\n          className=\"badge-light badge-sm\"\n          style={{ fontSize: \"0.8rem\" }}\n          onClick={() => changeBlock(id, \"module\", undefined)}\n          style={{\n            position: \"absolute\",\n            top: \"5px\",\n            left: \"240px\",\n            width: \"70px\",\n            height: \"34px\",\n            lineHeight: \"13px\",\n            fontSize: \"0.7rem\"\n          }}\n        >\n          {module ? \"Module Ouput\" : \"Internal Synth\"}\n        </button>\n\n        {/* White keys */}\n        {[...Array(8).keys()].map(i => (\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"42px\",\n              left: 30 * i + 10 + \"px\",\n              width: \"30px\",\n              height: \"100px\",\n              backgroundColor: noteOn[i] ? \"#7DE4FC\" : \"#DCDEE0\",\n              borderStyle: \"solid\",\n              borderWidth: \"1px\",\n              borderColor: \"black\"\n            }}\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id,\n                field: \"noteOn\",\n                num: i,\n                value: undefined\n              });\n              let status = (noteOn[i] ? \"9\" : \"8\") + (channel - 1).toString(16);\n              let white = [0, 2, 4, 5, 7, 9, 11, 12];\n              let key = white[i] + octave * 12;\n              changeMIDIMessage(\n                \"0x\" + status + key.toString(16) + volume.toString(16),\n                id\n              );\n            }}\n          />\n        ))}\n\n        {/* Black keys */}\n        {[...Array(2).keys()].map(i => (\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"42px\",\n              left: 30 * i + 30 + \"px\",\n              width: \"20px\",\n              height: \"65px\",\n              backgroundColor: noteOn[i + 8] ? \"#7DE4FC\" : \"black\",\n              borderStyle: \"solid\",\n              borderWidth: \"1px\",\n              borderColor: \"black\"\n            }}\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id,\n                field: \"noteOn\",\n                num: i + 8,\n                value: undefined\n              });\n              let status = (noteOn[i] ? \"9\" : \"8\") + (channel - 1).toString(16);\n              let black1 = [1, 3];\n              let key = black1[i] + octave * 12;\n              changeMIDIMessage(\n                \"0x\" + status + key.toString(16) + volume.toString(16),\n                id\n              );\n            }}\n          />\n        ))}\n        {[...Array(3).keys()].map(i => (\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"42px\",\n              left: 30 * i + 120 + \"px\",\n              width: \"20px\",\n              height: \"65px\",\n              backgroundColor: noteOn[i + 10] ? \"#7DE4FC\" : \"black\",\n              borderStyle: \"solid\",\n              borderWidth: \"1px\",\n              borderColor: \"black\"\n            }}\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id,\n                field: \"noteOn\",\n                num: i + 10,\n                value: undefined\n              });\n              let status = (noteOn[i] ? \"9\" : \"8\") + (channel - 1).toString(16);\n              let black2 = [6, 8, 10];\n              let key = black2[i] + octave * 12;\n              changeMIDIMessage(\n                \"0x\" + status + key.toString(16) + volume.toString(16),\n                id\n              );\n            }}\n          />\n        ))}\n\n        {/* Channel Selection */}\n        <label\n          htmlFor=\"channel\"\n          style={{\n            position: \"absolute\",\n            top: \"148px\",\n            left: \"10px\",\n            fontSize: \"0.8rem\"\n          }}\n        >\n          MIDI CHANNEL:\n        </label>\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"145px\",\n            left: \"110px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle l-6 \"\n            style={{\n              fontSize: \"0.8rem\",\n              padding: \"0px\",\n              width: \"40px\",\n              height: \"25px\"\n            }}\n            id=\"channel dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {channel}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"channel dropdown\"\n          >\n            {[...Array(16).keys()].map(i => (\n              <div\n                class=\"dropdown-item\"\n                onClick={() => {\n                  changeBlock(id, \"channel\", i + 1);\n                }}\n              >\n                {i + 1}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* View Note names */}\n        <label\n          htmlFor=\"viewNames\"\n          style={{\n            position: \"absolute\",\n            top: \"148px\",\n            left: \"160px\",\n            fontSize: \"0.8rem\",\n            width: \"160px\"\n          }}\n        >\n          View Note Names:\n        </label>\n        <input\n          type=\"checkbox\"\n          className=\"m-1\"\n          id=\"viewNames\"\n          style={{\n            position: \"absolute\",\n            top: \"148px\",\n            left: \"268px\",\n            fontSize: \"0.8rem\"\n          }}\n          onClick={() => changeBlock(id, \"viewNames\", undefined)}\n        />\n        {viewNames ? (\n          [...Array(8).keys()].map(i => (\n            <div\n              style={{\n                position: \"absolute\",\n                fontSize: \"0.7rem\",\n                top: \"120px\",\n                left: i * 30 + 16 + \"px\"\n              }}\n            >\n              {noteNames[i]}\n            </div>\n          ))\n        ) : (\n          <span />\n        )}\n\n        {/* Volume Slider */}\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"100px\",\n            position: \"absolute\",\n            left: \"268px\",\n            top: \"42px\"\n          }}\n          onChange={e => {\n            changeBlock(id, \"volume\", e.target.value);\n          }}\n          min={0}\n          max={127}\n          step={1}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n\n      {/* Footer */}\n      <div\n        className=\"\"\n        style={{\n          position: \"relative\",\n          backgroundColor: \"grey\",\n          height: \"30px\"\n        }}\n      >\n        {/* octave */}\n        <span className=\"text-center\">\n          <div\n            class=\"dropdown\"\n            style={{\n              position: \"absolute\",\n              top: \"3px\",\n              left: \"60px\"\n            }}\n          >\n            <button\n              className=\"btn-sm btn-light dropdown-toggle l-6 \"\n              style={{\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                width: \"45px\",\n                height: \"23px\"\n              }}\n              id=\"octave dropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              {\"C\" + octave}\n            </button>\n            <div\n              class=\"dropdown-menu\"\n              style={{ fontSize: \"0.8rem\" }}\n              aria-labelledby=\"octave dropdown\"\n            >\n              {[...Array(11).keys()].map(i => (\n                <div\n                  class=\"dropdown-item\"\n                  onClick={() => {\n                    changeBlock(id, \"octave\", i - 2);\n                  }}\n                >\n                  {\"C\" + (i - 2)}\n                </div>\n              ))}\n            </div>\n          </div>\n        </span>\n        {/* osc port */}\n        <span\n          className=\"text-center\"\n          style={{ position: \"absolute\", left: \"140px\", top: \"0px\" }}\n        >\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Keyboard;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\nimport { FaPlay, FaSquare } from \"react-icons/fa\";\n\nconst circleStyle = {\n  width: \"1.5rem\",\n  height: \"1.5rem\",\n  textAlign: \"center\",\n  padding: \"0px\",\n  fontSize: \"10px\",\n  borderRadius: \"1rem\",\n  borderColor: \"black\"\n};\n\nconst IndividualPlayer = ({ id, num, file }) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        borderColor: \"white\",\n        width: \"70px\",\n        height: \"75px\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\"\n      }}\n    >\n      <div style={{ position: \"absolute\", left: \"2px\" }}>{num + 1}</div>\n      <button\n        className=\"btn btn-light m-1\"\n        style={{\n          ...circleStyle,\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"5px\"\n        }}\n        onClick={() =>\n          store.dispatch({\n            type: \"CHANGE_BLOCK\",\n            id,\n            field: \"playings\",\n            num,\n            value: undefined\n          })\n        }\n      >\n        <FaPlay style={{ fontSize: \"12px\", marginLeft: \"2.5px\" }} />\n      </button>\n      <button\n        className=\"btn btn-light btn-circle m-1\"\n        style={{\n          ...circleStyle,\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"31px\"\n        }}\n        onClick={() =>\n          store.dispatch({\n            type: \"CHANGE_BLOCK\",\n            id,\n            field: \"playings\",\n            num,\n            value: undefined\n          })\n        }\n      >\n        <FaSquare style={{ fontSize: \"12px\" }} />\n      </button>\n\n      <div\n        class=\"dropdown\"\n        style={{\n          position: \"absolute\",\n          top: \"40px\",\n          left: \"5px\"\n        }}\n      >\n        <button\n          className=\"btn-sm btn-light dropdown-toggle\"\n          style={{\n            fontSize: \"0.8rem\",\n            padding: \"0px\",\n            width: \"55px\",\n            height: \"25px\"\n          }}\n          id=\"file dropdown\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          {file}\n        </button>\n        <div\n          class=\"dropdown-menu\"\n          style={{ fontSize: \"0.8rem\" }}\n          aria-labelledby=\"file dropdown\"\n        >\n          {/* <div class=\"dropdown-item\" onClick={() => changeMod(\"No Mod\", id)}>\n              No Mod\n            </div> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SamplePlayer = ({ blockInfo }) => {\n  let l = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  let { id, speed, files, masterVolume } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"290px\",\n          position: \"relative\"\n        }}\n      >\n        {/* general controls */}\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"2px\"\n          }}\n        >\n          <label\n            htmlFor=\"random\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"3px\",\n              top: \"4px\"\n            }}\n          >\n            Random\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"\"\n            id=\"random\"\n            style={{\n              position: \"absolute\",\n              left: \"50px\",\n              top: \"5px\",\n              height: \"20px\",\n              width: \"20px\"\n            }}\n            onClick={() => changeBlock(id, \"random\", undefined)}\n          />\n          <label\n            htmlFor=\"loop\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"70px\",\n              top: \"4px\"\n            }}\n          >\n            Loop\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"\"\n            id=\"loop\"\n            style={{\n              position: \"absolute\",\n              left: \"100px\",\n              top: \"5px\",\n              height: \"20px\",\n              width: \"20px\"\n            }}\n            onClick={() => changeBlock(id, \"loop\", undefined)}\n          />\n\n          <div style={{ position: \"absolute\", left: \"115px\" }}>\n            <div\n              style={{ fontSize: \"0.8rem\", position: \"absolute\", left: \"10px\" }}\n            >\n              Speed\n            </div>\n            <input\n              className=\"slider mx-1 my-2 text-center\"\n              type=\"range\"\n              style={{\n                width: \"150px\",\n                position: \"absolute\",\n                left: \"5px\",\n                top: \"6px\"\n              }}\n              onChange={e => changeBlock(id, \"speed\", e.target.value)}\n              min={0}\n              max={2}\n              step={0.1}\n              value={speed}\n              id=\"speed\"\n            />\n            <div\n              className=\"text-center mx-1\"\n              style={{ fontSize: \"0.8rem\", position: \"absolute\", top: \"28px\" }}\n            >\n              <span className=\"\" style={{ position: \"absolute\", left: \"5px\" }}>\n                x0\n              </span>\n              <span className=\"\" style={{ position: \"absolute\", left: \"72px\" }}>\n                x1\n              </span>\n              <span\n                className=\"\"\n                style={{ position: \"absolute\", left: \"140px\" }}\n              >\n                x2\n              </span>\n            </div>\n          </div>\n\n          <button\n            className=\"btn btn-light btn-circle m-1\"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              left: \"275px\"\n            }}\n            onClick={() => changeBlock(id, \"reversed\", undefined)}\n          >\n            <FaPlay\n              style={{\n                fontSize: \"12px\",\n                marginLeft: \"-2px\",\n                marginTop: \"-1px\",\n                transform: \"scaleX(-1)\"\n              }}\n            />\n          </button>\n        </div>\n\n        {/* individual players x12 */}\n        {l.map(x => {\n          let top = Math.floor(x / 4) * 75 + 50 + \"px\";\n          let left = (x % 4) * 70 + 5 + \"px\";\n          return (\n            <div\n              key={x}\n              style={{\n                position: \"absolute\",\n                top: top,\n                left: left\n              }}\n            >\n              <IndividualPlayer id={id} num={x} file={files[x]} />\n            </div>\n          );\n        })}\n\n        {/* mastervolume slider */}\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"220px\",\n            position: \"absolute\",\n            left: \"288px\",\n            top: \"50px\"\n          }}\n          onChange={e => changeBlock(id, \"masterVolume\", e.target.value)}\n          min={0}\n          max={100}\n          step={1}\n          value={masterVolume}\n          id=\"masterVolume\"\n        />\n      </div>\n\n      {/* footer */}\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"30px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"kinect\",\n                value: undefined\n              });\n            }}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default SamplePlayer;\n","import React from \"react\";\nimport \"../../../index.css\";\nimport changeBlock from \"../../../handlers\";\nimport store from \"../../../index\";\nimport {\n  FaArrowRight,\n  FaArrowLeft,\n  FaExchangeAlt,\n  FaRetweet\n} from \"react-icons/fa\";\nimport { Knob } from \"react-rotary-knob\";\nimport { stringLiteral } from \"@babel/types\";\n\nconst changeWaveform = (w, id, num) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"waveforms\",\n    num: num,\n    value: w\n  });\n};\n\nconst changeMod = (w, id, num) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"modulations\",\n    num: num,\n    value: w\n  });\n};\n\nconst getNote = x => {\n  const noteList = [\n    \"C\",\n    \"•\",\n    \"C#\",\n    \"•\",\n    \"D\",\n    \"•\",\n    \"D#\",\n    \"•\",\n    \"E\",\n    \"•\",\n    \"F\",\n    \"•\",\n    \"F#\",\n    \"•\",\n    \"G\",\n    \"•\",\n    \"G#\",\n    \"•\",\n    \"A\",\n    \"•\",\n    \"A#\",\n    \"•\",\n    \"B\"\n  ];\n  return noteList[x];\n};\n\nconst Beat = ({\n  // #region props\n  id,\n  num,\n  note,\n  modValue,\n  selected,\n  skipped,\n  waveform,\n  octave,\n  mod,\n  duration,\n  modulation\n  // #endregion\n}) => {\n  return (\n    <div style={{ position: \"absolute\", width: \"70px\", height: \"160px\" }}>\n      <div style={{ position: \"absolute\", width: \"70px\", height: \"100px\" }}>\n        {/* <Knob /> */}\n        <Knob\n          style={{\n            position: \"absolute\",\n            left: \"5px\",\n            width: \"40px\",\n            height: \"40px\"\n          }}\n          preciseMode={false}\n          value={note}\n          min={0}\n          max={23}\n          onChange={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"notes\",\n              num: num,\n              value: Math.floor(e)\n            })\n          }\n        />\n        <div style={{ position: \"absolute\", top: \"40px\", left: \"18px\" }}>\n          {getNote(note)}\n        </div>\n        <Knob\n          style={{\n            position: \"absolute\",\n            left: \"42px\",\n            top: \"30px\",\n            width: \"40px\",\n            height: \"40px\"\n          }}\n          preciseMode={false}\n          value={modValue}\n          min={0}\n          max={1000}\n          onChange={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"modulationValues\",\n              num: num,\n              value: e\n            })\n          }\n        />\n        <input\n          type=\"number\"\n          value={duration}\n          style={{\n            position: \"absolute\",\n            width: \"35px\",\n            height: \"16px\",\n            left: \"48px\",\n            top: \"5px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"durations\",\n              num: num,\n              value: e.target.value\n            })\n          }\n        />\n      </div>\n\n      <div style={{ position: \"absolute\", top: \"80px\" }}>\n        {/* Select and Skip */}\n        <div\n          className={\n            selected ? \"btn btn-small btn-secondary\" : \"btn btn-small btn-light\"\n          }\n          style={{\n            position: \"absolute\",\n            left: \"5px\",\n            top: \"2px\",\n            width: \"45px\",\n            height: \"20px\",\n            fontSize: \"0.7rem\",\n            padding: \"0px\"\n          }}\n          onClick={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id,\n              field: \"selecteds\",\n              num: num,\n              value: undefined\n            })\n          }\n        >\n          Select\n        </div>\n        <div\n          className={\n            skipped ? \"btn btn-small btn-secondary\" : \"btn btn-small btn-light\"\n          }\n          style={{\n            position: \"absolute\",\n            left: \"55px\",\n            top: \"2px\",\n            width: \"30px\",\n            height: \"20px\",\n            fontSize: \"0.7rem\",\n            padding: \"0px\"\n          }}\n          onClick={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id,\n              field: \"skippeds\",\n              num: num,\n              value: undefined\n            })\n          }\n        >\n          Skip\n        </div>\n\n        {/* Waveform dropdown */}\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"23px\",\n            left: \"5px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle l-6 \"\n            style={{\n              fontSize: \"0.7rem\",\n              padding: \"0px\",\n              width: \"80px\",\n              height: \"22px\"\n            }}\n            id=\"waveform dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {waveform}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"waveform dropdown\"\n          >\n            <div\n              class=\"dropdown-item\"\n              onClick={() => {\n                changeWaveform(\"Silence\", id, num);\n              }}\n            >\n              Silence\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Sine Wave\", id, num)}\n            >\n              Sine Wave\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Triangle\", id, num)}\n            >\n              Triangle\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Square\", id, num)}\n            >\n              Square\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Sawtooth\", id, num)}\n            >\n              Sawtooth\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"White Noise\", id, num)}\n            >\n              White Noise\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Pink Noise\", id, num)}\n            >\n              Pink Noise\n            </div>\n          </div>\n        </div>\n        {/* Mods dropdown */}\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"48px\",\n            left: \"5px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle\"\n            style={{\n              fontSize: \"0.7rem\",\n              padding: \"0px\",\n              width: \"80px\",\n              height: \"22px\"\n            }}\n            id=\"mod dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {modulation}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"mod dropdown\"\n          >\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeMod(\"No Mod\", id, num)}\n            >\n              No Mod\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"RM\", id, num)}>\n              RM\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"AM\", id, num)}>\n              AM\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"FM\", id, num)}>\n              FM\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* notelength slider */}\n      <input\n        className=\"slider text-center\"\n        orient=\"vertical\"\n        type=\"range\"\n        style={{\n          width: \"1rem\",\n          height: \"150px\",\n          position: \"absolute\",\n          left: \"85px\",\n          top: \"2px\"\n        }}\n        onChange={e => {\n          store.dispatch({\n            type: \"CHANGE_BLOCK\",\n            id: id,\n            field: \"durations\",\n            num: num,\n            value: e.target.value\n          });\n        }}\n        min={0}\n        max={10000}\n        step={1}\n        value={duration}\n      />\n    </div>\n  );\n};\n\nconst Sequencer = ({ blockInfo }) => {\n  let {\n    // #region props\n    id,\n    waveforms,\n    modulations,\n    modulationValues,\n    notes,\n    durations,\n    selecteds,\n    skippeds,\n    looping,\n    playStyle\n    // #endregion\n  } = blockInfo;\n  let l = [0, 1, 2, 3, 4, 5, 6, 7];\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"520px\",\n          position: \"relative\"\n        }}\n      >\n        <div style={{ position: \"absolute\", top: \"2px\" }}>\n          <label\n            htmlFor=\"signalGenId\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"6px\",\n              width: \"80px\"\n            }}\n          >\n            {\"signalGen Id: \"}\n          </label>\n          <input\n            type=\"number\"\n            style={{\n              position: \"absolute\",\n              width: \"30px\",\n              height: \"16px\",\n              left: \"88px\",\n              top: \"2px\",\n              fontSize: \"0.7rem\"\n            }}\n            onChange={e => changeBlock(id, \"signalGenId\", e.target.value)}\n          />\n          <label\n            htmlFor=\"envId\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"125px\",\n              width: \"50px\"\n            }}\n          >\n            {\"Env Id: \"}\n          </label>\n          <input\n            type=\"number\"\n            style={{\n              position: \"absolute\",\n              width: \"30px\",\n              height: \"16px\",\n              left: \"170px\",\n              top: \"2px\",\n              fontSize: \"0.7rem\"\n            }}\n            onChange={e => changeBlock(id, \"envId\", e.target.value)}\n          />\n\n          <FaArrowRight\n            style={{\n              position: \"absolute\",\n              left: \"210px\",\n              top: \"2px\",\n              backgroundColor:\n                playStyle === \"forward\" ? \"darkgrey\" : \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"playStyle\", \"forward\")}\n          />\n          <FaArrowLeft\n            style={{\n              position: \"absolute\",\n              left: \"230px\",\n              top: \"2px\",\n              backgroundColor:\n                playStyle === \"backward\" ? \"darkgrey\" : \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"playStyle\", \"backward\")}\n          />\n          <FaExchangeAlt\n            style={{\n              position: \"absolute\",\n              left: \"252px\",\n              top: \"2px\",\n              backgroundColor:\n                playStyle === \"exchange\" ? \"darkgrey\" : \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"playStyle\", \"exchange\")}\n          />\n          <FaRetweet\n            style={{\n              position: \"absolute\",\n              left: \"276px\",\n              top: \"0px\",\n              fontSize: \"1.2rem\",\n              backgroundColor: looping ? \"darkgrey\" : \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"looping\", undefined)}\n          />\n        </div>\n\n        {/* all 8 notes */}\n        {l.map(x => {\n          let top = Math.floor(x / 3) * 160 + 30 + \"px\";\n          let left = (x % 3) * 105 + \"px\";\n          return (\n            <div\n              key={x}\n              style={{\n                position: \"absolute\",\n                top: top,\n                left: left\n              }}\n            >\n              <Beat\n                id={id}\n                num={x}\n                waveform={waveforms[x]}\n                modulation={modulations[x]}\n                modValue={modulationValues[x]}\n                duration={durations[x]}\n                note={notes[x]}\n                selected={selecteds[x]}\n                skipped={skippeds[x]}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Sequencer;\n","import React from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport { FaMinus, FaTimes } from \"react-icons/fa\";\nimport {\n  // #region all types\n  Delay,\n  Transposer,\n  Pan,\n  Player,\n  SignalGen,\n  Speaker,\n  DirectInput,\n  Pitch,\n  VSTHost,\n  Routing,\n  Mixer,\n  Record,\n  Spectroscope,\n  Oscilloscope,\n  Envelope,\n  Filter,\n  Keyboard,\n  SamplePlayer,\n  Sequencer\n  // #endregion\n} from \"./types/all\";\nimport store from \"../../index\";\n\nconst eva = typeName => {\n  let t;\n  switch (typeName) {\n    case \"Delay\":\n      t = Delay;\n      break;\n    case \"Transposer\":\n      t = Transposer;\n      break;\n    case \"Pan\":\n      t = Pan;\n      break;\n    case \"Player\":\n      t = Player;\n      break;\n    case \"SignalGen\":\n      t = SignalGen;\n      break;\n    case \"Speaker\":\n      t = Speaker;\n      break;\n    case \"DirectInput\":\n      t = DirectInput;\n      break;\n    case \"Pitch\":\n      t = Pitch;\n      break;\n    case \"VSTHost\":\n      t = VSTHost;\n      break;\n    case \"Routing\":\n      t = Routing;\n      break;\n    case \"Mixer\":\n      t = Mixer;\n      break;\n    case \"Record\":\n      t = Record;\n      break;\n    case \"Spectroscope\":\n      t = Spectroscope;\n      break;\n    case \"Oscilloscope\":\n      t = Oscilloscope;\n      break;\n    case \"Envelope\":\n      t = Envelope;\n      break;\n    case \"Filter\":\n      t = Filter;\n      break;\n    case \"Keyboard\":\n      t = Keyboard;\n      break;\n    case \"SamplePlayer\":\n      t = SamplePlayer;\n      break;\n    case \"Sequencer\":\n      t = Sequencer;\n      break;\n    default:\n      t = <span>No setup yet!</span>;\n  }\n  return t;\n};\n\nconst WithHeader = ({ blockInfo, nowOut, handleDelete }) => {\n  let {\n    typeName,\n    name,\n    id,\n    audioObj,\n    inDisabled,\n    outDisabled,\n    outNode,\n    inNode,\n    collapse,\n    color\n  } = blockInfo;\n  const Block = eva(typeName);\n  let inButton;\n  let outButton;\n\n  // conditionally render in and out buttons in the header\n  if (inDisabled) {\n    inButton = (\n      // nothing, placeholder\n      <div\n        className=\"btn btn-sm m-1 text-center\"\n        style={{\n          // width: \"1.5rem\",\n          height: \"1.5rem\",\n          fontSize: \"0.8rem\",\n          padding: \"0px\"\n        }}\n      />\n    );\n  } else {\n    inButton = (\n      <button\n        id=\"inButton\"\n        className=\"btn btn-light btn-sm m-1 text-center\"\n        style={{\n          width: \"1.5rem\",\n          height: \"1.5rem\",\n          fontSize: \"0.8rem\",\n          padding: \"0px\"\n        }}\n        onClick={() => {\n          store.dispatch({\n            type: \"CONNECTING_BLOCK\",\n            node: \"nowIn\",\n            value: [name, \"0\", id, audioObj]\n          });\n        }}\n      >\n        <div>{inNode[0] === undefined ? \"In\" : inNode[0][0]}</div>\n      </button>\n    );\n  }\n\n  const style1 = {\n    backgroundColor: \"white\",\n    textAlign: \"center\",\n    padding: \"0px\",\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n    fontSize: \"0.8rem\"\n  };\n  const circleStyle = {\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n    textAlign: \"center\",\n    fontSize: \"0.8rem\",\n    padding: \"0px\",\n    lineHeight: 1.428571429,\n    borderRadius: \"0.5rem\",\n    borderColor: \"black\",\n    backgroundColor: \"white\"\n  };\n\n  const outId = nowOut === undefined ? undefined : nowOut[2];\n\n  if (outDisabled) {\n    outButton = <span />;\n  } else {\n    outButton = (\n      <button\n        id=\"outButton\"\n        className=\"btn btn-sm text-center m-1\"\n        style={outId === id ? circleStyle : style1}\n        onClick={() =>\n          store.dispatch({\n            type: \"CONNECTING_BLOCK\",\n            node: \"nowOut\",\n            value: [name, \"0\", id, audioObj]\n          })\n        }\n      >\n        <div>{outNode[0] === undefined ? \"Out\" : outNode[0][0]}</div>\n      </button>\n    );\n  }\n\n  return (\n    <div\n      className=\"text-left my-2\"\n      style={{\n        width: \"20rem\",\n        backgroundColor: color,\n        borderColor: \"grey\",\n        borderStyle: \"solid\",\n        borderWidth: \"2px\"\n      }}\n    >\n      <div className=\"\">\n        {inButton}\n        <span className=\"m-1\" style={{ fontSize: \"0.8rem\" }} id=\"blockName\">\n          {name}\n        </span>\n        <span\n          className=\"badge badge-secondary badge-pill m-1\"\n          style={{ fontSize: \"0.8rem\" }}\n          id=\"typeName\"\n        >\n          {typeName}\n        </span>\n        <span className=\"float-right\">\n          <button\n            id=\"collapseButton\"\n            className=\"btn btn-light btn-sm m-1 text-center\"\n            style={{\n              width: \"1.5rem\",\n              height: \"1.5rem\",\n              fontSize: \"0.4rem\"\n            }}\n            onClick={() =>\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"collapse\",\n                value: undefined\n              })\n            }\n          >\n            <FaMinus style={{ marginLeft: \"-1px\" }} />\n          </button>\n\n          <button\n            id=\"closeButton\"\n            className=\"btn btn-light btn-sm m-1 text-center\"\n            style={{\n              width: \"1.5rem\",\n              height: \"1.5rem\",\n              fontSize: \"0.4rem\"\n            }}\n            onClick={() => {\n              // handleDelete();\n              store.dispatch({\n                type: \"DELETE_BLOCK\",\n                id: id\n              });\n            }}\n          >\n            <FaTimes style={{ marginLeft: \"-1px\" }} />\n          </button>\n          {outButton}\n        </span>\n      </div>\n      <Collapse isOpen={collapse}>\n        <Block blockInfo={blockInfo} />\n      </Collapse>\n    </div>\n  );\n};\n\nexport default WithHeader;\n","const toHex = (r, g, b) => {\n  return \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\n};\n\nconst specValues = {\n  Delay: {\n    color: toHex(210, 189, 120),\n    delayTime: 76,\n    feedback: 0.119,\n    kinect: false,\n    osc: undefined\n  },\n  Transposer: {\n    color: toHex(193, 133, 200),\n    buttonCents: 0,\n    sliderCents: 0,\n    osc: undefined\n  },\n  Pan: {\n    color: toHex(136, 179, 95),\n    panVal: 0,\n    kinect: false,\n    osc: undefined\n  },\n  Player: {\n    inDisabled: true,\n    color: toHex(229, 119, 125),\n    playing: false,\n    reversed: false,\n    loop: false,\n    speed: 1,\n    volume: 60,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    file: undefined,\n    kinect: false,\n    osc: undefined\n  },\n  SignalGen: {\n    color: toHex(89, 199, 198),\n    frequency: 440,\n    waveform: \"Silence\",\n    modulation: \"No Mod\",\n    MI: 0,\n    FD: 0,\n    volume: 0.6,\n    kinect: false,\n    osc: undefined\n  },\n  Speaker: {\n    color: toHex(240, 254, 199),\n    muted: false,\n    meterL: 60,\n    meterR: 60,\n    renderRate: 100\n  },\n  DirectInput: {\n    inDisabled: true,\n    color: toHex(200, 231, 253),\n    direction: 0,\n    muted: false,\n    channel: 1,\n    volume: 6,\n    osc: undefined\n  },\n  Pitch: {\n    color: toHex(220, 105, 216),\n    cents: 0,\n    kinect: false,\n    osc: undefined\n  },\n  VSTHost: {\n    color: toHex(136, 179, 95),\n    file: undefined,\n    module: true,\n    version: \"to Soundcool 3.1.1\",\n    channel: 1,\n    osc: undefined\n  },\n  Routing: {\n    color: toHex(58, 82, 221),\n    inDisabled: true,\n    outDisabled: true,\n    off1: true,\n    output11: false,\n    output21: false,\n    off2: true,\n    output12: false,\n    output22: false\n  },\n  Mixer: {\n    color: toHex(103, 227, 229),\n    inDisabled: true,\n    volumeMaster: 60,\n    volume1: 60,\n    volume2: 60,\n    volume3: 60,\n    volume4: 60,\n    volume5: 60,\n    volume6: 60,\n    volume7: 60,\n    volume8: 60,\n    osc: undefined\n  },\n  Record: {\n    color: toHex(159, 125, 119),\n    outDisabled: true,\n    module: false,\n    fileName: undefined,\n    recording: false,\n    volume: 60,\n    timer: 0\n  },\n  Spectroscope: {\n    color: toHex(141, 104, 133),\n    outDisabled: true,\n    renderRate: 100\n  },\n  Oscilloscope: {\n    color: toHex(141, 104, 133),\n    outDisabled: true,\n    renderRate: 100\n  },\n  Envelope: {\n    color: toHex(80, 174, 55),\n    envelope: [],\n    loop: false,\n    style: \"line\",\n    dur: 2,\n    osc: undefined\n  },\n  Filter: {\n    color: toHex(144, 81, 57)\n  },\n  Sequencer: {\n    color: toHex(202, 240, 253),\n    inDisabled: true,\n    outDisabled: true,\n    waveforms: [\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\"\n    ],\n    modulations: [\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\"\n    ],\n    modulationValues: [0, 0, 0, 0, 0, 0, 0, 0],\n    notes: [0, 4, 8, 10, 14, 18, 22, 0],\n    durations: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000],\n    selecteds: [true, true, true, true, true, true, true, true],\n    skippeds: [false, false, false, false, false, false, false, false],\n    looping: false,\n    playStyle: \"None\"\n  },\n  SamplePlayer: {\n    color: toHex(229, 119, 125),\n    inDisabled: true,\n    random: false,\n    loop: false,\n    speed: 1,\n    reversed: false,\n    kinect: false,\n    osc: undefined,\n    playings: [\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false\n    ],\n    files: [\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined\n    ],\n    masterVolume: 60\n  },\n  Keyboard: {\n    color: toHex(89, 162, 179),\n    inDisabled: true,\n    instrument: \"1 Acoustic Grand Piano\",\n    channel: 1,\n    viewNames: false,\n    volume: 60,\n    module: false,\n    octave: \"3\",\n    //\n    noteOn: [\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false\n    ],\n    midiMessage: undefined\n  }\n};\n\nexport default specValues;\n","import React from \"react\";\nimport store from \"../../index\";\nimport specValues from \"./blockSpecs\";\n\nconst addBlock = typeName => {\n  store.dispatch({\n    type: \"ADD_BLOCK\",\n    typeName,\n    values: {\n      // inNode and outNode are a list, since a block can have multiple input and output\n      inNode: [],\n      outNode: [],\n      collapse: false,\n      ...specValues[typeName]\n    }\n  });\n};\n\nconst AddBlock = () => {\n  return (\n    <React.Fragment>\n      <div class=\"dropdown\">\n        <button\n          className=\"btn btn-info m-2 dropdown-toggle\"\n          id=\"New Dropdown\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          New\n        </button>\n        <div class=\"dropdown-menu\" aria-labelledby=\"New Dropdown\">\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Delay\")}>\n            Delay\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Transposer\")}>\n            Transposer\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Pan\")}>\n            Pan\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Player\")}>\n            Player\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"SignalGen\")}>\n            SignalGen\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Speaker\")}>\n            Speaker\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"DirectInput\")}>\n            DirectInput\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Pitch\")}>\n            Pitch\n          </div>\n          {/* <div class=\"dropdown-item\" onClick={() => addBlock(\"VSTHost\")}>\n            VSTHost\n          </div> */}\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Routing\")}>\n            Routing\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Mixer\")}>\n            Mixer\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Record\")}>\n            Record\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Spectralscope\")}>\n            Spectralscope\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Oscilloscope\")}>\n            Oscilloscope\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Envelope\")}>\n            Envelope\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Filter\")}>\n            Filter\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Keyboard\")}>\n            Keyboard\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"SamplePlayer\")}>\n            SamplePlayer\n          </div>\n          <div class=\"dropdown-item\" onClick={() => addBlock(\"Sequencer\")}>\n            Sequencer\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AddBlock;\n","import React from \"react\";\nimport store from \"../../index\";\n\nconst SLButton = () => {\n  return (\n    <React.Fragment>\n      <button\n        className=\"btn btn-info m-2\"\n        onClick={() => {\n          store.dispatch({\n            type: \"SAVE_STATE\",\n            id: undefined\n          });\n        }}\n      >\n        Save\n      </button>\n      <button\n        className=\"btn btn-info m-2\"\n        onClick={() => {\n          store.dispatch({\n            type: \"LOAD_STATE\",\n            id: undefined\n          });\n        }}\n      >\n        Load\n      </button>\n    </React.Fragment>\n  );\n};\n\nexport default SLButton;\n","const AudioContext = window.AudioContext;\nconst scContext = new AudioContext();\n\nexport default scContext;\n","class ScModule {\n\n    constructor(context) {\n        this.context = context;\n        this.inputs = [];\n        this.outputs = [];\n        // this.inNode;\n        // this.outNode;\n        var connReady, connFailed;\n        this.connPromise = new Promise((resolve, reject) => {\n            connReady = resolve;\n            connFailed = reject;\n        });\n        this.connPromise.resolve = connReady;\n        this.connPromise.reject = connFailed;\n    }\n\n    connectTo(outScModule) {\n        this.outNode.connect(outScModule.inNode);\n        this.outputs.push(outScModule);\n        outScModule.inputs.push(this);\n        let outStr = 'Connection successful: '+\n            this.constructor.name+ ' --> '+\n            outScModule.constructor.name;\n        console.log(outStr);\n    }\n\n    connectAsync(outScModule) {\n        this.connPromise\n            .then(function(){\n                if (outScModule instanceof ScModule){\n                    this.outNode.connect(outScModule.inNode);\n                    let outStr = 'Connection successful: '+\n                        this.constructor.name+ ' --> '+\n                        outScModule.constructor.name;\n                    console.log(outStr);\n\n                    this.outputs.push(outScModule);\n                    outScModule.inputs.push(this);\n                    outScModule.connPromise.resolve()\n                } else {\n                    console.error('Argument for connect has to be' +\n                        ' ScModule instance');\n                    outScModule.connPromise.reject()\n                }\n            }.bind(this))\n            .catch(function(){\n                console.error('Failed to connect: '+\n                    this.constructor.name+' --> '+\n                    outScModule.constructor.name);\n                outScModule.connPromise.reject()\n            }.bind(this));\n    }\n\n    disconnect(outScModule) {\n        let outputId = this.outputs.indexOf(outScModule);\n        let inputId = outScModule.inputs.indexOf(this);\n        if (outputId === -1 || inputId === -1){\n            console.log('No connection to disconnect');\n        } else {\n            this.outNode.disconnect(outScModule.inNode);\n            this.outputs.splice(outputId, 1);\n            outScModule.inputs.splice(inputId, 1);\n        }\n    }\n\n    set volume(value) {\n        this.outNode.gain.value = parseFloat(value);\n    }\n\n    destroy() {\n\n    }\n}\n\nexport default ScModule;\n","class ScOscillator {\n  constructor(context, options = {}) {\n    this.context = context;\n    let defOpts;\n    defOpts = {\n      waveType: \"Silence\",\n      freq: 440\n    };\n    this.options = Object.assign(defOpts, options);\n    this.bufferSources = [\"Silence\", \"White Noise\", \"Pink Noise\"];\n    this.oscSources = [\"Sine Wave\", \"Triangle\", \"Sawtooth\", \"Square\"];\n    this.outNode = this.context.createGain();\n    this.connectSource(this.options.waveType);\n    this.frequency = this.options.freq;\n  }\n\n  connectSource(waveType) {\n    switch (waveType) {\n      case \"Sine Wave\":\n        this.inNode = this.context.createOscillator();\n        this.setOscType(waveType);\n        break;\n      case \"Triangle\":\n        this.inNode = this.context.createOscillator();\n        this.setOscType(waveType);\n        break;\n      case \"Sawtooth\":\n        this.inNode = this.context.createOscillator();\n        this.setOscType(waveType);\n        break;\n      case \"Square\":\n        this.inNode = this.context.createOscillator();\n        this.setOscType(waveType);\n        break;\n      case \"White Noise\":\n        this.inNode = this.createAndFillBuffer(\"White Noise\");\n        break;\n      case \"Pink Noise\":\n        this.inNode = this.createAndFillBuffer(\"Pink Noise\");\n        break;\n      case \"Silence\":\n        this.inNode = this.createAndFillBuffer(\"Silence\");\n        break;\n    }\n    this.inNode.start();\n    this.inNode.connect(this.outNode);\n  }\n\n  detachSource() {\n    this.inNode.stop();\n    this.inNode.disconnect(this.outNode);\n  }\n\n  setOscType(soundType) {\n    switch (soundType) {\n      case \"Sine Wave\":\n        this.inNode.type = \"sine\";\n        break;\n      case \"Triangle\":\n        this.inNode.type = \"triangle\";\n        break;\n      case \"Sawtooth\":\n        this.inNode.type = \"sawtooth\";\n        break;\n      case \"Square\":\n        this.inNode.type = \"square\";\n        break;\n    }\n  }\n\n  fillBuffer(buffer, soundType) {\n    let dataL = buffer.getChannelData(0);\n    let dataR = buffer.getChannelData(1);\n    switch (soundType) {\n      case \"White Noise\":\n        fillWhiteNoise(dataL, dataR);\n        break;\n      case \"Pink Noise\":\n        fillPinkNoise(dataL, dataR);\n        break;\n      case \"Silence\":\n        fillSilence(dataL, dataR);\n        break;\n    }\n  }\n\n  createAndFillBuffer(soundType) {\n    let inNode = this.context.createBufferSource();\n    const buffSize = 1 * this.context.sampleRate;\n    let buffer = this.context.createBuffer(\n      2,\n      buffSize,\n      this.context.sampleRate\n    );\n    this.fillBuffer(buffer, soundType);\n    inNode.buffer = buffer;\n    inNode.loop = true;\n    return inNode;\n  }\n\n  connect(outNode) {\n    this.outNode.connect(outNode);\n  }\n\n  disconnect(outNode) {\n    this.outNode.disconnect(outNode);\n  }\n\n  set waveform(newSoundType) {\n    if (\n      this.bufferSources.includes(this.options.waveType) &&\n      this.bufferSources.includes(newSoundType)\n    ) {\n      this.fillBuffer(this.inNode.buffer, newSoundType);\n    } else if (\n      this.oscSources.includes(this.options.waveType) &&\n      this.oscSources.includes(newSoundType)\n    ) {\n      this.setOscType(newSoundType);\n    } else {\n      this.detachSource();\n      this.connectSource(newSoundType);\n    }\n    this.options.waveType = newSoundType;\n    this.frequency = this.options.freq;\n  }\n\n  set frequency(value) {\n    this.options.freq = value;\n    if (this.oscSources.includes(this.options.waveType)) {\n      this.inNode.frequency.value = value;\n    } else {\n      let errStr =\n        \"WARN: Changing frequency value of non-\" +\n        \"Oscillator source has no effect.\";\n      console.log(errStr);\n    }\n  }\n}\n\nfunction fillWhiteNoise(dataL, dataR) {\n  let sample;\n  for (let i = 0; i < dataL.length; i++) {\n    sample = Math.random() * 2 - 1;\n    dataL[i] = sample;\n    dataR[i] = sample;\n  }\n}\n\nfunction fillSilence(dataL, dataR) {\n  let sample;\n  for (let i = 0; i < dataL.length; i++) {\n    sample = 0;\n    dataL[i] = sample;\n    dataR[i] = sample;\n  }\n}\n\nfunction fillPinkNoise(dataL, dataR) {\n  /**\n   * Approximates pink noise effect using\n   * Paul Kellet’s refined method\n   *\n   * source:\n   * http://noisehack.com/generate-noise-web-audio-api\n   */\n\n  let b0 = 0,\n    b1 = 0,\n    b2 = 0,\n    b3 = 0,\n    b4 = 0,\n    b5 = 0,\n    b6 = 0;\n  let sample;\n\n  for (let i = 0, imax = dataL.length; i < imax; i++) {\n    let white = Math.random() * 2 - 1;\n\n    b0 = 0.99886 * b0 + white * 0.0555179;\n    b1 = 0.99332 * b1 + white * 0.0750759;\n    b2 = 0.969 * b2 + white * 0.153852;\n    b3 = 0.8665 * b3 + white * 0.3104856;\n    b4 = 0.55 * b4 + white * 0.5329522;\n    b5 = -0.7616 * b5 - white * 0.016898;\n\n    sample = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n    sample *= 0.11;\n    dataL[i] = sample;\n    dataR[i] = sample;\n    b6 = white * 0.115926;\n  }\n}\n\nexport default ScOscillator;\n","import ScModule from './sc-module.js';\nimport ScOscillator from './sc-oscillator.js';\n\nclass ScSignalGen extends ScModule {\n\n    constructor(context, options={}) {\n        super(context);\n        let defOpts = {'waveType':'White Noise',\n                       'freq':440,\n                       'mod':'No Mod',\n                       'modParam':1.0};\n        this.options = Object.assign(defOpts, options);\n        this.setupNodes();\n        this.start();\n    }\n\n    setupNodes() {\n        this.gainNode = this.context.createGain();\n        this.inNode = this.mod = this.context.createGain();\n        this.carr = new ScOscillator(this.context, this.options);\n        this.outNode = this.context.createGain();\n        this.modParamNode = this.context.createConstantSource();\n        this.modParamNode.start();\n\n        this.connectNodes();\n\n        this.waveform = this.options.waveType;\n        this.frequency = parseInt(this.options.freq);\n        this.modParam = parseFloat(this.options.modParam);\n    }\n\n    connectNodes() {\n        switch(this.options.mod) {\n            case 'RM':\n                this.carr.connect(this.gainNode);\n                this.mod.connect(this.gainNode.gain);\n                this.gainNode.connect(this.outNode);\n                break;\n            case 'AM':\n                this.modParamNode.connect(this.mod.gain);\n                this.carr.connect(this.gainNode);\n                this.mod.connect(this.gainNode.gain);\n                this.gainNode.connect(this.outNode);\n                this.carr.connect(this.outNode);\n                break;\n            case 'FM':\n                this.modParamNode.connect(this.mod.gain);\n                this.mod.connect(this.carr.inNode.frequency);\n                this.carr.connect(this.outNode);\n                break;\n            case 'No Mod':\n                this.carr.connect(this.outNode);\n                break;\n        }\n    }\n\n    disconnectNodes() {\n        switch(this.options.mod) {\n            case 'RM':\n                this.carr.disconnect(this.gainNode);\n                this.mod.disconnect(this.gainNode.gain);\n                this.gainNode.disconnect(this.outNode);\n                break;\n            case 'AM':\n                this.modParamNode.disconnect(this.mod.gain);\n                this.carr.disconnect(this.gainNode);\n                this.mod.disconnect(this.gainNode.gain);\n                this.gainNode.disconnect(this.outNode);\n                this.carr.disconnect(this.outNode);\n                break;\n            case 'FM':\n                this.modParamNode.disconnect(this.mod.gain);\n                this.mod.disconnect(this.carr.frequency);\n                this.carr.disconnect(this.outNode);\n                break;\n            case 'No Mod':\n                this.carr.disconnect(this.outNode);\n                break;\n        }\n    }\n\n    set modulation(modNew) {\n        this.disconnectNodes();\n        this.options.mod = modNew;\n        this.connectNodes();\n    }\n\n    start() {\n        //this.carr.start();\n    }\n\n    stop() {\n        this.carr.stop();\n    }\n\n    set frequency(value) {\n        value = parseFloat(value);\n        this.options.freq = value;\n        this.carr.frequency = value;\n    }\n\n    set waveform(type) {\n        this.options.waveType = type;\n        this.carr.waveform = type;\n    }\n\n    set modParam(value) {\n        value = parseFloat(value);\n        this.options.modParam = value;\n        this.modParamNode.offset.value = value;\n    }\n\n    set MI(value) {\n        this.modParam = value;\n    }\n\n    set FD(value) {\n        this.modParam = value;\n    }\n\n}\n\nexport default ScSignalGen;\n","class ScAnalyzer {\n\n    constructor(context, options={}) {\n        this.context = context;\n        let defOpts;\n        defOpts = {\n            'fftSize' : 2048,\n            'type' : 'frequency',\n            'arraySize' : 256,\n            'smoothing': 0.6\n        };\n        this.options = Object.assign(defOpts, options);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.analyzer = this.context.createAnalyser();\n        this.inNode = this.analyzer;\n        this.analyzer.smoothingTimeConstant = 0;\n        switch (this.options.type) {\n            case 'waveform':\n                this.array = new Uint8Array(this.options.arraySize);\n                this.getData = function() {\n                    this.analyzer.getByteTimeDomainData(this.array);\n                    return this.array;\n                };\n                break;\n            case 'frequency':\n                this.analyzer.fftSize = this.options.fftSize;\n                this.array = new Float32Array(this.analyzer.frequencyBinCount);\n                this.getData = function() {\n                    this.analyzer.getFloatFrequencyData(this.array);\n                    return this.array;\n                };\n                break;\n            case 'level':\n                this.array = new Uint8Array(this.options.arraySize);\n                this.getData = function() {\n                    this.analyzer.getByteTimeDomainData(this.array);\n                    let data = this.array;\n                    let sqSum = 0;\n                    for (let i = 0; i < data.length; i++){\n                        sqSum += data[i] * data[i];\n                    }\n                    let rms = Math.sqrt(sqSum / data.length);\n                    rms = Math.max(rms, this.options.smoothing);\n                    let db = 20 * (Math.log(rms) / Math.LN10);\n                    return db;\n                };\n                break;\n        }\n    }\n\n}\n\nexport default ScAnalyzer;\n","import ScModule from './sc-module.js';\nimport ScAnalyzer from './sc-analyzer.js';\n\nclass ScSpeakers extends ScModule {\n\n    constructor(context) {\n        super(context);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.inNode = this.context.createGain();\n        this.outNode = this.context.destination;\n        this.splitter = new ChannelSplitterNode(this.context, \n                                {'numberOfOutputs' : 2})\n        this.analyzerL = new ScAnalyzer(this.context,\n                                {'type' : 'level'});\n        this.analyzerR = new ScAnalyzer(this.context,\n                                {'type' : 'level'});\n        this.inNode.connect(this.splitter);\n        this.inNode.connect(this.outNode);\n        this.splitter.connect(this.analyzerL.inNode, 0);\n        this.splitter.connect(this.analyzerR.inNode, 1);\n    }\n\n    getAudioData() {\n        let dataL = this.analyzerL.getData();\n        let dataR = this.analyzerR.getData();\n        return [dataL, dataR];\n    }\n\n\n}\n\nexport default ScSpeakers;\n","import ScModule from './sc-module.js';\n\nclass ScDelay extends ScModule {\n\n    constructor(context, options={}) {\n        super(context);\n        let defOpts = {'delayTime':0.1, 'feedback':0.3};\n        this.options = Object.assign(defOpts, options);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.inNode = this.context.createGain();\n        this.outNode = this.context.createGain();\n        this.delayNode = this.context.createDelay();\n        this.delayGain = this.context.createGain();\n\n        this.inNode.connect(this.delayNode);\n        this.delayNode.connect(this.delayGain);\n        this.delayGain.connect(this.delayNode);\n        this.delayNode.connect(this.outNode);\n\n        this.delayNode.delayTime.value = this.options.delayTime;\n        this.delayGain.gain.value = this.options.feedback;\n    }\n\n    set delayFeedback(val) {\n        this.options.feedback = val;\n        this.delayGain.gain.value = val;\n    }\n\n    set delayTime(val) {\n        this.options.delayTime = val;\n        this.delayNode.delayTime.value = val;\n    }\n}\n\n\nexport default ScDelay;\n","import ScModule from './sc-module.js';\n\nfunction connectStream(stream) {\n    this.inNode = this.context.createMediaStreamSource(stream);\n    this.outNode = this.context.createGain();\n    this.inNode.connect(this.outNode);\n\n    this.connPromise.resolve();\n}\n\nfunction connectError(error) {\n    console.error('ScDirectIn: '+error.message);\n    this.connPromise.reject();\n}\n\nclass ScDirectIn extends ScModule {\n\n    constructor(context) {\n        super(context);\n        this.connectStream = connectStream.bind(this);\n        this.connectError = connectError.bind(this);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        navigator.mediaDevices.getUserMedia({audio: {channelCount: 2}})\n            .then(this.connectStream)\n            .catch(this.connectError);\n    }\n}\n\n\nexport default ScDirectIn;\n","import ScModule from './sc-module.js';\n\nfunction createBuffer(buffer) {\n    this.inNode = this.context.createBufferSource();\n    this.outNode = this.context.createGain();\n    this.inNode.loop = this.options.loop;\n    this.inNode.playbackRate.value = this.options.speed;\n    this.inNode.buffer = buffer;\n    if (this.options.reverse) {\n        this.reverse();\n        this.options.reverse = true;\n    }\n    this.inNode.connect(this.outNode);\n    this.connPromise.resolve();\n}\n\nfunction createBufferError(error) {\n    console.error('ScPlayer: '+error.message);\n    this.connPromise.reject();\n}\n\nclass ScPlayer extends ScModule {\n\n    constructor(context, options={}) {\n        super(context);\n        let defOpts = {'path':'',\n                       'loop':false,\n                       'speed':1.0,\n                       'reverse':false};\n        this.options = Object.assign(defOpts, options);\n        this.createBuffer = createBuffer.bind(this);\n        this.createBufferError = createBufferError.bind(this);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        let request = new XMLHttpRequest();\n        request.open('GET', this.options.path, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function(progressEvent){\n            this.context.decodeAudioData(progressEvent.target.response,\n                this.createBuffer,\n                this.createBufferError)\n        }.bind(this);\n        request.send();\n    }\n\n    start() {\n        this.inNode.start(0);\n    }\n\n    stop() {\n        this.inNode.stop();\n    }\n\n    reverse() {\n        this.inNode.buffer.getChannelData(0).reverse();\n        this.inNode.buffer.getChannelData(1).reverse();\n        this.options.reverse = !this.options.reverse;\n    }\n\n    set speed(value) {\n        value = parseFloat(value);\n        this.options.speed = value;\n        this.inNode.playbackRate.value = value;\n    }\n}\n\nexport default ScPlayer;\n","import ScModule from './sc-module.js';\n\nclass ScPan extends ScModule {\n\n    constructor(context, options={}) {\n        super(context);\n        let defOpts = {'panVal':0};\n        this.options = Object.assign(defOpts, options);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.inNode = this.outNode = this.context.createStereoPanner();\n        this.pan = this.options.panVal;\n    }\n\n    set pan(value){\n        value = parseFloat(value);\n        this.options.panVal = value;\n        this.inNode.pan.value = value;\n    }\n\n}\n\nexport default ScPan;\n","import ScModule from './sc-module.js';\nimport ScAnalyzer from './sc-analyzer.js';\n\nclass ScOscilloscope extends ScModule {\n\n    constructor(context) {\n        super(context);\n        this.options = {\n            'type' : 'waveform',\n            'arraySize' : 256,\n            'renderRate' : 100\n        };\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.analyzerNode = new ScAnalyzer(this.context, this.options);\n        this.inNode = this.analyzerNode.inNode;\n    }\n\n    getAudioData() {\n        return this.analyzerNode.getData();\n    }\n\n}\n\nexport default ScOscilloscope;\n","import ScModule from './sc-module.js';\nimport ScAnalyzer from './sc-analyzer.js';\n\nclass ScSpectroscope extends ScModule {\n\n    constructor(context) {\n        super(context);\n        this.options = {\n            'type' : 'frequency',\n            'renderRate' : 100,\n            'fftSize' : 2048\n        };\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.analyzerNode = new ScAnalyzer(this.context, this.options);\n        this.inNode = this.analyzerNode.inNode;\n    }\n\n    getAudioData() {\n        return this.analyzerNode.getData();\n    }\n\n}\n\nexport default ScSpectroscope;\n","import scContext from \"../../audio/sc-context\";\nimport ScSignalGen from \"../../audio/sc-signalgen\";\nimport ScSpeakers from \"../../audio/sc-speakers\";\nimport ScDelay from \"../../audio/sc-delay\";\nimport ScDirectIn from \"../../audio/sc-directin\";\nimport ScPlayer from \"../../audio/sc-player\";\nimport ScPan from \"../../audio/sc-pan\";\nimport ScOscilloscope from \"../../audio/sc-oscilloscope\";\nimport ScSpectroscope from \"../../audio/sc-spectroscope\";\n\nconst eva = typeName => {\n  let t;\n  switch (typeName) {\n    case \"Delay\":\n      t = new ScDelay(scContext);\n      break;\n    // case \"Transposer\":\n    //   t = new ScTransposer(scContext);\n    //   break;\n    case \"Pan\":\n      t = new ScPan(scContext);\n      break;\n    case \"Player\":\n      t = new ScPlayer(scContext);\n      break;\n    case \"SignalGen\":\n      t = new ScSignalGen(scContext, {\n        waveType: \"Silence\",\n        freq: 440,\n        mod: \"No Mod\",\n        modParam: 1.0\n      });\n      break;\n    case \"Speaker\":\n      t = new ScSpeakers(scContext);\n      break;\n    case \"DirectInput\":\n      t = new ScDirectIn(scContext);\n      break;\n    // case \"Pitch\":\n    //   t = new ScPitch(scContext);\n    //   break;\n    // case \"VSTHost\":\n    //   t = new ScVSTHost(scContext);\n    //   break;\n    // case \"Routing\":\n    //   t = new ScRouting(scContext);\n    //   break;\n    // case \"Mixer\":\n    //   t = new ScMixer(scContext);\n    //   break;\n    case \"Oscilloscope\":\n      t = new ScOscilloscope(scContext);\n      break;\n    case \"Spectroscope\":\n      t = new ScSpectroscope(scContext);\n      break;\n    default:\n      t = undefined;\n  }\n  return t;\n};\n\nconst block = (state, action) => {\n  switch (action.type) {\n    case \"ADD_BLOCK\":\n      return {\n        typeName: action.typeName,\n        id: action.newId,\n        typeId: action.newTypeId,\n        name: action.typeName.charAt(0) + action.newTypeId,\n        collapse: false,\n        audioObj: eva(action.typeName),\n        // contains generic values like in, out, collapse and also personal values\n        ...action.values\n      };\n    case \"CHANGE_BLOCK\":\n      if (state.id === action.id) {\n        {\n          // The case that field is an array since the module has a lot of\n          // submodules (like mixer, sequencer and samplePlay), we based on the\n          // submodule number to update the corresponding information in the field\n          if (action.num !== undefined) {\n            state[action.field][action.num] =\n              // when action.value is undefined, it means a boolean true/false change\n              action.value === undefined\n                ? !state[action.field][action.num]\n                : action.value;\n          } else {\n            state[action.field] =\n              action.value === undefined ? !state[action.field] : action.value;\n\n            // also update the audioObj (will ignore if there is no such field in object)\n            if (state.audioObj !== undefined) {\n              state.audioObj[action.field] =\n                action.value === undefined\n                  ? !state.audioObj[action.field]\n                  : action.value;\n            }\n          }\n        }\n        return state;\n      } else {\n        return state;\n      }\n    // deal with breaking connections when blocks are deleted\n    case \"DELETE_BLOCK\":\n      let newInNode;\n      let newOutNode;\n      // if the connected block no longer exist, we change the\n      // entry back to undefined\n      newInNode = state.inNode.map(n => {\n        return action.blocks.filter(t => t.id === n[1]).length === 0\n          ? undefined\n          : n;\n      });\n      newOutNode = state.outNode.map(n => {\n        return action.blocks.filter(t => t.id === n[1]).length === 0\n          ? undefined\n          : n;\n      });\n      return { ...state, inNode: newInNode, outNode: newOutNode };\n\n    case \"CONNECTING_BLOCK\":\n      // The name of in and out blocks\n      let [nameIn, nameOut] = [action.nowIn[0], action.nowOut[0]];\n      // The numbering of in/out port (some blocks will have multiple in/out)\n      let [indexIn, indexOut] = [action.nowIn[1], action.nowOut[1]];\n      // The id of the blocks that we are connecting\n      let [idIn, idOut] = [action.nowIn[2], action.nowOut[2]];\n      let [audioObjIn, audioObjOut] = [action.nowIn[3], action.nowOut[3]];\n\n      if (state.id === idIn) {\n        if (state.id === idOut) {\n          // don't connect to itself, except special case (Routing)\n          return state;\n        } else {\n          // if this is the nowin node, we shoud update it's inNode information\n          let newInNode = [...state.inNode];\n          newInNode[indexIn] = [nameOut, idOut];\n          return { ...state, inNode: newInNode };\n        }\n      } else {\n        if (state.id === idOut) {\n          // connect the audio objects together\n          if (state.audioObj !== undefined) {\n            state.audioObj.connectTo(audioObjIn);\n          }\n          // then update the ui information\n          let newOutNode = [...state.outNode];\n          newOutNode[indexOut] = [nameIn, idIn];\n          return { ...state, outNode: newOutNode };\n        } else {\n          return state;\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default block;\n","import block from \"./block\";\n\nconst allTypes = {\n  Delay: 1,\n  Transposer: 1,\n  Pan: 1,\n  Player: 1,\n  SignalGen: 1,\n  Speaker: 1,\n  DirectInput: 1,\n  Pitch: 1,\n  VSTHost: 1,\n  Routing: 1,\n  Mixer: 1,\n  Record: 1,\n  Spectroscope: 1,\n  Oscilloscope: 1,\n  Envelope: 1,\n  Filter: 1,\n  Keyboard: 1,\n  SamplePlayer: 1,\n  Sequencer: 1\n};\nconst blocks = (\n  state = {\n    bs: [],\n    nextBlockId: 1,\n    nextTypeId: allTypes,\n    nowIn: [],\n    nowOut: []\n  },\n  action\n) => {\n  let { bs, nextBlockId, nextTypeId, nowIn, nowOut } = state;\n  switch (action.type) {\n    case \"ADD_BLOCK\": {\n      // add the count information into action, so block knows the count when newing\n      let newId = nextBlockId;\n      let typeIds = { ...nextTypeId };\n      let newTypeId = typeIds[action.typeName]++;\n      let newAction = { ...action, newId, newTypeId };\n      return {\n        nowIn,\n        nowOut,\n        bs: [...bs, block(undefined, newAction)],\n        nextBlockId: newId + 1,\n        nextTypeId: typeIds\n      };\n    }\n    case \"CHANGE_BLOCK\":\n      return {\n        nextBlockId,\n        nextTypeId,\n        nowIn,\n        nowOut,\n        bs: bs.map(t => block(t, action))\n      };\n    case \"DELETE_BLOCK\":\n      let filteredBs = bs.filter(t => t.id !== action.id);\n      // let deletedBlock = bs.filter(t => t.id === action.id)[0];\n      // console.log(\"hello: \" + deletedBlock.unbindCanvas);\n      // deletedBlock.unbindCanvas();\n      // deletedBlock.unbindCanvas === undefined\n      //   ? pass\n      //   : deletedBlock.unbindCanvas();\n      let newBs = filteredBs.map(t =>\n        // pass in the block, so we can check for each connection that\n        // whether the block still exist\n        block(t, { ...action, blocks: filteredBs })\n      );\n      return {\n        nextBlockId,\n        nextTypeId,\n        nowIn,\n        nowOut,\n        bs: newBs\n      };\n    case \"CONNECTING_BLOCK\":\n      let s = { ...state };\n      // in or out?\n      s[action.node] = action.value;\n      // if both nowIn and nowOut are assigned and the blocks exists\n      if (\n        s.nowIn[0] !== undefined &&\n        s.nowOut[0] !== undefined &&\n        s.bs.filter(t => t.id === s.nowIn[2]).length === 1 &&\n        s.bs.filter(t => t.id === s.nowOut[2]).length === 1\n      ) {\n        return {\n          // go to each block and change the inNode and outNode for the connected block\n          ...s,\n          bs: s.bs.map(t =>\n            block(t, { ...action, nowIn: s.nowIn, nowOut: s.nowOut })\n          ),\n          nowIn: [],\n          nowOut: []\n        };\n      } else {\n        return s;\n      }\n    case \"SAVE_STATE\":\n      localStorage.setItem(\"myState\", JSON.stringify(state));\n      return state;\n    case \"LOAD_STATE\":\n      let newState = localStorage.getItem(\"project\" + action.id);\n      // TODO: validation to check the state\n      if (newState && JSON.parse(newState) !== null) {\n        return JSON.parse(newState);\n      } else {\n        console.log(\"here\");\n        return state;\n      }\n    default:\n      return state;\n  }\n};\n\nexport default blocks;\n","export const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n};\r\n\r\nexport const getListStyle = isDraggingOver => ({\r\n  color: \"white\",\r\n  paddingTop: 3,\r\n  paddingRight: 4,\r\n  background: isDraggingOver ? \"lightblue\" : \"transparent\",\r\n  \"min-height\": \"100vh\"\r\n});\r\n\r\nexport const getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: 5,\r\n  marginTop: 1,\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nexport const move = (source, destination, droppableSource, droppableDestination, lastIndex, typeName) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  if (!(droppableDestination.droppableId === \"sidebar1\" || droppableDestination.droppableId === \"sidebar2\")) \r\n  {\r\n    let newValue = Object.assign({}, sourceClone[droppableSource.index]);\r\n    // newValue.id = newValue.id + lastIndex;\r\n    if (!(droppableSource.droppableId === \"sidebar1\" || droppableSource.droppableId === \"sidebar2\")) \r\n    {\r\n      sourceClone.splice(droppableSource.index, 1);\r\n    }\r\n    else\r\n    {\r\n    newValue.id = newValue.id + lastIndex;\r\n    newValue.typeName = typeName;\r\n    }\r\n    destClone.splice(droppableDestination.index, 0, newValue);\r\n  }\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n  return result;\r\n};","export const sidebar1 = [\r\n  {\r\n    id: \"Delay\",\r\n    typeName: \"Delay\",\r\n    image: \"/assets/images/Delay.png\",\r\n    // content: \"Pan\",\r\n    // additional: \"1\",\r\n    // icon: \"https://picsum.photos/id/10/50/50\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"SignalGen\",\r\n    typeName: \"SignalGen\",\r\n    image: \"/assets/images/SignalGen.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Speaker\",\r\n    typeName: \"Speaker\",\r\n    image: \"/assets/images/Speaker.png\",\r\n    // content: \"Transposer\",\r\n    // additional: \"2\",\r\n    // icon: \"https://picsum.photos/id/11/50/50\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"DirectInput\",\r\n    typeName: \"DirectInput\",\r\n    image: \"/assets/images/DirectInput.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Mixer\",\r\n    typeName: \"Mixer\",\r\n    image: \"/assets/images/Mixer.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Pan\",\r\n    typeName: \"Pan\",\r\n    image: \"/assets/images/Pan.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Player\",\r\n    typeName: \"Player\",\r\n    image: \"/assets/images/Player.png\",\r\n    lastIndex: 1\r\n  }\r\n];\r\n\r\nexport const sidebar2 = [\r\n  // {\r\n  //     id: 'delay',\r\n  //     // content: \"Delay\",\r\n  //     // additional: \"3\",\r\n  //     // icon: \"https://picsum.photos/id/12/50/50\",\r\n  //     lastIndex:1\r\n  //   }\r\n\r\n  {\r\n    id: \"Pitch\",\r\n    typeName: \"Pitch\",\r\n    image: \"/assets/images/Pitch.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Routing\",\r\n    typeName: \"Routing\",\r\n    image: \"/assets/images/Routing.PNG\",\r\n    lastIndex: 1\r\n  },\r\n\r\n  {\r\n    id: \"Transposer\",\r\n    image: \"/assets/images/Transposer.png\",\r\n    typeName: \"Transposer\",\r\n    lastIndex: 1\r\n  },\r\n  //   {\r\n  //     id: \"Record\",\r\n  //     typeName: \"Record\",\r\n  //     image: \"/assets/images/Record.png\",\r\n  //     lastIndex: 1\r\n  //   },\r\n  {\r\n    id: \"Oscilloscope\",\r\n    typeName: \"Oscilloscope\",\r\n    image: \"/assets/images/Oscilloscope.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Spectroscope\",\r\n    typeName: \"Spectroscope\",\r\n    image: \"/assets/images/Spectroscope.png\",\r\n    lastIndex: 1\r\n  }\r\n];\r\n\r\nexport const major1 = [];\r\n\r\nexport const major2 = [];\r\n","import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { reorder, getListStyle, getItemStyle, move } from \"./extra\";\n// import myAction from \"../reducers/major_boxes\";\nimport WithHeader from \"../Components/WithHeader\";\n\n// import {BLOCKS} from './shared/blocks';\nimport { sidebar1, sidebar2, major1, major2 } from \"../shared/content_box\";\n\nimport store from \"../../index\";\nimport specValues from \"../Components/blockSpecs.jsx\";\n\nconst addBlock = typeName => {\n  store.dispatch({\n    type: \"ADD_BLOCK\",\n    typeName,\n    values: {\n      // inNode and outNode are a list, since a block can have multiple input and output\n      inNode: [],\n      outNode: [],\n      collapse: false,\n      ...specValues[typeName]\n    }\n  });\n};\n\nclass ProjectPage extends React.Component {\n  idList = {\n    sidebar1: \"sidebar1\",\n    sidebar2: \"sidebar2\",\n    major1: \"major1\",\n    major2: \"major2\"\n  };\n  getList = id => this.state[this.idList[id]];\n\n  getListNameFromId = id => this.state[id];\n\n  handleDelete = id => {\n    // console.log(this.state[\"major1\"]);\n    // const list;\n    let list;\n    if (this.state[\"major1\"].filter(a => a.id === id).length) {\n      list = \"major1\";\n    }\n    if (this.state[\"major2\"].filter(a => a.id === id).length) {\n      list = \"major2\";\n    }\n    // console.log();\n    this.setState({ [list]: this.getList(list).filter(a => a.id !== id) });\n    // console.log(this.state[\"major1\"].filter(a => a.id!=id));\n    // this.setState([list]: );\n  };\n\n  onDragEnd = result => {\n    // console.log(result);\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n      const result = {};\n      result[destination.droppableId] = items;\n      const destinationList = this.idList[destination.droppableId];\n      this.setState({ [destinationList]: result[destination.droppableId] });\n    } else {\n      const list = this.getList(source.droppableId);\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination,\n        list[source.index][\"lastIndex\"],\n        list[source.index][\"typeName\"]\n      );\n      list[source.index][\"lastIndex\"]++;\n      this.setState(this.state);\n      const sourceList = this.idList[source.droppableId];\n      const destinationList = this.idList[destination.droppableId];\n      // console.log(this.state[sourceList]);\n\n      this.setState({\n        [sourceList]: result[source.droppableId],\n        [destinationList]: result[destination.droppableId]\n      });\n    }\n    // console.log(source.droppableId);\n    // console.log(destination.droppableId);\n    if (\n      (source.droppableId === \"sidebar1\" ||\n        source.droppableId === \"sidebar2\") &&\n      (destination.droppableId === \"major1\" ||\n        destination.droppableId === \"major2\")\n    ) {\n      addBlock(result.draggableId);\n    }\n  };\n\n  fetchContent(type, item, snapshot) {\n    if (type === \"sidebar\") {\n      return (\n        <div>\n          <img src={item.image} alt={item.id} />\n        </div>\n      );\n    } else if (type === \"contentBox\") {\n      let { blocks } = { ...store.getState() };\n      // console.log(blocks.bs[0]);\n      let { bs, nowOut } = blocks;\n      var b = bs.filter(block => {\n        return (\n          block.typeName === item.typeName && block.typeId === item.lastIndex\n        );\n      })[0];\n      const param = b.typeName + b.typeId;\n\n      return (\n        <div className=\"d-flex align-items-center\">\n          <WithHeader\n            key={b.id}\n            blockInfo={b}\n            nowOut={nowOut}\n            handleDelete={() => this.handleDelete(param)}\n          />\n          {/* <button onClick={() => this.handleDelete(param)}>x</button> */}\n        </div>\n      );\n    }\n  }\n\n  display(snapshot) {\n    return <div>{snapshot.isDraggingOver}</div>;\n  }\n\n  droppableContructur(id, list, type) {\n    return (\n      <Droppable droppableId={id}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}\n          >\n            {this.display(snapshot)}\n            {list.map((item, index) => (\n              <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    // style={getItemStyle(\n                    //   snapshot.isDragging,\n                    //   provided.draggableProps.style\n                    // )}\n                  >\n                    {this.fetchContent(type, item, snapshot)}\n                    {/* <button></button> */}\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sidebar1: sidebar1,\n      sidebar2: sidebar2,\n      major1: major1,\n      major2: major2\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <div class=\"container-fluid\">\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <div class=\"row text-center\">\n              <div class=\"col-sm-3\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                    {this.droppableContructur(\n                      \"sidebar1\",\n                      this.state.sidebar1,\n                      \"sidebar\"\n                    )}\n                  </div>\n                  <div class=\"col-sm-6\">\n                    {this.droppableContructur(\n                      \"sidebar2\",\n                      this.state.sidebar2,\n                      \"sidebar\"\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-sm-9\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6 full pl-3\">\n                    {this.droppableContructur(\n                      \"major1\",\n                      this.state.major1,\n                      \"contentBox\"\n                    )}\n                  </div>\n                  <div class=\"col-sm-6 full\">\n                    {this.droppableContructur(\n                      \"major2\",\n                      this.state.major2,\n                      \"contentBox\"\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </DragDropContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport WithHeader from \"../src/ui/Components/WithHeader\";\nimport AddBlock from \"./ui/Components/AddBlock\";\nimport SLButton from \"./ui/Components/SLButton\";\nimport blocks from \"./ui/reducers/blocks\";\nimport { createStore, combineReducers } from \"redux\";\nimport ProjectPage from \"./ui/component_pp/ProjectPage\";\n// #region reducers\n\nconst blockApp = combineReducers({\n  blocks\n});\n// #endregion\n\nconst store = createStore(blockApp);\nexport default store;\n\nconst BlockList = ({ blocks, nowOut }) => {\n  return (\n    <React.Fragment>\n      {blocks.map(b => (\n        <WithHeader key={b.id} blockInfo={b} nowOut={nowOut} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nclass BlockApp extends React.Component {\n  // { bs, nowOut } = this.props.blocks;\n\n  componentDidMount() {\n    console.log(window.location.href + \"\");\n    console.log(window.location.href.toString());\n    console.log(window.location.href.toString().substring(37));\n\n    const projectId = window.location.href.toString().substring(37);\n\n    store.dispatch({\n      type: \"LOAD_STATE\",\n      id: projectId\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        {/* <SLButton />\n      <ProjectPage /> */}\n\n        <SLButton />\n        <AddBlock />\n        <BlockList\n          blocks={this.props.blocks.bs}\n          nowOut={this.props.blocks.nowOut}\n        />\n      </div>\n    );\n  }\n}\n\nconst render = () => {\n  ReactDOM.render(\n    <BlockApp {...store.getState()} />,\n    document.getElementById(\"root\")\n  );\n};\n\nstore.subscribe(render);\nrender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
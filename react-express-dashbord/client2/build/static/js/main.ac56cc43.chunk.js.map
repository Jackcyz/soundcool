{"version":3,"sources":["serviceWorker.js","audio/sc-context.js","audio/sc-module.js","audio/sc-oscillator.js","audio/sc-signalgen.js","audio/sc-analyzer.js","audio/sc-speakers.js","audio/sc-delay.js","audio/sc-directin.js","audio/sc-player.js","audio/sc-pan.js","audio/sc-oscilloscope.js","audio/sc-spectroscope.js","ui/reducers/block.js","ui/reducers/blocks.js","ui/component_pp/extra.js","handlers.js","ui/Components/types/Delay.jsx","ui/Components/types/Transposer.jsx","ui/Components/types/Pan.jsx","ui/Components/types/Player.jsx","ui/Components/types/SignalGen.jsx","ui/Components/types/Speaker.jsx","ui/Components/types/DirectInput.jsx","ui/Components/types/Pitch.jsx","ui/Components/types/VSTHost.jsx","ui/Components/types/Routing.jsx","ui/Components/types/Mixer.jsx","ui/Components/types/Record.jsx","ui/Components/types/Spectroscope.jsx","ui/Components/types/Oscilloscope.jsx","ui/Components/types/Envelope.jsx","ui/Components/types/Filter.jsx","ui/Components/types/Keyboard.jsx","ui/Components/types/SamplePlayer.jsx","ui/Components/types/Sequencer.jsx","ui/Components/WithHeader.jsx","ui/shared/content_box.js","ui/Components/blockSpecs.jsx","ui/component_pp/ProjectPage.js","index.js"],"names":["Boolean","window","location","hostname","match","scContext","AudioContext","ScModule","context","connReady","connFailed","Object","classCallCheck","this","inputs","outputs","connPromise","Promise","resolve","reject","outScModule","outNode","connect","inNode","push","outStr","constructor","name","console","log","then","error","bind","catch","outputId","indexOf","inputId","disconnect","splice","value","gain","parseFloat","ScOscillator","defOpts","options","arguments","length","undefined","waveType","freq","assign","bufferSources","oscSources","createGain","connectSource","frequency","createOscillator","setOscType","createAndFillBuffer","start","stop","soundType","type","buffer","dataL","getChannelData","dataR","sample","i","Math","random","fillWhiteNoise","b0","b1","b2","b3","b4","b5","b6","imax","white","fillPinkNoise","fillSilence","createBufferSource","buffSize","sampleRate","createBuffer","fillBuffer","loop","newSoundType","includes","detachSource","ScSignalGen","_this","possibleConstructorReturn","getPrototypeOf","call","mod","modParam","setupNodes","gainNode","carr","modParamNode","createConstantSource","connectNodes","waveform","parseInt","modNew","disconnectNodes","offset","ScAnalyzer","fftSize","arraySize","smoothing","analyzer","createAnalyser","smoothingTimeConstant","array","Uint8Array","getData","getByteTimeDomainData","Float32Array","frequencyBinCount","getFloatFrequencyData","data","sqSum","rms","sqrt","max","LN10","ScSpeakers","destination","splitter","ChannelSplitterNode","numberOfOutputs","analyzerL","analyzerR","ScDelay","delayTime","feedback","delayNode","createDelay","delayGain","val","ScDirectIn","connectStream","stream","createMediaStreamSource","assertThisInitialized","connectError","message","navigator","mediaDevices","getUserMedia","audio","channelCount","ScPlayer","path","speed","reverse","playbackRate","createBufferError","request","XMLHttpRequest","open","responseType","onload","progressEvent","decodeAudioData","target","response","send","ScPan","panVal","createStereoPanner","pan","ScOscilloscope","renderRate","analyzerNode","ScSpectroscope","eva","typeName","t","block","state","action","objectSpread","id","newId","typeId","newTypeId","charAt","collapse","audioObj","values","num","field","newInNode","newOutNode","map","n","blocks","filter","_ref","nowIn","nowOut","nameIn","nameOut","_ref2","indexIn","indexOut","_ref3","idIn","idOut","_ref4","audioObjIn","toConsumableArray","connectTo","allTypes","Delay","Transposer","Pan","Player","SignalGen","Speaker","DirectInput","Pitch","VSTHost","Routing","Mixer","Record","Spectroscope","Oscilloscope","Envelope","Filter","Keyboard","SamplePlayer","Sequencer","bs","nextBlockId","nextTypeId","typeIds","newAction","concat","filteredBs","s","node","localStorage","setItem","JSON","stringify","newState","getItem","parse","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","removed","slicedToArray","move","source","droppableSource","droppableDestination","lastIndex","sourceClone","destClone","droppableId","newValue","index","changeBlock","store","dispatch","blockInfo","react_default","a","createElement","Fragment","className","style","width","height","position","top","left","onChange","e","min","htmlFor","fontSize","step","backgroundColor","onClick","circleStyle","textAlign","padding","lineHeight","borderRadius","borderColor","sliderCents","buttonCents","c","right","x","class","volume","hour","minute","second","role","aria-valuenow","aria-valuemin","aria-valuemax","index_esm","marginLeft","transform","orient","files","changeWaveform","w","changeMod","modulation","MI","FD","floor","pow","E","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","props","randomMeter","renderAudioL","canvasL","canvasLRef","current","renderCtx","getContext","getAudioData","clearRect","fillStyle","fillRect","clearInterval","rendererL","renderAudioR","canvasR","canvasRRef","rendererR","componentDidMount","setInterval","React","createRef","playButton","_this$props$blockInfo","muted","ref","Component","direction","cents","module","version","color","Channel","volume1","volume2","volume3","volume4","volume5","volume6","volume7","volume8","volumeMaster","Mixer_Channel","timing","toString","recordButton","recording","timer","marginTop","renderAudio","canvas","canvasRef","W","H","minDb","minDecibels","maxDb","maxDecibels","beginPath","moveTo","lineTo","fill","renderer","scaleY","y","strokeStyle","stroke","objectDestructuringEmpty","changeMIDIMessage","m","instrument","channel","viewNames","octave","noteOn","midiMessage","instruments","noteNames","changeInstrument","defineProperty","keys","borderStyle","borderWidth","status","IndividualPlayer","file","masterVolume","key","SamplePlayer_IndividualPlayer","Beat","note","modValue","selected","skipped","duration","commonjs","preciseMode","waveforms","modulations","modulationValues","notes","durations","selecteds","skippeds","looping","playStyle","Sequencer_Beat","WithHeader","inButton","outButton","handleDelete","inDisabled","outDisabled","Block","outId","Collapse","isOpen","sidebar1","image","sidebar2","major1","major2","toHex","r","g","b","specValues","kinect","osc","playing","reversed","meterL","meterR","off1","output11","output21","off2","output12","output22","fileName","envelope","dur","playings","addBlock","ProjectPage","idList","getList","getListNameFromId","setState","onDragEnd","items","destinationList","_this$setState3","sourceList","draggableId","item","snapshot","_this2","src","alt","getState","param","Components_WithHeader","isDraggingOver","_this3","react_beautiful_dnd_esm","provided","innerRef","paddingTop","paddingRight","background","min-height","display","draggableProps","dragHandleProps","fetchContent","placeholder","droppableContructur","blockApp","combineReducers","createStore","BlockApp","component_pp_ProjectPage","render","ReactDOM","src_BlockApp","document","getElementById","subscribe","serviceWorker","ready","registration","unregister"],"mappings":"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ACA,uBACA,qBACA,aACA,uBACA,uBACA,qBACA,qBACA,gBACA,gBACA,iBACA,mBACA,aACA,cACA,UACA,mBACA,iBACA,mBACA,mBACA,mBACA,iBACA,cACA,eACA,kBACA,UACA,kBACA,aACA,cACA,aACA,WACA,cACA,eACA,kBACA,gBACA,aACA,aACA,qBACA,uBACA,uBACA,oBACA,sBACA,oBACA,qBACA,0BACA,qBACA,kBACA,uBACA,mBACA,mBACA,sBACA,kBACA,mBACA,iBACA,uBACA,oBACA,wBACA,wBACA,qBACA,oBACA,oBACA,YACA,YACA,eACA,WACA,cACA,cACA,aACA,aACA,kBACA,YACA,kBACA,gBACA,iBACA,kBACA,iBACA,qBACA,wBACA,mBACA,eACA,iBACA,qBACA,iBACA,eACA,eAEEC,EAAY,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,MAC5D,OACEtI,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,OACEE,UAAU,GACVC,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRC,SAAU,aAIZR,EAAAC,EAAAC,cAAA,OACE4B,MAAM,WACNzB,MAAO,CACLG,SAAU,WACVC,IAAK,MACLC,KAAM,SAGRV,EAAAC,EAAAC,cAAA,UACEE,UAAU,wCACVC,MAAO,CACLU,SAAU,SACVM,QAAS,MACTf,MAAO,QACPC,OAAQ,QAEVlG,GAAG,sBACHgJ,cAAY,WACZC,gBAAc,OACdC,gBAAc,SAEbwE,GAEH/H,EAAAC,EAAAC,cAAA,OACE4B,MAAM,gBACNzB,MAAO,CAAEU,SAAU,UACnByC,kBAAgB,uBAEf6E,EAAYpN,IAAI,SAAAnI,GAAC,OAChBkN,EAAAC,EAAAC,cAAA,OACE4B,MAAM,gBACNZ,QAAS,YA5MA,SAACpO,EAAGuH,GAC3BwF,GAAMC,SAAS,CACbtN,KAAM,eACN6H,GAAIA,EACJS,MAAO,aACP7J,MAAO6B,IAwMOyV,CAAiBzV,EAAGuH,GACpBwN,GACE,OACGG,EAAU,GAAG3B,SAAS,IACvBgC,EAAYxX,QAAQiC,G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","file":"static/js/main.ac56cc43.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const AudioContext = window.AudioContext;\nconst scContext = new AudioContext();\n\nexport default scContext;\n","class ScModule {\n\n    constructor(context) {\n        this.context = context;\n        this.inputs = [];\n        this.outputs = [];\n        // this.inNode;\n        // this.outNode;\n        var connReady, connFailed;\n        this.connPromise = new Promise((resolve, reject) => {\n            connReady = resolve;\n            connFailed = reject;\n        });\n        this.connPromise.resolve = connReady;\n        this.connPromise.reject = connFailed;\n    }\n\n    connectTo(outScModule) {\n        this.outNode.connect(outScModule.inNode);\n        this.outputs.push(outScModule);\n        outScModule.inputs.push(this);\n        let outStr = 'Connection successful: '+\n            this.constructor.name+ ' --> '+\n            outScModule.constructor.name;\n        console.log(outStr);\n    }\n\n    connectAsync(outScModule) {\n        this.connPromise\n            .then(function(){\n                if (outScModule instanceof ScModule){\n                    this.outNode.connect(outScModule.inNode);\n                    let outStr = 'Connection successful: '+\n                        this.constructor.name+ ' --> '+\n                        outScModule.constructor.name;\n                    console.log(outStr);\n\n                    this.outputs.push(outScModule);\n                    outScModule.inputs.push(this);\n                    outScModule.connPromise.resolve()\n                } else {\n                    console.error('Argument for connect has to be' +\n                        ' ScModule instance');\n                    outScModule.connPromise.reject()\n                }\n            }.bind(this))\n            .catch(function(){\n                console.error('Failed to connect: '+\n                    this.constructor.name+' --> '+\n                    outScModule.constructor.name);\n                outScModule.connPromise.reject()\n            }.bind(this));\n    }\n\n    disconnect(outScModule) {\n        let outputId = this.outputs.indexOf(outScModule);\n        let inputId = outScModule.inputs.indexOf(this);\n        if (outputId === -1 || inputId === -1){\n            console.log('No connection to disconnect');\n        } else {\n            this.outNode.disconnect(outScModule.inNode);\n            this.outputs.splice(outputId, 1);\n            outScModule.inputs.splice(inputId, 1);\n        }\n    }\n\n    set volume(value) {\n        this.outNode.gain.value = parseFloat(value);\n    }\n\n    destroy() {\n\n    }\n}\n\nexport default ScModule;\n","class ScOscillator {\n  constructor(context, options = {}) {\n    this.context = context;\n    let defOpts;\n    defOpts = {\n      waveType: \"Silence\",\n      freq: 440\n    };\n    this.options = Object.assign(defOpts, options);\n    this.bufferSources = [\"Silence\", \"White Noise\", \"Pink Noise\"];\n    this.oscSources = [\"Sine Wave\", \"Triangle\", \"Sawtooth\", \"Square\"];\n    this.outNode = this.context.createGain();\n    this.connectSource(this.options.waveType);\n    this.frequency = this.options.freq;\n  }\n\n  connectSource(waveType) {\n    switch (waveType) {\n      case \"Sine Wave\":\n        this.inNode = this.context.createOscillator();\n        this.setOscType(waveType);\n        break;\n      case \"Triangle\":\n        this.inNode = this.context.createOscillator();\n        this.setOscType(waveType);\n        break;\n      case \"Sawtooth\":\n        this.inNode = this.context.createOscillator();\n        this.setOscType(waveType);\n        break;\n      case \"Square\":\n        this.inNode = this.context.createOscillator();\n        this.setOscType(waveType);\n        break;\n      case \"White Noise\":\n        this.inNode = this.createAndFillBuffer(\"White Noise\");\n        break;\n      case \"Pink Noise\":\n        this.inNode = this.createAndFillBuffer(\"Pink Noise\");\n        break;\n      case \"Silence\":\n        this.inNode = this.createAndFillBuffer(\"Silence\");\n        break;\n    }\n    this.inNode.start();\n    this.inNode.connect(this.outNode);\n  }\n\n  detachSource() {\n    this.inNode.stop();\n    this.inNode.disconnect(this.outNode);\n  }\n\n  setOscType(soundType) {\n    switch (soundType) {\n      case \"Sine Wave\":\n        this.inNode.type = \"sine\";\n        break;\n      case \"Triangle\":\n        this.inNode.type = \"triangle\";\n        break;\n      case \"Sawtooth\":\n        this.inNode.type = \"sawtooth\";\n        break;\n      case \"Square\":\n        this.inNode.type = \"square\";\n        break;\n    }\n  }\n\n  fillBuffer(buffer, soundType) {\n    let dataL = buffer.getChannelData(0);\n    let dataR = buffer.getChannelData(1);\n    switch (soundType) {\n      case \"White Noise\":\n        fillWhiteNoise(dataL, dataR);\n        break;\n      case \"Pink Noise\":\n        fillPinkNoise(dataL, dataR);\n        break;\n      case \"Silence\":\n        fillSilence(dataL, dataR);\n        break;\n    }\n  }\n\n  createAndFillBuffer(soundType) {\n    let inNode = this.context.createBufferSource();\n    const buffSize = 1 * this.context.sampleRate;\n    let buffer = this.context.createBuffer(\n      2,\n      buffSize,\n      this.context.sampleRate\n    );\n    this.fillBuffer(buffer, soundType);\n    inNode.buffer = buffer;\n    inNode.loop = true;\n    return inNode;\n  }\n\n  connect(outNode) {\n    this.outNode.connect(outNode);\n  }\n\n  disconnect(outNode) {\n    this.outNode.disconnect(outNode);\n  }\n\n  set waveform(newSoundType) {\n    if (\n      this.bufferSources.includes(this.options.waveType) &&\n      this.bufferSources.includes(newSoundType)\n    ) {\n      this.fillBuffer(this.inNode.buffer, newSoundType);\n    } else if (\n      this.oscSources.includes(this.options.waveType) &&\n      this.oscSources.includes(newSoundType)\n    ) {\n      this.setOscType(newSoundType);\n    } else {\n      this.detachSource();\n      this.connectSource(newSoundType);\n    }\n    this.options.waveType = newSoundType;\n    this.frequency = this.options.freq;\n  }\n\n  set frequency(value) {\n    this.options.freq = value;\n    if (this.oscSources.includes(this.options.waveType)) {\n      this.inNode.frequency.value = value;\n    } else {\n      let errStr =\n        \"WARN: Changing frequency value of non-\" +\n        \"Oscillator source has no effect.\";\n      console.log(errStr);\n    }\n  }\n}\n\nfunction fillWhiteNoise(dataL, dataR) {\n  let sample;\n  for (let i = 0; i < dataL.length; i++) {\n    sample = Math.random() * 2 - 1;\n    dataL[i] = sample;\n    dataR[i] = sample;\n  }\n}\n\nfunction fillSilence(dataL, dataR) {\n  let sample;\n  for (let i = 0; i < dataL.length; i++) {\n    sample = 0;\n    dataL[i] = sample;\n    dataR[i] = sample;\n  }\n}\n\nfunction fillPinkNoise(dataL, dataR) {\n  /**\n   * Approximates pink noise effect using\n   * Paul Kellet’s refined method\n   *\n   * source:\n   * http://noisehack.com/generate-noise-web-audio-api\n   */\n\n  let b0 = 0,\n    b1 = 0,\n    b2 = 0,\n    b3 = 0,\n    b4 = 0,\n    b5 = 0,\n    b6 = 0;\n  let sample;\n\n  for (let i = 0, imax = dataL.length; i < imax; i++) {\n    let white = Math.random() * 2 - 1;\n\n    b0 = 0.99886 * b0 + white * 0.0555179;\n    b1 = 0.99332 * b1 + white * 0.0750759;\n    b2 = 0.969 * b2 + white * 0.153852;\n    b3 = 0.8665 * b3 + white * 0.3104856;\n    b4 = 0.55 * b4 + white * 0.5329522;\n    b5 = -0.7616 * b5 - white * 0.016898;\n\n    sample = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n    sample *= 0.11;\n    dataL[i] = sample;\n    dataR[i] = sample;\n    b6 = white * 0.115926;\n  }\n}\n\nexport default ScOscillator;\n","import ScModule from './sc-module.js';\nimport ScOscillator from './sc-oscillator.js';\n\nclass ScSignalGen extends ScModule {\n\n    constructor(context, options={}) {\n        super(context);\n        let defOpts = {'waveType':'White Noise',\n                       'freq':440,\n                       'mod':'No Mod',\n                       'modParam':1.0};\n        this.options = Object.assign(defOpts, options);\n        this.setupNodes();\n        this.start();\n    }\n\n    setupNodes() {\n        this.gainNode = this.context.createGain();\n        this.inNode = this.mod = this.context.createGain();\n        this.carr = new ScOscillator(this.context, this.options);\n        this.outNode = this.context.createGain();\n        this.modParamNode = this.context.createConstantSource();\n        this.modParamNode.start();\n\n        this.connectNodes();\n\n        this.waveform = this.options.waveType;\n        this.frequency = parseInt(this.options.freq);\n        this.modParam = parseFloat(this.options.modParam);\n    }\n\n    connectNodes() {\n        switch(this.options.mod) {\n            case 'RM':\n                this.carr.connect(this.gainNode);\n                this.mod.connect(this.gainNode.gain);\n                this.gainNode.connect(this.outNode);\n                break;\n            case 'AM':\n                this.modParamNode.connect(this.mod.gain);\n                this.carr.connect(this.gainNode);\n                this.mod.connect(this.gainNode.gain);\n                this.gainNode.connect(this.outNode);\n                this.carr.connect(this.outNode);\n                break;\n            case 'FM':\n                this.modParamNode.connect(this.mod.gain);\n                this.mod.connect(this.carr.inNode.frequency);\n                this.carr.connect(this.outNode);\n                break;\n            case 'No Mod':\n                this.carr.connect(this.outNode);\n                break;\n        }\n    }\n\n    disconnectNodes() {\n        switch(this.options.mod) {\n            case 'RM':\n                this.carr.disconnect(this.gainNode);\n                this.mod.disconnect(this.gainNode.gain);\n                this.gainNode.disconnect(this.outNode);\n                break;\n            case 'AM':\n                this.modParamNode.disconnect(this.mod.gain);\n                this.carr.disconnect(this.gainNode);\n                this.mod.disconnect(this.gainNode.gain);\n                this.gainNode.disconnect(this.outNode);\n                this.carr.disconnect(this.outNode);\n                break;\n            case 'FM':\n                this.modParamNode.disconnect(this.mod.gain);\n                this.mod.disconnect(this.carr.frequency);\n                this.carr.disconnect(this.outNode);\n                break;\n            case 'No Mod':\n                this.carr.disconnect(this.outNode);\n                break;\n        }\n    }\n\n    set modulation(modNew) {\n        this.disconnectNodes();\n        this.options.mod = modNew;\n        this.connectNodes();\n    }\n\n    start() {\n        //this.carr.start();\n    }\n\n    stop() {\n        this.carr.stop();\n    }\n\n    set frequency(value) {\n        value = parseFloat(value);\n        this.options.freq = value;\n        this.carr.frequency = value;\n    }\n\n    set waveform(type) {\n        this.options.waveType = type;\n        this.carr.waveform = type;\n    }\n\n    set modParam(value) {\n        value = parseFloat(value);\n        this.options.modParam = value;\n        this.modParamNode.offset.value = value;\n    }\n\n    set MI(value) {\n        this.modParam = value;\n    }\n\n    set FD(value) {\n        this.modParam = value;\n    }\n\n}\n\nexport default ScSignalGen;\n","class ScAnalyzer {\n\n    constructor(context, options={}) {\n        this.context = context;\n        let defOpts;\n        defOpts = {\n            'fftSize' : 2048,\n            'type' : 'frequency',\n            'arraySize' : 256,\n            'smoothing': 0.6\n        };\n        this.options = Object.assign(defOpts, options);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.analyzer = this.context.createAnalyser();\n        this.inNode = this.analyzer;\n        this.analyzer.smoothingTimeConstant = 0;\n        switch (this.options.type) {\n            case 'waveform':\n                this.array = new Uint8Array(this.options.arraySize);\n                this.getData = function() {\n                    this.analyzer.getByteTimeDomainData(this.array);\n                    return this.array;\n                };\n                break;\n            case 'frequency':\n                this.analyzer.fftSize = this.options.fftSize;\n                this.array = new Float32Array(this.analyzer.frequencyBinCount);\n                this.getData = function() {\n                    this.analyzer.getFloatFrequencyData(this.array);\n                    return this.array;\n                };\n                break;\n            case 'level':\n                this.array = new Uint8Array(this.options.arraySize);\n                this.getData = function() {\n                    this.analyzer.getByteTimeDomainData(this.array);\n                    let data = this.array;\n                    let sqSum = 0;\n                    for (let i = 0; i < data.length; i++){\n                        sqSum += data[i] * data[i];\n                    }\n                    let rms = Math.sqrt(sqSum / data.length);\n                    rms = Math.max(rms, this.options.smoothing);\n                    let db = 20 * (Math.log(rms) / Math.LN10);\n                    return db;\n                };\n                break;\n        }\n    }\n\n}\n\nexport default ScAnalyzer;\n","import ScModule from './sc-module.js';\nimport ScAnalyzer from './sc-analyzer.js';\n\nclass ScSpeakers extends ScModule {\n\n    constructor(context) {\n        super(context);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.inNode = this.context.createGain();\n        this.outNode = this.context.destination;\n        this.splitter = new ChannelSplitterNode(this.context, \n                                {'numberOfOutputs' : 2})\n        this.analyzerL = new ScAnalyzer(this.context,\n                                {'type' : 'level'});\n        this.analyzerR = new ScAnalyzer(this.context,\n                                {'type' : 'level'});\n        this.inNode.connect(this.splitter);\n        this.inNode.connect(this.outNode);\n        this.splitter.connect(this.analyzerL.inNode, 0);\n        this.splitter.connect(this.analyzerR.inNode, 1);\n    }\n\n    getAudioData() {\n        let dataL = this.analyzerL.getData();\n        let dataR = this.analyzerR.getData();\n        return [dataL, dataR];\n    }\n\n\n}\n\nexport default ScSpeakers;\n","import ScModule from './sc-module.js';\n\nclass ScDelay extends ScModule {\n\n    constructor(context, options={}) {\n        super(context);\n        let defOpts = {'delayTime':0.1, 'feedback':0.3};\n        this.options = Object.assign(defOpts, options);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.inNode = this.context.createGain();\n        this.outNode = this.context.createGain();\n        this.delayNode = this.context.createDelay();\n        this.delayGain = this.context.createGain();\n\n        this.inNode.connect(this.delayNode);\n        this.delayNode.connect(this.delayGain);\n        this.delayGain.connect(this.delayNode);\n        this.delayNode.connect(this.outNode);\n\n        this.delayNode.delayTime.value = this.options.delayTime;\n        this.delayGain.gain.value = this.options.feedback;\n    }\n\n    set delayFeedback(val) {\n        this.options.feedback = val;\n        this.delayGain.gain.value = val;\n    }\n\n    set delayTime(val) {\n        this.options.delayTime = val;\n        this.delayNode.delayTime.value = val;\n    }\n}\n\n\nexport default ScDelay;\n","import ScModule from './sc-module.js';\n\nfunction connectStream(stream) {\n    this.inNode = this.context.createMediaStreamSource(stream);\n    this.outNode = this.context.createGain();\n    this.inNode.connect(this.outNode);\n\n    this.connPromise.resolve();\n}\n\nfunction connectError(error) {\n    console.error('ScDirectIn: '+error.message);\n    this.connPromise.reject();\n}\n\nclass ScDirectIn extends ScModule {\n\n    constructor(context) {\n        super(context);\n        this.connectStream = connectStream.bind(this);\n        this.connectError = connectError.bind(this);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        navigator.mediaDevices.getUserMedia({audio: {channelCount: 2}})\n            .then(this.connectStream)\n            .catch(this.connectError);\n    }\n}\n\n\nexport default ScDirectIn;\n","import ScModule from './sc-module.js';\n\nfunction createBuffer(buffer) {\n    this.inNode = this.context.createBufferSource();\n    this.outNode = this.context.createGain();\n    this.inNode.loop = this.options.loop;\n    this.inNode.playbackRate.value = this.options.speed;\n    this.inNode.buffer = buffer;\n    if (this.options.reverse) {\n        this.reverse();\n        this.options.reverse = true;\n    }\n    this.inNode.connect(this.outNode);\n    this.connPromise.resolve();\n}\n\nfunction createBufferError(error) {\n    console.error('ScPlayer: '+error.message);\n    this.connPromise.reject();\n}\n\nclass ScPlayer extends ScModule {\n\n    constructor(context, options={}) {\n        super(context);\n        let defOpts = {'path':'',\n                       'loop':false,\n                       'speed':1.0,\n                       'reverse':false};\n        this.options = Object.assign(defOpts, options);\n        this.createBuffer = createBuffer.bind(this);\n        this.createBufferError = createBufferError.bind(this);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        let request = new XMLHttpRequest();\n        request.open('GET', this.options.path, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function(progressEvent){\n            this.context.decodeAudioData(progressEvent.target.response,\n                this.createBuffer,\n                this.createBufferError)\n        }.bind(this);\n        request.send();\n    }\n\n    start() {\n        this.inNode.start(0);\n    }\n\n    stop() {\n        this.inNode.stop();\n    }\n\n    reverse() {\n        this.inNode.buffer.getChannelData(0).reverse();\n        this.inNode.buffer.getChannelData(1).reverse();\n        this.options.reverse = !this.options.reverse;\n    }\n\n    set speed(value) {\n        value = parseFloat(value);\n        this.options.speed = value;\n        this.inNode.playbackRate.value = value;\n    }\n}\n\nexport default ScPlayer;\n","import ScModule from './sc-module.js';\n\nclass ScPan extends ScModule {\n\n    constructor(context, options={}) {\n        super(context);\n        let defOpts = {'panVal':0};\n        this.options = Object.assign(defOpts, options);\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.inNode = this.outNode = this.context.createStereoPanner();\n        this.pan = this.options.panVal;\n    }\n\n    set pan(value){\n        value = parseFloat(value);\n        this.options.panVal = value;\n        this.inNode.pan.value = value;\n    }\n\n}\n\nexport default ScPan;\n","import ScModule from './sc-module.js';\nimport ScAnalyzer from './sc-analyzer.js';\n\nclass ScOscilloscope extends ScModule {\n\n    constructor(context) {\n        super(context);\n        this.options = {\n            'type' : 'waveform',\n            'arraySize' : 256,\n            'renderRate' : 100\n        };\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.analyzerNode = new ScAnalyzer(this.context, this.options);\n        this.inNode = this.analyzerNode.inNode;\n    }\n\n    getAudioData() {\n        return this.analyzerNode.getData();\n    }\n\n}\n\nexport default ScOscilloscope;\n","import ScModule from './sc-module.js';\nimport ScAnalyzer from './sc-analyzer.js';\n\nclass ScSpectroscope extends ScModule {\n\n    constructor(context) {\n        super(context);\n        this.options = {\n            'type' : 'frequency',\n            'renderRate' : 100,\n            'fftSize' : 2048\n        };\n        this.setupNodes();\n    }\n\n    setupNodes() {\n        this.analyzerNode = new ScAnalyzer(this.context, this.options);\n        this.inNode = this.analyzerNode.inNode;\n    }\n\n    getAudioData() {\n        return this.analyzerNode.getData();\n    }\n\n}\n\nexport default ScSpectroscope;\n","import scContext from \"../../audio/sc-context\";\nimport ScSignalGen from \"../../audio/sc-signalgen\";\nimport ScSpeakers from \"../../audio/sc-speakers\";\nimport ScDelay from \"../../audio/sc-delay\";\nimport ScDirectIn from \"../../audio/sc-directin\";\nimport ScPlayer from \"../../audio/sc-player\";\nimport ScPan from \"../../audio/sc-pan\";\nimport ScOscilloscope from \"../../audio/sc-oscilloscope\";\nimport ScSpectroscope from \"../../audio/sc-spectroscope\";\n\nconst eva = typeName => {\n  let t;\n  switch (typeName) {\n    case \"Delay\":\n      t = new ScDelay(scContext);\n      break;\n    // case \"Transposer\":\n    //   t = new ScTransposer(scContext);\n    //   break;\n    case \"Pan\":\n      t = new ScPan(scContext);\n      break;\n    case \"Player\":\n      t = new ScPlayer(scContext);\n      break;\n    case \"SignalGen\":\n      t = new ScSignalGen(scContext, {\n        waveType: \"Silence\",\n        freq: 440,\n        mod: \"No Mod\",\n        modParam: 1.0\n      });\n      break;\n    case \"Speaker\":\n      t = new ScSpeakers(scContext);\n      break;\n    case \"DirectInput\":\n      t = new ScDirectIn(scContext);\n      break;\n    // case \"Pitch\":\n    //   t = new ScPitch(scContext);\n    //   break;\n    // case \"VSTHost\":\n    //   t = new ScVSTHost(scContext);\n    //   break;\n    // case \"Routing\":\n    //   t = new ScRouting(scContext);\n    //   break;\n    // case \"Mixer\":\n    //   t = new ScMixer(scContext);\n    //   break;\n    case \"Oscilloscope\":\n      t = new ScOscilloscope(scContext);\n      break;\n    case \"Spectroscope\":\n      t = new ScSpectroscope(scContext);\n      break;\n    default:\n      t = undefined;\n  }\n  return t;\n};\n\nconst block = (state, action) => {\n  switch (action.type) {\n    case \"ADD_BLOCK\":\n      return {\n        typeName: action.typeName,\n        id: action.newId,\n        typeId: action.newTypeId,\n        name: action.typeName.charAt(0) + action.newTypeId,\n        collapse: false,\n        audioObj: eva(action.typeName),\n        // contains generic values like in, out, collapse and also personal values\n        ...action.values\n      };\n    case \"CHANGE_BLOCK\":\n      if (state.id === action.id) {\n        {\n          // The case that field is an array since the module has a lot of\n          // submodules (like mixer, sequencer and samplePlay), we based on the\n          // submodule number to update the corresponding information in the field\n          if (action.num !== undefined) {\n            state[action.field][action.num] =\n              // when action.value is undefined, it means a boolean true/false change\n              action.value === undefined\n                ? !state[action.field][action.num]\n                : action.value;\n          } else {\n            state[action.field] =\n              action.value === undefined ? !state[action.field] : action.value;\n\n            // also update the audioObj (will ignore if there is no such field in object)\n            if (state.audioObj !== undefined) {\n              state.audioObj[action.field] =\n                action.value === undefined\n                  ? !state.audioObj[action.field]\n                  : action.value;\n            }\n          }\n        }\n        return state;\n      } else {\n        return state;\n      }\n    // deal with breaking connections when blocks are deleted\n    case \"DELETE_BLOCK\":\n      let newInNode;\n      let newOutNode;\n      // if the connected block no longer exist, we change the\n      // entry back to undefined\n      newInNode = state.inNode.map(n => {\n        return action.blocks.filter(t => t.id === n[1]).length === 0\n          ? undefined\n          : n;\n      });\n      newOutNode = state.outNode.map(n => {\n        return action.blocks.filter(t => t.id === n[1]).length === 0\n          ? undefined\n          : n;\n      });\n      return { ...state, inNode: newInNode, outNode: newOutNode };\n\n    case \"CONNECTING_BLOCK\":\n      // The name of in and out blocks\n      let [nameIn, nameOut] = [action.nowIn[0], action.nowOut[0]];\n      // The numbering of in/out port (some blocks will have multiple in/out)\n      let [indexIn, indexOut] = [action.nowIn[1], action.nowOut[1]];\n      // The id of the blocks that we are connecting\n      let [idIn, idOut] = [action.nowIn[2], action.nowOut[2]];\n      let [audioObjIn, audioObjOut] = [action.nowIn[3], action.nowOut[3]];\n\n      if (state.id === idIn) {\n        if (state.id === idOut) {\n          // don't connect to itself, except special case (Routing)\n          return state;\n        } else {\n          // if this is the nowin node, we shoud update it's inNode information\n          let newInNode = [...state.inNode];\n          newInNode[indexIn] = [nameOut, idOut];\n          return { ...state, inNode: newInNode };\n        }\n      } else {\n        if (state.id === idOut) {\n          // connect the audio objects together\n          if (state.audioObj !== undefined) {\n            state.audioObj.connectTo(audioObjIn);\n          }\n          // then update the ui information\n          let newOutNode = [...state.outNode];\n          newOutNode[indexOut] = [nameIn, idIn];\n          return { ...state, outNode: newOutNode };\n        } else {\n          return state;\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default block;\n","import block from \"./block\";\n\nconst allTypes = {\n  Delay: 1,\n  Transposer: 1,\n  Pan: 1,\n  Player: 1,\n  SignalGen: 1,\n  Speaker: 1,\n  DirectInput: 1,\n  Pitch: 1,\n  VSTHost: 1,\n  Routing: 1,\n  Mixer: 1,\n  Record: 1,\n  Spectroscope: 1,\n  Oscilloscope: 1,\n  Envelope: 1,\n  Filter: 1,\n  Keyboard: 1,\n  SamplePlayer: 1,\n  Sequencer: 1\n};\nconst blocks = (\n  state = {\n    bs: [],\n    nextBlockId: 1,\n    nextTypeId: allTypes,\n    nowIn: [],\n    nowOut: []\n  },\n  action\n) => {\n  let { bs, nextBlockId, nextTypeId, nowIn, nowOut } = state;\n  switch (action.type) {\n    case \"ADD_BLOCK\": {\n      // add the count information into action, so block knows the count when newing\n      let newId = nextBlockId;\n      let typeIds = { ...nextTypeId };\n      let newTypeId = typeIds[action.typeName]++;\n      let newAction = { ...action, newId, newTypeId };\n      return {\n        nowIn,\n        nowOut,\n        bs: [...bs, block(undefined, newAction)],\n        nextBlockId: newId + 1,\n        nextTypeId: typeIds\n      };\n    }\n    case \"CHANGE_BLOCK\":\n      return {\n        nextBlockId,\n        nextTypeId,\n        nowIn,\n        nowOut,\n        bs: bs.map(t => block(t, action))\n      };\n    case \"DELETE_BLOCK\":\n      let filteredBs = bs.filter(t => t.id !== action.id);\n      // let deletedBlock = bs.filter(t => t.id === action.id)[0];\n      // console.log(\"hello: \" + deletedBlock.unbindCanvas);\n      // deletedBlock.unbindCanvas();\n      // deletedBlock.unbindCanvas === undefined\n      //   ? pass\n      //   : deletedBlock.unbindCanvas();\n      let newBs = filteredBs.map(t =>\n        // pass in the block, so we can check for each connection that\n        // whether the block still exist\n        block(t, { ...action, blocks: filteredBs })\n      );\n      return {\n        nextBlockId,\n        nextTypeId,\n        nowIn,\n        nowOut,\n        bs: newBs\n      };\n    case \"CONNECTING_BLOCK\":\n      let s = { ...state };\n      // in or out?\n      s[action.node] = action.value;\n      // if both nowIn and nowOut are assigned and the blocks exists\n      if (\n        s.nowIn[0] !== undefined &&\n        s.nowOut[0] !== undefined &&\n        s.bs.filter(t => t.id === s.nowIn[2]).length === 1 &&\n        s.bs.filter(t => t.id === s.nowOut[2]).length === 1\n      ) {\n        return {\n          // go to each block and change the inNode and outNode for the connected block\n          ...s,\n          bs: s.bs.map(t =>\n            block(t, { ...action, nowIn: s.nowIn, nowOut: s.nowOut })\n          ),\n          nowIn: [],\n          nowOut: []\n        };\n      } else {\n        return s;\n      }\n    case \"SAVE_STATE\":\n      localStorage.setItem(\"myState\", JSON.stringify(state));\n      return state;\n    case \"LOAD_STATE\":\n      let newState = localStorage.getItem(\"myState\");\n      return JSON.parse(newState);\n    default:\n      return state;\n  }\n};\n\nexport default blocks;\n","export const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n};\r\n\r\nexport const getListStyle = isDraggingOver => ({\r\n  color: \"white\",\r\n  paddingTop: 3,\r\n  paddingRight: 4,\r\n  background: isDraggingOver ? \"lightblue\" : \"transparent\",\r\n  \"min-height\": \"100vh\"\r\n});\r\n\r\nexport const getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: 5,\r\n  marginTop: 1,\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nexport const move = (source, destination, droppableSource, droppableDestination, lastIndex, typeName) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  if (!(droppableDestination.droppableId === \"sidebar1\" || droppableDestination.droppableId === \"sidebar2\")) \r\n  {\r\n    let newValue = Object.assign({}, sourceClone[droppableSource.index]);\r\n    // newValue.id = newValue.id + lastIndex;\r\n    if (!(droppableSource.droppableId === \"sidebar1\" || droppableSource.droppableId === \"sidebar2\")) \r\n    {\r\n      sourceClone.splice(droppableSource.index, 1);\r\n    }\r\n    else\r\n    {\r\n    newValue.id = newValue.id + lastIndex;\r\n    newValue.typeName = typeName;\r\n    }\r\n    destClone.splice(droppableDestination.index, 0, newValue);\r\n  }\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n  return result;\r\n};","import store from \"./index\";\n\nconst changeBlock = (id, field, value) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id,\n    field,\n    value\n  });\n};\n\nexport default changeBlock;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\n\nconst Delay = ({ blockInfo }) => {\n  let { id, delayTime, feedback } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{ width: \"288px\", height: \"44px\", position: \"relative\" }}\n      >\n        {/* Delay Time */}\n        <input\n          className=\"slider\"\n          type=\"range\"\n          style={{\n            width: \"178px\",\n            position: \"absolute\",\n            top: \"6px\",\n            left: \"6px\"\n          }}\n          onChange={e => changeBlock(id, \"delayTime\", e.target.value)}\n          min={0}\n          max={1000}\n          value={delayTime}\n          id=\"delayTime\"\n        />\n        <label\n          htmlFor=\"delayTime\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"4px\",\n            left: \"194px\"\n          }}\n        >\n          {\"delay(ms): \"}\n        </label>\n        <input\n          type=\"number\"\n          value={delayTime}\n          style={{\n            position: \"absolute\",\n            width: \"40px\",\n            height: \"16px\",\n            left: \"260px\",\n            top: \"5px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => changeBlock(id, \"delayTime\", e.target.value)}\n        />\n\n        {/* Feedback */}\n        <input\n          className=\"slider \"\n          type=\"range\"\n          style={{\n            width: \"178px\",\n            position: \"absolute\",\n            top: \"24px\",\n            left: \"6px\"\n          }}\n          onChange={e => changeBlock(id, \"feedback\", e.target.value)}\n          step={0.001}\n          min={0}\n          max={1}\n          value={feedback}\n          id=\"feedback\"\n        />\n        <span\n          htmlFor=\"feedback\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"22px\",\n            left: \"194px\"\n          }}\n        >\n          {\"feedback: \"}\n        </span>\n        <input\n          type=\"number\"\n          value={feedback}\n          style={{\n            position: \"absolute\",\n            width: \"40px\",\n            height: \"16px\",\n            left: \"260px\",\n            top: \"24px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => changeBlock(id, \"feedback\", e.target.value)}\n        />\n      </div>\n\n      {/* Footer */}\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"30px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"kinect\",\n                value: undefined\n              });\n            }}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Delay;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nconst circleStyle = {\n  width: \"1.5rem\",\n  height: \"1.5rem\",\n  textAlign: \"center\",\n  padding: \"0px\",\n  fontSize: \"16px\",\n  lineHeight: 1.428571429,\n  borderRadius: \"1rem\",\n  borderColor: \"black\"\n};\n\nconst Transposer = ({ blockInfo }) => {\n  let { id, sliderCents, buttonCents } = blockInfo;\n  const c = parseInt(buttonCents) + parseInt(sliderCents);\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{ width: \"288px\", height: \"88px\", position: \"relative\" }}\n      >\n        <label\n          htmlFor=\"cents\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            right: \"24px\",\n            top: \"4px\"\n          }}\n          className=\"float-right mx-2\"\n        >\n          {\"Cents: \" + c}\n        </label>\n        <div className=\"text-center\">\n          <input\n            className=\"slider mx-2\"\n            type=\"range\"\n            style={{\n              width: \"15rem\",\n              position: \"absolute\",\n              left: \"10px\",\n              top: \"20px\"\n            }}\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"sliderCents\",\n                value: e.target.value\n              });\n            }}\n            min={-50}\n            max={50}\n            value={c === 0 ? 0 : sliderCents}\n            id=\"cents\"\n          />\n          <div\n            className=\"mx-2\"\n            style={{ fontSize: \"0.8rem\", position: \"absolute\", top: \"36px\" }}\n          >\n            <span\n              className=\"float-left\"\n              style={{ position: \"absolute\", left: \"5px\" }}\n            >\n              -50\n            </span>\n            <span\n              className=\"float-center\"\n              style={{ position: \"absolute\", left: \"126px\" }}\n            >\n              0\n            </span>\n            <span\n              className=\"float-right\"\n              style={{ position: \"absolute\", left: \"235px\" }}\n            >\n              +50\n            </span>\n          </div>\n        </div>\n        <div\n          className=\"text-center\"\n          style={{ position: \"absolute\", top: \"50px\" }}\n        >\n          <button\n            className=\"btn btn-light m-2\"\n            style={{ ...circleStyle, position: \"absolute\", left: \"56px\" }}\n            onClick={e => {\n              let x = buttonCents - 100;\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"buttonCents\",\n                value: x\n              });\n            }}\n          >\n            &#9837;\n          </button>\n          <button\n            className=\"btn btn-light btn-circle m-2\"\n            style={{ ...circleStyle, position: \"absolute\", left: \"116px\" }}\n            onClick={() => {\n              let x = 0 - sliderCents;\n              console.log(x);\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"buttonCents\",\n                value: x\n              });\n            }}\n          >\n            &#9838;\n          </button>\n          <button\n            className=\"btn btn-light btn-circle m-2\"\n            style={{ ...circleStyle, position: \"absolute\", left: \"176px\" }}\n            onClick={e => {\n              let x = buttonCents + 100;\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"buttonCents\",\n                value: x\n              });\n            }}\n          >\n            &#9839;\n          </button>\n        </div>\n      </div>\n\n      <div\n        className=\"text-center\"\n        style={{ height: \"30px\", backgroundColor: \"grey\" }}\n      >\n        <div className=\"col-md-12\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"m-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Transposer;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nconst Pan = ({ blockInfo }) => {\n  let { id, panVal } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        class=\"text-center\"\n        style={{ width: \"288px\", height: \"40px\", position: \"relative\" }}\n      >\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"20px\",\n            top: \"10px\"\n          }}\n        >\n          L\n        </span>\n        <input\n          className=\"slider mx-2\"\n          type=\"range\"\n          style={{\n            width: \"208px\",\n            position: \"absolute\",\n            left: \"24px\",\n            top: \"12px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"panVal\",\n              value: e.target.value\n            });\n          }}\n          min={-50}\n          max={50}\n          value={panVal}\n          id=\"panVal\"\n        />\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"244px\",\n            top: \"10px\"\n          }}\n        >\n          R\n        </span>\n      </div>\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"30px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"kinect\",\n                value: undefined\n              });\n            }}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Pan;\n","import React from \"react\";\nimport changeBlock from \"../../../handlers\";\nimport \"../../../index.css\";\nimport { FaPlay, FaSquare } from \"react-icons/fa\";\n\nconst circleStyle = {\n  width: \"1.5rem\",\n  height: \"1.5rem\",\n  textAlign: \"center\",\n  padding: \"0px\",\n  fontSize: \"10px\",\n  // lineHeight: 1.428571429,\n  borderRadius: \"1rem\",\n  borderColor: \"black\"\n};\n\nconst Player = ({ blockInfo }) => {\n  let { id, speed, volume, hour, minute, second } = blockInfo;\n  return (\n    <React.Fragment>\n      <div className=\"\" style={{ position: \"relative\", height: \"140px\" }}>\n        <div style={{ fontSize: \"0.8rem\", position: \"absolute\", left: \"10px\" }}>\n          Speed\n        </div>\n        <input\n          className=\"slider mx-1 my-2 text-center\"\n          type=\"range\"\n          style={{\n            width: \"190px\",\n            position: \"absolute\",\n            left: \"5px\",\n            top: \"12px\"\n          }}\n          onChange={e => changeBlock(id, \"speed\", e.target.value)}\n          min={0}\n          max={2}\n          step={0.1}\n          value={speed}\n          id=\"speed\"\n        />\n        <div\n          className=\"text-center mx-1\"\n          style={{ fontSize: \"0.8rem\", position: \"absolute\", top: \"36px\" }}\n        >\n          <span className=\"\" style={{ position: \"absolute\", left: \"5px\" }}>\n            x0\n          </span>\n          <span className=\"\" style={{ position: \"absolute\", left: \"92px\" }}>\n            x1\n          </span>\n          <span className=\"\" style={{ position: \"absolute\", left: \"180px\" }}>\n            x2\n          </span>\n        </div>\n\n        <div\n          className=\"progress\"\n          style={{\n            width: \"190px\",\n            position: \"absolute\",\n            left: \"8px\",\n            top: \"60px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ width: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        <div\n          style={{\n            fontSize: \"0.8rem\",\n            textAlign: \"right\",\n            position: \"absolute\",\n            top: \"80px\",\n            right: \"85px\"\n          }}\n        >\n          {hour + \":\" + minute + \":\" + second}\n        </div>\n\n        {/* check and buttons */}\n        <span\n          className=\"text-center\"\n          style={{ position: \"absolute\", top: \"100px\" }}\n        >\n          <label\n            htmlFor=\"loop\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"10px\",\n              top: \"4px\"\n            }}\n          >\n            Loop\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"\"\n            id=\"loop\"\n            style={{\n              position: \"absolute\",\n              left: \"45px\",\n              top: \"5px\",\n              height: \"20px\",\n              width: \"20px\"\n            }}\n            onClick={() => changeBlock(id, \"loop\", undefined)}\n          />\n\n          <button\n            className=\"btn btn-light m-1\"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              left: \"78px\"\n            }}\n            onClick={() => changeBlock(id, \"playing\", undefined)}\n          >\n            <FaPlay style={{ fontSize: \"12px\", marginLeft: \"2.5px\" }} />\n          </button>\n          <button\n            className=\"btn btn-light btn-circle m-1\"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              left: \"120px\"\n            }}\n            onClick={() => changeBlock(id, \"playing\", undefined)}\n          >\n            <FaSquare style={{ fontSize: \"12px\" }} />\n          </button>\n          <button\n            className=\"btn btn-light btn-circle m-1\"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              left: \"160px\"\n            }}\n            onClick={() => changeBlock(id, \"reversed\", undefined)}\n          >\n            <FaPlay\n              style={{\n                fontSize: \"12px\",\n                marginLeft: \"-2px\",\n                transform: \"scaleX(-1)\"\n              }}\n            />\n          </button>\n        </span>\n\n        <div\n          className=\"progress progress-bar-vertical\"\n          style={{\n            position: \"absolute\",\n            left: \"220px\",\n            top: \"25px\",\n            height: \"110px\",\n            width: \"15px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ height: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        <div\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"230px\",\n            top: \"5px\"\n          }}\n        >\n          {\"Vol. \" + volume}{\" \"}\n        </div>\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"110px\",\n            position: \"absolute\",\n            left: \"248px\",\n            top: \"26px\"\n          }}\n          onChange={e => changeBlock(id, \"volume\", e.target.value)}\n          min={0}\n          max={100}\n          step={1}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n      <div className=\"text-center\" style={{ backgroundColor: \"grey\" }}>\n        <div className=\"row\">\n          <input\n            className=\"mx-4 my-1\"\n            style={{ fontSize: \"0.8rem\" }}\n            type=\"file\"\n            onChange={e => changeBlock(id, \"file\", e.target.files[0])}\n          />\n        </div>\n\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => changeBlock(id, \"kinect\", undefined)}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => changeBlock(id, \"osc\", e.target.value)}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\nimport \"../../../index.css\";\n// import oscDemo from \"../../player-module\";\n\nconst changeWaveform = (w, id) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"waveform\",\n    value: w\n  });\n};\n\nconst changeMod = (w, id) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"modulation\",\n    value: w\n  });\n};\n\nconst SignalGen = ({ blockInfo }) => {\n  let { id, frequency, waveform, modulation, volume, MI, FD } = blockInfo;\n  let modParam;\n  if (modulation === \"No Mod\" || modulation === \"RM\") {\n    modParam = \"Not Applicable\";\n  } else {\n    modParam = modulation === \"AM\" ? \"MI for AM: \" + MI : \"FD for FM: \" + FD;\n  }\n  return (\n    <React.Fragment>\n      <div className=\"\" style={{ position: \"relative\", height: \"134px\" }}>\n        {/* frequency slider */}\n        <label\n          htmlFor=\"frequency\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"8px\",\n            top: \"5px\"\n          }}\n        >\n          {\"Frequency(hz): \"}\n        </label>\n        <input\n          type=\"number\"\n          value={frequency}\n          style={{\n            position: \"absolute\",\n            width: \"40px\",\n            height: \"16px\",\n            left: \"110px\",\n            top: \"7px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"frequency\",\n              value: e.target.value\n            });\n          }}\n        />\n        <input\n          type=\"range\"\n          className=\"slider\"\n          style={{\n            width: \"250px\",\n            position: \"absolute\",\n            left: \"5px\",\n            top: \"24px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"frequency\",\n              value: e.target.value\n            });\n          }}\n          min={0}\n          max={15000}\n          value={frequency}\n          id=\"frequency\"\n        />\n\n        {/* modParam slider */}\n        <label\n          htmlFor=\"param\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"8px\",\n            top: \"40px\"\n          }}\n        >\n          {modParam}\n        </label>\n        <input\n          className=\"slider\"\n          type=\"range\"\n          style={{\n            width: \"250px\",\n            position: \"absolute\",\n            left: \"5px\",\n            top: \"58px\"\n          }}\n          onChange={e => {\n            if (modulation === \"No Mod\" || modulation === \"RM\") {\n              return;\n            } else {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: modulation === \"AM\" ? \"MI\" : \"FD\",\n                value: Math.floor(Math.pow(Math.E, e.target.value))\n              });\n            }\n          }}\n          min={0}\n          max={modulation === \"AM\" ? 20 : 10}\n          step={modulation === \"AM\" ? 0.1 : 0.01}\n          value={\n            modParam === \"Not applicable\"\n              ? 0\n              : modulation === \"AM\"\n              ? MI\n              : Math.log(FD)\n          }\n          id=\"param\"\n        />\n\n        {/* Two Dropdowns */}\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"5px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle l-6 \"\n            style={{\n              fontSize: \"0.8rem\",\n              padding: \"0px\",\n              width: \"100px\",\n              height: \"25px\"\n            }}\n            id=\"waveform dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {waveform}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"waveform dropdown\"\n          >\n            <div\n              class=\"dropdown-item\"\n              onClick={() => {\n                changeWaveform(\"Silence\", id);\n              }}\n            >\n              Silence\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Sine Wave\", id)}\n            >\n              Sine Wave\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Triangle\", id)}\n            >\n              Triangle\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Square\", id)}\n            >\n              Square\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Sawtooth\", id)}\n            >\n              Sawtooth\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"White Noise\", id)}\n            >\n              White Noise\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Pink Noise\", id)}\n            >\n              Pink Noise\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"120px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle\"\n            style={{\n              fontSize: \"0.8rem\",\n              padding: \"0px\",\n              width: \"80px\",\n              height: \"25px\"\n            }}\n            id=\"mod dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {modulation}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"mod dropdown\"\n          >\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"No Mod\", id)}>\n              No Mod\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"RM\", id)}>\n              RM\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"AM\", id)}>\n              AM\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"FM\", id)}>\n              FM\n            </div>\n          </div>\n        </div>\n\n        {/* Volume Slider */}\n        <div\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"260px\",\n            top: \"5px\"\n          }}\n        >\n          {\"Vol: \" + volume}{\" \"}\n        </div>\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"100px\",\n            position: \"absolute\",\n            left: \"275px\",\n            top: \"26px\"\n          }}\n          onChange={e => changeBlock(id, \"volume\", e.target.value)}\n          min={0}\n          max={1}\n          step={0.01}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"32px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => changeBlock(id, \"kinect\", undefined)}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => changeBlock(id, \"osc\", e.target.value)}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default SignalGen;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\nimport { FaVolumeUp, FaVolumeMute } from \"react-icons/fa\";\n\nconst circleStyle = {\n  width: \"2rem\",\n  height: \"2rem\",\n  textAlign: \"center\",\n  fontSize: \"15px\",\n  lineHeight: 1.428571429,\n  borderRadius: \"0.5rem\"\n};\n\nclass Speaker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasLRef = React.createRef();\n    this.canvasRRef = React.createRef();\n    this.rendererL = undefined;\n    this.rendererR = undefined;\n  }\n\n  randomMeter = () => {\n    let x = Math.random();\n    return x;\n  };\n\n  // render function\n  renderAudioL = () => {\n    let { audioObj } = this.props.blockInfo;\n    let canvasL = this.canvasLRef.current;\n    if (canvasL === null) {\n      clearInterval(this.rendererL);\n      return;\n    }\n    let canvasLCtx = canvasL.getContext(\"2d\");\n    let renderCtx = canvasLCtx;\n    let data = audioObj.getAudioData()[0];\n\n    renderCtx.clearRect(0, 0, 230, 140);\n    renderCtx.fillStyle = \"green\";\n    renderCtx.fillRect(0, 0, (data - 40) * 40, 140);\n  };\n\n  // render function\n  renderAudioR = () => {\n    let { audioObj } = this.props.blockInfo;\n    let canvasR = this.canvasRRef.current;\n    if (canvasR === null) {\n      clearInterval(this.rendererR);\n      return;\n    }\n    let canvasRCtx = canvasR.getContext(\"2d\");\n    let renderCtx = canvasRCtx;\n    let data = audioObj.getAudioData()[1];\n\n    renderCtx.clearRect(0, 0, 230, 140);\n    renderCtx.fillStyle = \"green\";\n    renderCtx.fillRect(0, 0, (data - 40) * 40, 140);\n  };\n\n  // bindtocanvas\n  componentDidMount = () => {\n    let { renderRate } = this.props.blockInfo;\n    this.rendererL = setInterval(this.renderAudioL.bind(this), renderRate);\n    this.rendererR = setInterval(this.renderAudioR.bind(this), renderRate);\n  };\n\n  render() {\n    let { id, muted } = this.props.blockInfo;\n    let playButton;\n    if (muted) {\n      playButton = <FaVolumeMute />;\n    } else {\n      playButton = <FaVolumeUp />;\n    }\n    return (\n      <React.Fragment>\n        <div\n          class=\"text-center\"\n          style={{ position: \"relative\", height: \"48px\" }}\n        >\n          {/* L and R Progress Bars */}\n          <div\n            className=\"\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              top: \"3px\",\n              left: \"12px\"\n            }}\n          >\n            L\n          </div>\n          <div\n            className=\"progress\"\n            style={{\n              width: \"230px\",\n              position: \"absolute\",\n              top: \"5px\",\n              left: \"30px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <canvas ref={this.canvasLRef} />\n            {/* <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuenow={meterL}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: meterL + \"%\", backgroundColor: \"green\" }}\n            /> */}\n          </div>\n\n          <div\n            className=\"\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              top: \"23px\",\n              left: \"12px\"\n            }}\n          >\n            R\n          </div>\n          <div\n            className=\"progress\"\n            style={{\n              width: \"230px\",\n              position: \"absolute\",\n              top: \"25px\",\n              left: \"30px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <canvas ref={this.canvasRRef} />\n          </div>\n\n          {/* speaker icon button */}\n          <button\n            className=\"btn btn-light \"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              padding: \"0px\",\n              top: \"5px\",\n              left: \"270px\",\n              backgroundColor: \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"muted\", undefined)}\n          >\n            {playButton}\n          </button>\n        </div>\n\n        <div className=\"text-center\" style={{ backgroundColor: \"grey\" }}>\n          <span className=\"col-md-4\">\n            <button\n              className=\"badge-pill badge-light badge-sm mx-2 my-1\"\n              style={{ fontSize: \"0.8rem\" }}\n            >\n              Audio Settings\n            </button>\n          </span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Speaker;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\n\nconst DirectInput = ({ blockInfo }) => {\n  // catch\n  // store.dispatch('delete')\n\n  let { id, direction, volume } = blockInfo;\n  return (\n    <React.Fragment>\n      <div className=\"\" style={{ position: \"relative\", height: \"100px\" }}>\n        <div\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"0px\",\n            left: \"125px\"\n          }}\n        >\n          Pan\n        </div>\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"15px\",\n            top: \"18px\"\n          }}\n        >\n          L\n        </span>\n        <input\n          className=\"slider\"\n          type=\"range\"\n          style={{\n            width: \"218px\",\n            position: \"absolute\",\n            left: \"28px\",\n            top: \"20px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"direction\",\n              value: e.target.value\n            });\n          }}\n          min={-50}\n          max={50}\n          value={direction}\n          id=\"direction\"\n        />\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"254px\",\n            top: \"18px\"\n          }}\n        >\n          R\n        </span>\n\n        {/* Progress Bar */}\n        <div\n          className=\"progress\"\n          style={{\n            width: \"250px\",\n            position: \"absolute\",\n            top: \"42px\",\n            left: \"15px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ width: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        {/* Mute and Channel */}\n        <div\n          className=\"text-center\"\n          style={{ position: \"absolute\", top: \"68px\" }}\n        >\n          <label\n            htmlFor=\"muted\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"35px\",\n              top: \"2px\"\n            }}\n          >\n            MUTE\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"my-1\"\n            id=\"muted\"\n            style={{ position: \"absolute\", left: \"80px\" }}\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"muted\",\n                value: undefined\n              });\n            }}\n          />\n          <label\n            htmlFor=\"channel\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"125px\",\n              top: \"2px\"\n            }}\n          >\n            Channel:\n          </label>\n          <input\n            type=\"text\"\n            className=\"\"\n            style={{\n              height: \"1.5rem\",\n              width: \"3rem\",\n              position: \"absolute\",\n              left: \"190px\"\n            }}\n            id=\"channel\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"channel\",\n                value: e.target.value\n              });\n            }}\n          />\n        </div>\n\n        {/* Volume Slider */}\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"90px\",\n            position: \"absolute\",\n            left: \"278px\",\n            top: \"5px\"\n          }}\n          onChange={e => changeBlock(id, \"volume\", e.target.value)}\n          min={0}\n          max={10}\n          step={0.1}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"32px\" }}\n      >\n        <button\n          className=\"badge-pill badge-light badge-sm mx-2 my-1\"\n          style={{ fontSize: \"0.8rem\" }}\n        >\n          Audio Settings\n        </button>\n        <span className=\"\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"m-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DirectInput;\n","import React from \"react\";\nimport changeBlock from \"../../../handlers\";\nimport store from \"../../../index\";\n\nconst Pitch = ({ blockInfo }) => {\n  let { id, cents } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{ width: \"288px\", height: \"62px\", position: \"relative\" }}\n      >\n        <label\n          htmlFor=\"cents\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            right: \"34px\",\n            top: \"4px\"\n          }}\n          className=\"float-right mx-2\"\n        >\n          {\"Cents: \"}\n        </label>\n\n        <input\n          type=\"number\"\n          value={cents}\n          style={{\n            position: \"absolute\",\n            width: \"30px\",\n            height: \"16px\",\n            right: \"10px\",\n            top: \"5px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => changeBlock(id, \"cents\", e.target.value)}\n        />\n\n        <div className=\"text-center\">\n          <input\n            className=\"slider mx-2\"\n            type=\"range\"\n            style={{\n              width: \"15rem\",\n              position: \"absolute\",\n              left: \"10px\",\n              top: \"20px\"\n            }}\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"cents\",\n                value: e.target.value\n              });\n            }}\n            min={-400}\n            max={400}\n            value={cents}\n            id=\"cents\"\n          />\n          <div\n            className=\"mx-2\"\n            style={{ fontSize: \"0.8rem\", position: \"absolute\", top: \"36px\" }}\n          >\n            <span\n              className=\"float-left\"\n              style={{ position: \"absolute\", left: \"5px\" }}\n            >\n              -400\n            </span>\n            <span\n              className=\"float-center\"\n              style={{ position: \"absolute\", left: \"126px\" }}\n            >\n              0\n            </span>\n            <span\n              className=\"float-right\"\n              style={{ position: \"absolute\", left: \"235px\" }}\n            >\n              +400\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"30px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"kinect\",\n                value: undefined\n              });\n            }}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Pitch;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport \"../../../index.css\";\n\nconst VSTHost = ({ blockInfo }) => {\n  let { id, module, version } = blockInfo;\n  return (\n    <React.Fragment>\n      <div className=\"text-center\">\n        <div className=\"row my-2\">\n          <input\n            className=\"mx-4\"\n            style={{ fontSize: \"0.8rem\" }}\n            type=\"file\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id,\n                field: \"file\",\n                value: e.target.files[0]\n              });\n            }}\n          />\n        </div>\n        <div\n          className=\"btn btn-sm btn-light m-2\"\n          style={{ fontSize: \"0.7rem\", width: \"8rem\" }}\n          onClick={() => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id,\n              field: \"module\",\n              value: undefined\n            });\n          }}\n        >\n          {module ? \"Module Input\" : \"MIDI Input\"}\n        </div>\n\n        <div className=\"text-center\">\n          <div class=\"dropdown col\">\n            <button\n              className=\"btn btn-info dropdown-toggle\"\n              style={{ fontSize: \"0.7rem\", width: \"8rem\" }}\n              id=\"version dropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              {version}\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"version dropdown\">\n              <div\n                class=\"dropdown-item\"\n                onClick={() => {\n                  store.dispatch({\n                    type: \"CHANGE_BLOCK\",\n                    id,\n                    field: \"version\",\n                    value: \"to Soundcool 3.1.1\"\n                  });\n                }}\n              >\n                to Soundcool 3.1.1\n              </div>\n              <div\n                class=\"dropdown-item\"\n                onClick={() => {\n                  store.dispatch({\n                    type: \"CHANGE_BLOCK\",\n                    id,\n                    field: \"version\",\n                    value: \"to Soundcool 3.1.2\"\n                  });\n                }}\n              >\n                to Soundcool 3.1.2\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <span className=\"row text-center m-2\">\n          <label htmlFor=\"channel\" style={{ fontSize: \"0.8rem\" }}>\n            MIDI Ch.\n          </label>\n          <input\n            type=\"text\"\n            className=\"col-md-6 mx-2\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"channel\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"channel\",\n                value: e.target.value\n              });\n            }}\n          />\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default VSTHost;\n","import React from \"react\";\nimport changeBlock from \"../../../handlers\";\nimport store from \"../../../index\";\n\nconst Routing = ({ blockInfo }) => {\n  let { id, name, inNode, outNode, audioObj } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        class=\"\"\n        style={{ position: \"relative\", height: \"170px\", color: \"white\" }}\n      >\n        <div className=\"\" style={{ position: \"absolute\" }}>\n          <div style={{ position: \"absolute\", top: \"5px\" }}>\n            <span style={{ position: \"absolute\", left: \"50px\" }}>1</span>\n            <button\n              id=\"inButton1\"\n              className=\"btn btn-light btn-sm\"\n              style={{\n                width: \"1.5rem\",\n                height: \"1.5rem\",\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                position: \"absolute\",\n                left: \"70px\"\n              }}\n              onClick={() => {\n                store.dispatch({\n                  type: \"CONNECTING_BLOCK\",\n                  node: \"nowIn\",\n                  value: [name, \"0\", id, audioObj]\n                });\n              }}\n            >\n              {inNode[0] === undefined ? \"In\" : inNode[0][0]}\n            </button>\n          </div>\n\n          <div style={{ fontSize: \"0.8rem\" }}>\n            <div className=\"\" style={{ position: \"absolute\", top: \"36px\" }}>\n              <label\n                htmlFor=\"off1\"\n                style={{ position: \"absolute\", left: \"20px\" }}\n              >\n                Off\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"off1\"\n                onClick={() => changeBlock(id, \"off1\", undefined)}\n              />\n            </div>\n            <div className=\"\" style={{ position: \"absolute\", top: \"56px\" }}>\n              <label\n                htmlFor=\"output11\"\n                style={{ position: \"absolute\", left: \"20px\", width: \"70px\" }}\n              >\n                {\"Output 1\"}\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"output11\"\n                onClick={() => changeBlock(id, \"output11\", undefined)}\n              />\n            </div>\n            <div className=\"\" style={{ position: \"absolute\", top: \"76px\" }}>\n              <label\n                htmlFor=\"output21\"\n                style={{ position: \"absolute\", left: \"20px\", width: \"70px\" }}\n              >\n                {\"Output 2\"}\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"output21\"\n                onClick={() => changeBlock(id, \"output21\", undefined)}\n              />\n            </div>\n          </div>\n\n          <div\n            className=\"progress\"\n            style={{\n              position: \"absolute\",\n              left: \"15px\",\n              top: \"100px\",\n              width: \"102px\",\n              height: \"10px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <div\n              className=\"progress-bar \"\n              role=\"progressbar\"\n              aria-valuenow=\"60\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: \"60%\", backgroundColor: \"green\" }}\n            />\n          </div>\n          <div\n            className=\"progress\"\n            style={{\n              position: \"absolute\",\n              left: \"15px\",\n              top: \"115px\",\n              width: \"102px\",\n              height: \"10px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <div\n              className=\"progress-bar \"\n              role=\"progressbar\"\n              aria-valuenow=\"60\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: \"60%\", backgroundColor: \"green\" }}\n            />\n          </div>\n\n          <div style={{ position: \"absolute\", top: \"136px\" }}>\n            <span style={{ position: \"absolute\", left: \"50px\" }}>1</span>\n            <button\n              id=\"outButton1\"\n              className=\"btn btn-light btn-sm\"\n              style={{\n                width: \"1.5rem\",\n                height: \"1.5rem\",\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                position: \"absolute\",\n                left: \"70px\"\n              }}\n              onClick={() => {\n                store.dispatch({\n                  type: \"CONNECTING_BLOCK\",\n                  node: \"nowOut\",\n                  value: [name, \"0\", id, audioObj]\n                });\n              }}\n            >\n              {outNode[0] === undefined ? \"Out\" : outNode[0][0]}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"\" style={{ position: \"absolute\", left: \"130px\" }}>\n          <div style={{ position: \"absolute\", top: \"5px\" }}>\n            <span style={{ position: \"absolute\", left: \"50px\" }}>2</span>\n            <button\n              id=\"inButton2\"\n              className=\"btn btn-light btn-sm\"\n              style={{\n                width: \"1.5rem\",\n                height: \"1.5rem\",\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                position: \"absolute\",\n                left: \"70px\"\n              }}\n              onClick={() => {\n                store.dispatch({\n                  type: \"CONNECTING_BLOCK\",\n                  node: \"nowIn\",\n                  value: [name, \"1\", id, audioObj]\n                });\n              }}\n            >\n              {inNode[1] === undefined ? \"In\" : inNode[1][0]}\n            </button>\n          </div>\n\n          <div style={{ fontSize: \"0.8rem\" }}>\n            <div className=\"\" style={{ position: \"absolute\", top: \"36px\" }}>\n              <label\n                htmlFor=\"off2\"\n                style={{ position: \"absolute\", left: \"20px\" }}\n              >\n                Off\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"off2\"\n                onClick={() => changeBlock(id, \"off2\", undefined)}\n              />\n            </div>\n            <div className=\"\" style={{ position: \"absolute\", top: \"56px\" }}>\n              <label\n                htmlFor=\"output12\"\n                style={{ position: \"absolute\", left: \"20px\", width: \"70px\" }}\n              >\n                {\"Output 1\"}\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"output12\"\n                onClick={() => changeBlock(id, \"output12\", undefined)}\n              />\n            </div>\n            <div className=\"\" style={{ position: \"absolute\", top: \"76px\" }}>\n              <label\n                htmlFor=\"output22\"\n                style={{ position: \"absolute\", left: \"20px\", width: \"70px\" }}\n              >\n                {\"Output 2\"}\n              </label>\n              <input\n                type=\"checkbox\"\n                className=\"\"\n                style={{ position: \"absolute\", left: \"100px\", top: \"3px\" }}\n                id=\"output22\"\n                onClick={() => changeBlock(id, \"output22\", undefined)}\n              />\n            </div>\n          </div>\n\n          <div\n            className=\"progress\"\n            style={{\n              position: \"absolute\",\n              left: \"15px\",\n              top: \"100px\",\n              width: \"102px\",\n              height: \"10px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <div\n              className=\"progress-bar \"\n              role=\"progressbar\"\n              aria-valuenow=\"60\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: \"60%\", backgroundColor: \"green\" }}\n            />\n          </div>\n          <div\n            className=\"progress\"\n            style={{\n              position: \"absolute\",\n              left: \"15px\",\n              top: \"115px\",\n              width: \"102px\",\n              height: \"10px\",\n              backgroundColor: \"black\"\n            }}\n          >\n            <div\n              className=\"progress-bar \"\n              role=\"progressbar\"\n              aria-valuenow=\"60\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: \"60%\", backgroundColor: \"green\" }}\n            />\n          </div>\n\n          <div style={{ position: \"absolute\", top: \"136px\" }}>\n            <span style={{ position: \"absolute\", left: \"50px\" }}>2</span>\n            <button\n              id=\"outButton2\"\n              className=\"btn btn-light btn-sm\"\n              style={{\n                width: \"1.5rem\",\n                height: \"1.5rem\",\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                position: \"absolute\",\n                left: \"70px\"\n              }}\n              onClick={() => {\n                store.dispatch({\n                  type: \"CONNECTING_BLOCK\",\n                  node: \"nowOut\",\n                  value: [name, \"1\", id, audioObj]\n                });\n              }}\n            >\n              {outNode[1] === undefined ? \"Out\" : outNode[1][0]}\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Routing;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nconst Channel = ({ num, name, id, inNode, volume, audioObj }) => {\n  return (\n    <React.Fragment\n      style={{ position: \"absolute\", width: \"40px\", height: \"120px\" }}\n    >\n      <span style={{ position: \"absolute\", left: \"8px\" }}>{num}</span>\n      <button\n        id={\"inButton\" + num}\n        className=\"btn btn-light btn-sm\"\n        style={{\n          width: \"1.5rem\",\n          height: \"1.5rem\",\n          fontSize: \"0.8rem\",\n          padding: \"0px\",\n          position: \"absolute\",\n          left: \"20px\"\n        }}\n        onClick={() => {\n          store.dispatch({\n            type: \"CONNECTING_BLOCK\",\n            node: \"nowIn\",\n            value: [name, num - 1, id, audioObj]\n          });\n        }}\n      >\n        {inNode[num - 1] === undefined ? \"In\" : inNode[num - 1][0]}\n      </button>\n      <div className=\"\">\n        <div\n          className=\"progress progress-bar-vertical\"\n          style={{\n            position: \"absolute\",\n            backgroundColor: \"black\",\n            width: \"10px\",\n            left: \"7px\",\n            top: \"30px\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ height: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n        <div\n          className=\"progress progress-bar-vertical\"\n          style={{\n            position: \"absolute\",\n            backgroundColor: \"black\",\n            width: \"10px\",\n            left: \"20px\",\n            top: \"30px\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ height: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1rem\",\n            height: \"102px\",\n            position: \"absolute\",\n            left: \"32px\",\n            top: \"28px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"volume\" + num,\n              value: e.target.value\n            });\n          }}\n          min={0}\n          max={100}\n          step={1}\n          value={volume}\n          id={\"volume\" + num}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst Mixer = ({ blockInfo }) => {\n  // #region props\n  let {\n    id,\n    name,\n    inNode,\n    volume1,\n    volume2,\n    volume3,\n    volume4,\n    volume5,\n    volume6,\n    volume7,\n    volume8,\n    volumeMaster,\n    audioObj\n  } = blockInfo;\n  // #endregion\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\", height: \"280px\" }}>\n        <div style={{ position: \"absolute\", left: \"10px\" }}>\n          <Channel\n            num={1}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume1}\n          />\n        </div>\n        <div style={{ position: \"absolute\", left: \"62px\" }}>\n          <Channel\n            num={2}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume2}\n          />\n        </div>\n        <div style={{ position: \"absolute\", left: \"114px\" }}>\n          <Channel\n            num={3}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume3}\n          />\n        </div>\n        <div style={{ position: \"absolute\", left: \"166px\" }}>\n          <Channel\n            num={4}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume4}\n          />\n        </div>\n        <div style={{ position: \"absolute\", top: \"140px\", left: \"10px\" }}>\n          <Channel\n            num={5}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume5}\n          />\n        </div>\n        <div style={{ position: \"absolute\", top: \"140px\", left: \"62px\" }}>\n          <Channel\n            num={6}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume6}\n          />\n        </div>\n        <div style={{ position: \"absolute\", top: \"140px\", left: \"114px\" }}>\n          <Channel\n            num={7}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume7}\n          />\n        </div>\n        <div style={{ position: \"absolute\", top: \"140px\", left: \"166px\" }}>\n          <Channel\n            num={8}\n            name={name}\n            id={id}\n            inNode={inNode}\n            audioObj={audioObj}\n            volume={volume8}\n          />\n        </div>\n\n        <div className=\"\" style={{ position: \"absolute\", left: \"220px\" }}>\n          <div className=\"\">\n            <div\n              className=\"progress progress-bar-vertical\"\n              style={{\n                position: \"absolute\",\n                backgroundColor: \"black\",\n                height: \"200px\",\n                width: \"10px\",\n                left: \"7px\",\n                top: \"30px\"\n              }}\n            >\n              <div\n                className=\"progress-bar \"\n                role=\"progressbar\"\n                aria-valuenow=\"60\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ height: \"60%\", backgroundColor: \"green\" }}\n              />\n            </div>\n            <div\n              className=\"progress progress-bar-vertical\"\n              style={{\n                position: \"absolute\",\n                backgroundColor: \"black\",\n                height: \"200px\",\n                width: \"10px\",\n                left: \"20px\",\n                top: \"30px\"\n              }}\n            >\n              <div\n                className=\"progress-bar \"\n                role=\"progressbar\"\n                aria-valuenow=\"60\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ height: \"60%\", backgroundColor: \"green\" }}\n              />\n            </div>\n            <input\n              className=\"slider \"\n              orient=\"vertical\"\n              type=\"range\"\n              style={{\n                width: \"1rem\",\n                height: \"200px\",\n                position: \"absolute\",\n                left: \"32px\",\n                top: \"28px\"\n              }}\n              onChange={e => {\n                store.dispatch({\n                  type: \"CHANGE_BLOCK\",\n                  id: id,\n                  field: \"volumeMaster\",\n                  value: e.target.value\n                });\n              }}\n              min={0}\n              max={100}\n              step={1}\n              value={volumeMaster}\n              id={\"volumeMaster\"}\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"text-center\"\n        style={{ height: \"30px\", backgroundColor: \"grey\" }}\n      >\n        <div className=\"col-md-12\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"m-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Mixer;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\nimport { FaCircle, FaSquare } from \"react-icons/fa\";\n\nconst circleStyle = {\n  width: \"1.5rem\",\n  height: \"1.5rem\",\n  textAlign: \"center\",\n  fontSize: \"14px\",\n  lineHeight: 1.428571429,\n  borderRadius: \"1rem\",\n  borderColor: \"black\"\n};\n\nconst timing = x => {\n  if (x.toString().length === 1) {\n    return \"0\" + x;\n  } else {\n    return x;\n  }\n};\n\nconst Record = ({ blockInfo }) => {\n  let { id, module, recording, volume, timer } = blockInfo;\n  let hour = timing(timer / 3600);\n  let minute = timing((timer / 60) % 60);\n  let second = timing(timer % 60);\n  let recordButton;\n  if (!recording) {\n    recordButton = (\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"180px\"\n        }}\n      >\n        <button\n          className=\"btn btn-light \"\n          style={{\n            ...circleStyle,\n            position: \"absolute\",\n            fontSize: \"14px\",\n            padding: \"0px\",\n            backgroundColor: \"white\"\n          }}\n          onClick={() => changeBlock(id, \"recording\", undefined)}\n        >\n          <FaCircle style={{ color: \"red\", marginTop: \"-3px\" }} />\n        </button>\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"4px\",\n            left: \"28px\"\n          }}\n        >\n          Record\n        </span>\n      </div>\n    );\n  } else {\n    recordButton = (\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"180px\"\n        }}\n      >\n        <button\n          className=\"btn btn-light \"\n          style={{\n            ...circleStyle,\n            position: \"absolute\",\n            fontSize: \"14px\",\n            padding: \"0px\",\n            backgroundColor: \"red\"\n          }}\n          onClick={() => changeBlock(id, \"recording\", undefined)}\n        >\n          <FaSquare style={{ color: \"white\", marginTop: \"-3px\" }} />\n        </button>\n        <span\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"4px\",\n            left: \"28px\"\n          }}\n        >\n          Stop\n        </span>\n      </div>\n    );\n  }\n  return (\n    <React.Fragment>\n      <div class=\"text-center\" style={{ position: \"relative\", height: \"88px\" }}>\n        <label\n          htmlFor=\"fileName\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            left: \"6px\",\n            top: \"4px\"\n          }}\n        >\n          {\"File Name: \"}\n        </label>\n\n        <input\n          type=\"text\"\n          style={{\n            position: \"absolute\",\n            width: \"70px\",\n            height: \"16px\",\n            left: \"70px\",\n            top: \"5px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e => changeBlock(id, \"fileName\", e.target.value)}\n        />\n\n        {recordButton}\n\n        {/* Progress Bars */}\n        <div\n          className=\"\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"28px\",\n            left: \"6px\"\n          }}\n        >\n          L\n        </div>\n        <div\n          className=\"progress\"\n          style={{\n            width: \"270px\",\n            height: \"15px\",\n            position: \"absolute\",\n            top: \"30px\",\n            left: \"20px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ width: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        <div\n          className=\"\"\n          style={{\n            fontSize: \"0.8rem\",\n            position: \"absolute\",\n            top: \"48px\",\n            left: \"6px\"\n          }}\n        >\n          R\n        </div>\n        <div\n          className=\"progress\"\n          style={{\n            width: \"270px\",\n            height: \"15px\",\n            position: \"absolute\",\n            top: \"50px\",\n            left: \"20px\",\n            backgroundColor: \"black\"\n          }}\n        >\n          <div\n            className=\"progress-bar \"\n            role=\"progressbar\"\n            aria-valuenow=\"60\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            style={{ width: \"60%\", backgroundColor: \"green\" }}\n          />\n        </div>\n\n        {/* Volume Slider */}\n        <input\n          className=\"slider\"\n          type=\"range\"\n          style={{\n            width: \"270px\",\n            position: \"absolute\",\n            left: \"20px\",\n            top: \"70px\"\n          }}\n          onChange={e => {\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"volume\",\n              value: e.target.value\n            });\n          }}\n          min={0}\n          max={100}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n\n      <div className=\"text-center\" style={{ backgroundColor: \"grey\" }}>\n        <div className=\"badge badge-fill badge-light badge-sm\">\n          {hour + \":\" + minute + \":\" + second}\n        </div>\n        <button\n          className=\"badge-pill badge-light badge-sm mx-2 my-1\"\n          style={{ fontSize: \"0.8rem\" }}\n          onClick={() => changeBlock(id, \"module\", undefined)}\n        >\n          {module ? \"Module Input\" : \"Input Device\"}\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Record;\n","import React from \"react\";\n\nclass Spectroscope extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.renderer = undefined;\n  }\n\n  // render function\n  renderAudio = () => {\n    let { audioObj } = this.props.blockInfo;\n    let canvas = this.canvasRef.current;\n    if (canvas === null) {\n      clearInterval(this.renderer);\n      return;\n    }\n    let canvasCtx = canvas.getContext(\"2d\");\n    let renderCtx = canvasCtx;\n    let data = audioObj.getAudioData();\n    // let length = data.length;\n    let fftSize = audioObj.options.fftSize;\n    let W = renderCtx.canvas.width - 6;\n    let H = renderCtx.canvas.height;\n    let minDb = audioObj.analyzerNode.analyzer.minDecibels;\n    let maxDb = audioObj.analyzerNode.analyzer.maxDecibels;\n    let scaleY = function(y) {\n      y = (y - minDb) / (maxDb - minDb);\n      return (1 - y) * H;\n    };\n    renderCtx.clearRect(0, 0, W, H);\n    renderCtx.beginPath();\n    renderCtx.fillStyle = \"rgba(0,0,0,.4)\";\n    renderCtx.moveTo(0, H);\n    // let range = fftSize;\n    for (let i = 0; i <= fftSize; i++) {\n      renderCtx.lineTo(i, scaleY(data[i]));\n    }\n    renderCtx.lineTo(W, H);\n    renderCtx.fill();\n  };\n\n  // bindtocanvas\n  componentDidMount = () => {\n    let { audioObj, renderRate } = this.props.blockInfo;\n    this.renderer = setInterval(this.renderAudio.bind(audioObj), renderRate);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className=\"\"\n          style={{\n            width: \"288px\",\n            height: \"188px\",\n            position: \"relative\"\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"293px\",\n              height: \"168px\",\n              top: \"10px\",\n              left: \"10px\",\n              backgroundColor: \"#DCDEE0\"\n            }}\n          >\n            <canvas\n              ref={this.canvasRef}\n              style={{ position: \"absolute\", height: \"168px\", width: \"293px\" }}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Spectroscope;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nclass Oscilloscope extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.renderer = undefined;\n  }\n\n  // render function\n  renderAudio = () => {\n    let { audioObj } = this.props.blockInfo;\n    let canvas = this.canvasRef.current;\n    if (canvas === null) {\n      clearInterval(this.renderer);\n      return;\n    }\n\n    let canvasCtx = canvas.getContext(\"2d\");\n    let renderCtx = canvasCtx;\n    let data = audioObj.getAudioData();\n    let length = data.length;\n    let W = renderCtx.canvas.width;\n    let H = renderCtx.canvas.height;\n    let scaleY = function(y) {\n      return (y / 128.0) * (H / 2);\n    };\n    renderCtx.clearRect(0, 0, W, H);\n    renderCtx.beginPath();\n    renderCtx.strokeStyle = \"rgba(93,168,60,0.8)\";\n    renderCtx.moveTo(0, scaleY(data[0]));\n    for (let i = 0; i < length; ++i) {\n      renderCtx.lineTo((W * i) / length, scaleY(data[i]));\n    }\n    renderCtx.stroke();\n  };\n\n  // bindtocanvas\n  componentDidMount = () => {\n    let { audioObj, renderRate } = this.props.blockInfo;\n    this.renderer = setInterval(this.renderAudio.bind(audioObj), renderRate);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className=\"\"\n          style={{\n            width: \"288px\",\n            height: \"188px\",\n            position: \"relative\"\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"293px\",\n              height: \"168px\",\n              top: \"10px\",\n              left: \"10px\",\n              backgroundColor: \"#DCDEE0\"\n            }}\n          >\n            <canvas\n              ref={this.canvasRef}\n              style={{ position: \"absolute\", width: \"293px\", height: \"168px\" }}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Oscilloscope;\n","import React from \"react\";\nimport store from \"../../../index\";\n// import {canvas} from \"react-canvas\"\n\nconst Envelope = ({ blockInfo }) => {\n  let {} = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"188px\",\n          position: \"relative\"\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"263px\",\n            height: \"168px\",\n            top: \"10px\",\n            left: \"10px\",\n            backgroundColor: \"#DCDEE0\"\n          }}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Envelope;\n","import React from \"react\";\nimport store from \"../../../index\";\n\nconst Filter = ({ blockInfo }) => {\n  let {} = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"188px\",\n          position: \"relative\"\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            width: \"263px\",\n            height: \"168px\",\n            top: \"10px\",\n            left: \"10px\",\n            backgroundColor: \"#DCDEE0\"\n          }}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\n\nconst changeInstrument = (i, id) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"instrument\",\n    value: i\n  });\n};\n\nconst changeMIDIMessage = (m, id) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"midiMessage\",\n    value: m\n  });\n};\n\nconst Keyboard = ({ blockInfo }) => {\n  let {\n    id,\n    instrument,\n    channel,\n    viewNames,\n    volume,\n    module,\n    octave,\n    noteOn,\n    midiMessage\n  } = blockInfo;\n  // a list of 128 general midi instruments\n  let instruments = [\n    \"1 Acoustic Grand Piano\",\n    \"2 Bright Acoustic Piano\",\n    \"3 Electric Grand Piano\",\n    \"4 Honky-Tonk Piano\",\n    \"5 Electric Piano 1\",\n    \"6 Electric Piano 2\",\n    \"7 Harpsichord\",\n    \"8 Clavinet\",\n    \"9 Celesta\",\n    \"10 Glockenspiel\",\n    \"11 Music Box\",\n    \"12 Vibraphone\",\n    \"13 Marimba\",\n    \"14 Xylophone\",\n    \"15 Tubular Bells\",\n    \"16 Dulcimer / Santur\",\n    \"17 Drawbar Organ\",\n    \"18 Percussive Organ\",\n    \"19 Rock Organ\",\n    \"20 Church Organ\",\n    \"21 Reed Organ\",\n    \"22 Accordion\",\n    \"23 Harmonica\",\n    \"24 Tango Accordion / Bandoneon\",\n    \"25 Acoustic Guitar (Nylon)\",\n    \"26 Acoustic Guitar (Steel)\",\n    \"27 Electric Guitar (Jazz)\",\n    \"28 Electric Guitar (Clean)\",\n    \"29 Electric Guitar (Muted)\",\n    \"30 Overdriven Guitar\",\n    \"31 Distortion Guitar\",\n    \"32 Guitar Harmonics\",\n    \"33 Acoustic Bass\",\n    \"34 Electric Bass (Finger)\",\n    \"35 Electric Bass (Pick)\",\n    \"36 Fretless Bass\",\n    \"37 Slap Bass 1\",\n    \"38 Slap Bass 2\",\n    \"39 Synth Bass 1\",\n    \"40 Synth Bass 2\",\n    \"41 Violin\",\n    \"42 Viola\",\n    \"43 Cello\",\n    \"44 Contrabass\",\n    \"45 Tremolo Strings\",\n    \"46 Pizzicato Strings\",\n    \"47 Orchestral Harp\",\n    \"48 Timpani\",\n    \"49 String Ensemble 1\",\n    \"50 String Ensemble 2\",\n    \"51 Synth Strings 1\",\n    \"52 Synth Strings 2\",\n    \"53 Choir Aahs\",\n    \"54 Voice Oohs\",\n    \"55 Synth Voice\",\n    \"56 Orchestra Hit\",\n    \"57 Trumpet\",\n    \"58 Trombone\",\n    \"59 Tuba\",\n    \"60 Muted Trumpet\",\n    \"61 French Horn\",\n    \"62 Brass Section\",\n    \"63 Synth Brass 1\",\n    \"64 Synth Brass 2\",\n    \"65 Soprano Sax\",\n    \"66 Alto Sax\",\n    \"67 Tenor Sax\",\n    \"68 Baritone Sax\",\n    \"69 Oboe\",\n    \"70 English Horn\",\n    \"71 Bassoon\",\n    \"72 Clarinet\",\n    \"73 Piccolo\",\n    \"74 Flute\",\n    \"75 Recorder\",\n    \"76 Pan Flute\",\n    \"77 Blown Bottle\",\n    \"78 Shakuhachi\",\n    \"79 Whistle\",\n    \"80 Ocarina\",\n    \"81 Lead 1 (Square)\",\n    \"82 Lead 2 (Sawtooth)\",\n    \"83 Lead 3 (Calliope)\",\n    \"84 Lead 4 (Chiff)\",\n    \"85 Lead 5 (Charang)\",\n    \"86 Lead 6 (Voice)\",\n    \"87 Lead 7 (Fifths)\",\n    \"88 Lead 8 (Bass + Lead)\",\n    \"89 Pad 1 (New Age)\",\n    \"90 Pad 2 (Warm)\",\n    \"91 Pad 3 (Polysynth)\",\n    \"92 Pad 4 (Choir)\",\n    \"93 Pad 5 (Bowed)\",\n    \"94 Pad 6 (Metallic)\",\n    \"95 Pad 7 (Halo)\",\n    \"96 Pad 8 (Sweep)\",\n    \"97 FX 1 (Rain)\",\n    \"98 FX 2 (Soundtrack)\",\n    \"99 FX 3 (Crystal)\",\n    \"100 FX 4 (Atmosphere)\",\n    \"101 FX 5 (Brightness)\",\n    \"102 FX 6 (Goblins)\",\n    \"103 FX 7 (Echoes)\",\n    \"104 FX 8 (Sci-Fi)\",\n    \"105 Sitar\",\n    \"106 Banjo\",\n    \"107 Shamisen\",\n    \"108 Koto\",\n    \"109 Kalimba\",\n    \"110 Bagpipe\",\n    \"111 Fiddle\",\n    \"112 Shanai\",\n    \"113 Tinkle Bell\",\n    \"114 Agogo\",\n    \"115 Steel Drums\",\n    \"116 Woodblock\",\n    \"117 Taiko Drum\",\n    \"118 Melodic Tom\",\n    \"119 Synth Drum\",\n    \"120 Reverse Cymbal\",\n    \"121 Guitar Fret Noise\",\n    \"122 Breath Noise\",\n    \"123 Seashore\",\n    \"124 Bird Tweet\",\n    \"125 Telephone Ring\",\n    \"126 Helicopter\",\n    \"127 Applause\",\n    \"128 Gunshot\"\n  ];\n  let noteNames = [\"DO\", \"RE\", \"MI\", \"FA\", \"SOL\", \"LA\", \"SI\", \"DO\"];\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"178px\",\n          position: \"relative\"\n        }}\n      >\n        {/* Instrument Dropdown menu */}\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"5px\",\n            left: \"10px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle l-6 \"\n            style={{\n              fontSize: \"0.8rem\",\n              padding: \"0px\",\n              width: \"220px\",\n              height: \"25px\"\n            }}\n            id=\"instrument dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {instrument}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"instrument dropdown\"\n          >\n            {instruments.map(i => (\n              <div\n                class=\"dropdown-item\"\n                onClick={() => {\n                  changeInstrument(i, id);\n                  changeMIDIMessage(\n                    \"0xc\" +\n                      (channel - 1).toString(16) +\n                      instruments.indexOf(i).toString(16),\n                    id\n                  );\n                }}\n              >\n                {i}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {console.log(midiMessage)}\n\n        {/* Output selection */}\n        <button\n          className=\"badge-light badge-sm\"\n          style={{ fontSize: \"0.8rem\" }}\n          onClick={() => changeBlock(id, \"module\", undefined)}\n          style={{\n            position: \"absolute\",\n            top: \"5px\",\n            left: \"240px\",\n            width: \"70px\",\n            height: \"34px\",\n            lineHeight: \"13px\",\n            fontSize: \"0.7rem\"\n          }}\n        >\n          {module ? \"Module Ouput\" : \"Internal Synth\"}\n        </button>\n\n        {/* White keys */}\n        {[...Array(8).keys()].map(i => (\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"42px\",\n              left: 30 * i + 10 + \"px\",\n              width: \"30px\",\n              height: \"100px\",\n              backgroundColor: noteOn[i] ? \"#7DE4FC\" : \"#DCDEE0\",\n              borderStyle: \"solid\",\n              borderWidth: \"1px\",\n              borderColor: \"black\"\n            }}\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id,\n                field: \"noteOn\",\n                num: i,\n                value: undefined\n              });\n              let status = (noteOn[i] ? \"9\" : \"8\") + (channel - 1).toString(16);\n              let white = [0, 2, 4, 5, 7, 9, 11, 12];\n              let key = white[i] + octave * 12;\n              changeMIDIMessage(\n                \"0x\" + status + key.toString(16) + volume.toString(16),\n                id\n              );\n            }}\n          />\n        ))}\n\n        {/* Black keys */}\n        {[...Array(2).keys()].map(i => (\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"42px\",\n              left: 30 * i + 30 + \"px\",\n              width: \"20px\",\n              height: \"65px\",\n              backgroundColor: noteOn[i + 8] ? \"#7DE4FC\" : \"black\",\n              borderStyle: \"solid\",\n              borderWidth: \"1px\",\n              borderColor: \"black\"\n            }}\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id,\n                field: \"noteOn\",\n                num: i + 8,\n                value: undefined\n              });\n              let status = (noteOn[i] ? \"9\" : \"8\") + (channel - 1).toString(16);\n              let black1 = [1, 3];\n              let key = black1[i] + octave * 12;\n              changeMIDIMessage(\n                \"0x\" + status + key.toString(16) + volume.toString(16),\n                id\n              );\n            }}\n          />\n        ))}\n        {[...Array(3).keys()].map(i => (\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"42px\",\n              left: 30 * i + 120 + \"px\",\n              width: \"20px\",\n              height: \"65px\",\n              backgroundColor: noteOn[i + 10] ? \"#7DE4FC\" : \"black\",\n              borderStyle: \"solid\",\n              borderWidth: \"1px\",\n              borderColor: \"black\"\n            }}\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id,\n                field: \"noteOn\",\n                num: i + 10,\n                value: undefined\n              });\n              let status = (noteOn[i] ? \"9\" : \"8\") + (channel - 1).toString(16);\n              let black2 = [6, 8, 10];\n              let key = black2[i] + octave * 12;\n              changeMIDIMessage(\n                \"0x\" + status + key.toString(16) + volume.toString(16),\n                id\n              );\n            }}\n          />\n        ))}\n\n        {/* Channel Selection */}\n        <label\n          htmlFor=\"channel\"\n          style={{\n            position: \"absolute\",\n            top: \"148px\",\n            left: \"10px\",\n            fontSize: \"0.8rem\"\n          }}\n        >\n          MIDI CHANNEL:\n        </label>\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"145px\",\n            left: \"110px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle l-6 \"\n            style={{\n              fontSize: \"0.8rem\",\n              padding: \"0px\",\n              width: \"40px\",\n              height: \"25px\"\n            }}\n            id=\"channel dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {channel}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"channel dropdown\"\n          >\n            {[...Array(16).keys()].map(i => (\n              <div\n                class=\"dropdown-item\"\n                onClick={() => {\n                  changeBlock(id, \"channel\", i + 1);\n                }}\n              >\n                {i + 1}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* View Note names */}\n        <label\n          htmlFor=\"viewNames\"\n          style={{\n            position: \"absolute\",\n            top: \"148px\",\n            left: \"160px\",\n            fontSize: \"0.8rem\",\n            width: \"160px\"\n          }}\n        >\n          View Note Names:\n        </label>\n        <input\n          type=\"checkbox\"\n          className=\"m-1\"\n          id=\"viewNames\"\n          style={{\n            position: \"absolute\",\n            top: \"148px\",\n            left: \"268px\",\n            fontSize: \"0.8rem\"\n          }}\n          onClick={() => changeBlock(id, \"viewNames\", undefined)}\n        />\n        {viewNames ? (\n          [...Array(8).keys()].map(i => (\n            <div\n              style={{\n                position: \"absolute\",\n                fontSize: \"0.7rem\",\n                top: \"120px\",\n                left: i * 30 + 16 + \"px\"\n              }}\n            >\n              {noteNames[i]}\n            </div>\n          ))\n        ) : (\n          <span />\n        )}\n\n        {/* Volume Slider */}\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"100px\",\n            position: \"absolute\",\n            left: \"268px\",\n            top: \"42px\"\n          }}\n          onChange={e => {\n            changeBlock(id, \"volume\", e.target.value);\n          }}\n          min={0}\n          max={127}\n          step={1}\n          value={volume}\n          id=\"volume\"\n        />\n      </div>\n\n      {/* Footer */}\n      <div\n        className=\"\"\n        style={{\n          position: \"relative\",\n          backgroundColor: \"grey\",\n          height: \"30px\"\n        }}\n      >\n        {/* octave */}\n        <span className=\"text-center\">\n          <div\n            class=\"dropdown\"\n            style={{\n              position: \"absolute\",\n              top: \"3px\",\n              left: \"60px\"\n            }}\n          >\n            <button\n              className=\"btn-sm btn-light dropdown-toggle l-6 \"\n              style={{\n                fontSize: \"0.8rem\",\n                padding: \"0px\",\n                width: \"45px\",\n                height: \"23px\"\n              }}\n              id=\"octave dropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              {\"C\" + octave}\n            </button>\n            <div\n              class=\"dropdown-menu\"\n              style={{ fontSize: \"0.8rem\" }}\n              aria-labelledby=\"octave dropdown\"\n            >\n              {[...Array(11).keys()].map(i => (\n                <div\n                  class=\"dropdown-item\"\n                  onClick={() => {\n                    changeBlock(id, \"octave\", i - 2);\n                  }}\n                >\n                  {\"C\" + (i - 2)}\n                </div>\n              ))}\n            </div>\n          </div>\n        </span>\n        {/* osc port */}\n        <span\n          className=\"text-center\"\n          style={{ position: \"absolute\", left: \"140px\", top: \"0px\" }}\n        >\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Keyboard;\n","import React from \"react\";\nimport store from \"../../../index\";\nimport changeBlock from \"../../../handlers\";\nimport { FaPlay, FaSquare } from \"react-icons/fa\";\n\nconst circleStyle = {\n  width: \"1.5rem\",\n  height: \"1.5rem\",\n  textAlign: \"center\",\n  padding: \"0px\",\n  fontSize: \"10px\",\n  borderRadius: \"1rem\",\n  borderColor: \"black\"\n};\n\nconst IndividualPlayer = ({ id, num, file }) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        borderColor: \"white\",\n        width: \"70px\",\n        height: \"75px\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\"\n      }}\n    >\n      <div style={{ position: \"absolute\", left: \"2px\" }}>{num + 1}</div>\n      <button\n        className=\"btn btn-light m-1\"\n        style={{\n          ...circleStyle,\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"5px\"\n        }}\n        onClick={() =>\n          store.dispatch({\n            type: \"CHANGE_BLOCK\",\n            id,\n            field: \"playings\",\n            num,\n            value: undefined\n          })\n        }\n      >\n        <FaPlay style={{ fontSize: \"12px\", marginLeft: \"2.5px\" }} />\n      </button>\n      <button\n        className=\"btn btn-light btn-circle m-1\"\n        style={{\n          ...circleStyle,\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"31px\"\n        }}\n        onClick={() =>\n          store.dispatch({\n            type: \"CHANGE_BLOCK\",\n            id,\n            field: \"playings\",\n            num,\n            value: undefined\n          })\n        }\n      >\n        <FaSquare style={{ fontSize: \"12px\" }} />\n      </button>\n\n      <div\n        class=\"dropdown\"\n        style={{\n          position: \"absolute\",\n          top: \"40px\",\n          left: \"5px\"\n        }}\n      >\n        <button\n          className=\"btn-sm btn-light dropdown-toggle\"\n          style={{\n            fontSize: \"0.8rem\",\n            padding: \"0px\",\n            width: \"55px\",\n            height: \"25px\"\n          }}\n          id=\"file dropdown\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          {file}\n        </button>\n        <div\n          class=\"dropdown-menu\"\n          style={{ fontSize: \"0.8rem\" }}\n          aria-labelledby=\"file dropdown\"\n        >\n          {/* <div class=\"dropdown-item\" onClick={() => changeMod(\"No Mod\", id)}>\n              No Mod\n            </div> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SamplePlayer = ({ blockInfo }) => {\n  let l = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  let { id, speed, files, masterVolume } = blockInfo;\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"290px\",\n          position: \"relative\"\n        }}\n      >\n        {/* general controls */}\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"2px\"\n          }}\n        >\n          <label\n            htmlFor=\"random\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"3px\",\n              top: \"4px\"\n            }}\n          >\n            Random\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"\"\n            id=\"random\"\n            style={{\n              position: \"absolute\",\n              left: \"50px\",\n              top: \"5px\",\n              height: \"20px\",\n              width: \"20px\"\n            }}\n            onClick={() => changeBlock(id, \"random\", undefined)}\n          />\n          <label\n            htmlFor=\"loop\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"70px\",\n              top: \"4px\"\n            }}\n          >\n            Loop\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"\"\n            id=\"loop\"\n            style={{\n              position: \"absolute\",\n              left: \"100px\",\n              top: \"5px\",\n              height: \"20px\",\n              width: \"20px\"\n            }}\n            onClick={() => changeBlock(id, \"loop\", undefined)}\n          />\n\n          <div style={{ position: \"absolute\", left: \"115px\" }}>\n            <div\n              style={{ fontSize: \"0.8rem\", position: \"absolute\", left: \"10px\" }}\n            >\n              Speed\n            </div>\n            <input\n              className=\"slider mx-1 my-2 text-center\"\n              type=\"range\"\n              style={{\n                width: \"150px\",\n                position: \"absolute\",\n                left: \"5px\",\n                top: \"6px\"\n              }}\n              onChange={e => changeBlock(id, \"speed\", e.target.value)}\n              min={0}\n              max={2}\n              step={0.1}\n              value={speed}\n              id=\"speed\"\n            />\n            <div\n              className=\"text-center mx-1\"\n              style={{ fontSize: \"0.8rem\", position: \"absolute\", top: \"28px\" }}\n            >\n              <span className=\"\" style={{ position: \"absolute\", left: \"5px\" }}>\n                x0\n              </span>\n              <span className=\"\" style={{ position: \"absolute\", left: \"72px\" }}>\n                x1\n              </span>\n              <span\n                className=\"\"\n                style={{ position: \"absolute\", left: \"140px\" }}\n              >\n                x2\n              </span>\n            </div>\n          </div>\n\n          <button\n            className=\"btn btn-light btn-circle m-1\"\n            style={{\n              ...circleStyle,\n              position: \"absolute\",\n              left: \"275px\"\n            }}\n            onClick={() => changeBlock(id, \"reversed\", undefined)}\n          >\n            <FaPlay\n              style={{\n                fontSize: \"12px\",\n                marginLeft: \"-2px\",\n                marginTop: \"-1px\",\n                transform: \"scaleX(-1)\"\n              }}\n            />\n          </button>\n        </div>\n\n        {/* individual players x12 */}\n        {l.map(x => {\n          let top = Math.floor(x / 4) * 75 + 50 + \"px\";\n          let left = (x % 4) * 70 + 5 + \"px\";\n          return (\n            <div\n              key={x}\n              style={{\n                position: \"absolute\",\n                top: top,\n                left: left\n              }}\n            >\n              <IndividualPlayer id={id} num={x} file={files[x]} />\n            </div>\n          );\n        })}\n\n        {/* mastervolume slider */}\n        <input\n          className=\"slider text-center\"\n          orient=\"vertical\"\n          type=\"range\"\n          style={{\n            width: \"1.5rem\",\n            height: \"220px\",\n            position: \"absolute\",\n            left: \"288px\",\n            top: \"50px\"\n          }}\n          onChange={e => changeBlock(id, \"masterVolume\", e.target.value)}\n          min={0}\n          max={100}\n          step={1}\n          value={masterVolume}\n          id=\"masterVolume\"\n        />\n      </div>\n\n      {/* footer */}\n      <div\n        className=\"text-center\"\n        style={{ backgroundColor: \"grey\", height: \"30px\" }}\n      >\n        <span className=\"col text-center\">\n          <label htmlFor=\"kinect\" style={{ fontSize: \"0.8rem\" }}>\n            Kinect\n          </label>\n          <input\n            type=\"checkbox\"\n            className=\"m-1\"\n            id=\"kinect\"\n            onClick={() => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"kinect\",\n                value: undefined\n              });\n            }}\n          />\n        </span>\n        <span className=\"col text-center\">\n          <label htmlFor=\"osc\" style={{ fontSize: \"0.8rem\" }}>\n            OSC port:\n          </label>\n          <input\n            type=\"text\"\n            className=\"my-1\"\n            style={{ height: \"1.5rem\", width: \"3rem\" }}\n            id=\"osc\"\n            onChange={e => {\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"osc\",\n                value: e.target.value\n              });\n            }}\n          />\n        </span>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default SamplePlayer;\n","import React from \"react\";\nimport \"../../../index.css\";\nimport changeBlock from \"../../../handlers\";\nimport store from \"../../../index\";\nimport {\n  FaArrowRight,\n  FaArrowLeft,\n  FaExchangeAlt,\n  FaRetweet\n} from \"react-icons/fa\";\nimport { Knob } from \"react-rotary-knob\";\nimport { stringLiteral } from \"@babel/types\";\n\nconst changeWaveform = (w, id, num) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"waveforms\",\n    num: num,\n    value: w\n  });\n};\n\nconst changeMod = (w, id, num) => {\n  store.dispatch({\n    type: \"CHANGE_BLOCK\",\n    id: id,\n    field: \"modulations\",\n    num: num,\n    value: w\n  });\n};\n\nconst getNote = x => {\n  const noteList = [\n    \"C\",\n    \"•\",\n    \"C#\",\n    \"•\",\n    \"D\",\n    \"•\",\n    \"D#\",\n    \"•\",\n    \"E\",\n    \"•\",\n    \"F\",\n    \"•\",\n    \"F#\",\n    \"•\",\n    \"G\",\n    \"•\",\n    \"G#\",\n    \"•\",\n    \"A\",\n    \"•\",\n    \"A#\",\n    \"•\",\n    \"B\"\n  ];\n  return noteList[x];\n};\n\nconst Beat = ({\n  // #region props\n  id,\n  num,\n  note,\n  modValue,\n  selected,\n  skipped,\n  waveform,\n  octave,\n  mod,\n  duration,\n  modulation\n  // #endregion\n}) => {\n  return (\n    <div style={{ position: \"absolute\", width: \"70px\", height: \"160px\" }}>\n      <div style={{ position: \"absolute\", width: \"70px\", height: \"100px\" }}>\n        {/* <Knob /> */}\n        <Knob\n          style={{\n            position: \"absolute\",\n            left: \"5px\",\n            width: \"40px\",\n            height: \"40px\"\n          }}\n          preciseMode={false}\n          value={note}\n          min={0}\n          max={23}\n          onChange={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"notes\",\n              num: num,\n              value: Math.floor(e)\n            })\n          }\n        />\n        <div style={{ position: \"absolute\", top: \"40px\", left: \"18px\" }}>\n          {getNote(note)}\n        </div>\n        <Knob\n          style={{\n            position: \"absolute\",\n            left: \"42px\",\n            top: \"30px\",\n            width: \"40px\",\n            height: \"40px\"\n          }}\n          preciseMode={false}\n          value={modValue}\n          min={0}\n          max={1000}\n          onChange={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"modulationValues\",\n              num: num,\n              value: e\n            })\n          }\n        />\n        <input\n          type=\"number\"\n          value={duration}\n          style={{\n            position: \"absolute\",\n            width: \"35px\",\n            height: \"16px\",\n            left: \"48px\",\n            top: \"5px\",\n            fontSize: \"0.7rem\"\n          }}\n          onChange={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id: id,\n              field: \"durations\",\n              num: num,\n              value: e.target.value\n            })\n          }\n        />\n      </div>\n\n      <div style={{ position: \"absolute\", top: \"80px\" }}>\n        {/* Select and Skip */}\n        <div\n          className={\n            selected ? \"btn btn-small btn-secondary\" : \"btn btn-small btn-light\"\n          }\n          style={{\n            position: \"absolute\",\n            left: \"5px\",\n            top: \"2px\",\n            width: \"45px\",\n            height: \"20px\",\n            fontSize: \"0.7rem\",\n            padding: \"0px\"\n          }}\n          onClick={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id,\n              field: \"selecteds\",\n              num: num,\n              value: undefined\n            })\n          }\n        >\n          Select\n        </div>\n        <div\n          className={\n            skipped ? \"btn btn-small btn-secondary\" : \"btn btn-small btn-light\"\n          }\n          style={{\n            position: \"absolute\",\n            left: \"55px\",\n            top: \"2px\",\n            width: \"30px\",\n            height: \"20px\",\n            fontSize: \"0.7rem\",\n            padding: \"0px\"\n          }}\n          onClick={e =>\n            store.dispatch({\n              type: \"CHANGE_BLOCK\",\n              id,\n              field: \"skippeds\",\n              num: num,\n              value: undefined\n            })\n          }\n        >\n          Skip\n        </div>\n\n        {/* Waveform dropdown */}\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"23px\",\n            left: \"5px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle l-6 \"\n            style={{\n              fontSize: \"0.7rem\",\n              padding: \"0px\",\n              width: \"80px\",\n              height: \"22px\"\n            }}\n            id=\"waveform dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {waveform}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"waveform dropdown\"\n          >\n            <div\n              class=\"dropdown-item\"\n              onClick={() => {\n                changeWaveform(\"Silence\", id, num);\n              }}\n            >\n              Silence\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Sine Wave\", id, num)}\n            >\n              Sine Wave\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Triangle\", id, num)}\n            >\n              Triangle\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Square\", id, num)}\n            >\n              Square\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Sawtooth\", id, num)}\n            >\n              Sawtooth\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"White Noise\", id, num)}\n            >\n              White Noise\n            </div>\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeWaveform(\"Pink Noise\", id, num)}\n            >\n              Pink Noise\n            </div>\n          </div>\n        </div>\n        {/* Mods dropdown */}\n        <div\n          class=\"dropdown\"\n          style={{\n            position: \"absolute\",\n            top: \"48px\",\n            left: \"5px\"\n          }}\n        >\n          <button\n            className=\"btn-sm btn-light dropdown-toggle\"\n            style={{\n              fontSize: \"0.7rem\",\n              padding: \"0px\",\n              width: \"80px\",\n              height: \"22px\"\n            }}\n            id=\"mod dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {modulation}\n          </button>\n          <div\n            class=\"dropdown-menu\"\n            style={{ fontSize: \"0.8rem\" }}\n            aria-labelledby=\"mod dropdown\"\n          >\n            <div\n              class=\"dropdown-item\"\n              onClick={() => changeMod(\"No Mod\", id, num)}\n            >\n              No Mod\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"RM\", id, num)}>\n              RM\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"AM\", id, num)}>\n              AM\n            </div>\n            <div class=\"dropdown-item\" onClick={() => changeMod(\"FM\", id, num)}>\n              FM\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* notelength slider */}\n      <input\n        className=\"slider text-center\"\n        orient=\"vertical\"\n        type=\"range\"\n        style={{\n          width: \"1rem\",\n          height: \"150px\",\n          position: \"absolute\",\n          left: \"85px\",\n          top: \"2px\"\n        }}\n        onChange={e => {\n          store.dispatch({\n            type: \"CHANGE_BLOCK\",\n            id: id,\n            field: \"durations\",\n            num: num,\n            value: e.target.value\n          });\n        }}\n        min={0}\n        max={10000}\n        step={1}\n        value={duration}\n      />\n    </div>\n  );\n};\n\nconst Sequencer = ({ blockInfo }) => {\n  let {\n    // #region props\n    id,\n    waveforms,\n    modulations,\n    modulationValues,\n    notes,\n    durations,\n    selecteds,\n    skippeds,\n    looping,\n    playStyle\n    // #endregion\n  } = blockInfo;\n  let l = [0, 1, 2, 3, 4, 5, 6, 7];\n  return (\n    <React.Fragment>\n      <div\n        className=\"\"\n        style={{\n          width: \"288px\",\n          height: \"520px\",\n          position: \"relative\"\n        }}\n      >\n        <div style={{ position: \"absolute\", top: \"2px\" }}>\n          <label\n            htmlFor=\"signalGenId\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"6px\",\n              width: \"80px\"\n            }}\n          >\n            {\"signalGen Id: \"}\n          </label>\n          <input\n            type=\"number\"\n            style={{\n              position: \"absolute\",\n              width: \"30px\",\n              height: \"16px\",\n              left: \"88px\",\n              top: \"2px\",\n              fontSize: \"0.7rem\"\n            }}\n            onChange={e => changeBlock(id, \"signalGenId\", e.target.value)}\n          />\n          <label\n            htmlFor=\"envId\"\n            style={{\n              fontSize: \"0.8rem\",\n              position: \"absolute\",\n              left: \"125px\",\n              width: \"50px\"\n            }}\n          >\n            {\"Env Id: \"}\n          </label>\n          <input\n            type=\"number\"\n            style={{\n              position: \"absolute\",\n              width: \"30px\",\n              height: \"16px\",\n              left: \"170px\",\n              top: \"2px\",\n              fontSize: \"0.7rem\"\n            }}\n            onChange={e => changeBlock(id, \"envId\", e.target.value)}\n          />\n\n          <FaArrowRight\n            style={{\n              position: \"absolute\",\n              left: \"210px\",\n              top: \"2px\",\n              backgroundColor:\n                playStyle === \"forward\" ? \"darkgrey\" : \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"playStyle\", \"forward\")}\n          />\n          <FaArrowLeft\n            style={{\n              position: \"absolute\",\n              left: \"230px\",\n              top: \"2px\",\n              backgroundColor:\n                playStyle === \"backward\" ? \"darkgrey\" : \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"playStyle\", \"backward\")}\n          />\n          <FaExchangeAlt\n            style={{\n              position: \"absolute\",\n              left: \"252px\",\n              top: \"2px\",\n              backgroundColor:\n                playStyle === \"exchange\" ? \"darkgrey\" : \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"playStyle\", \"exchange\")}\n          />\n          <FaRetweet\n            style={{\n              position: \"absolute\",\n              left: \"276px\",\n              top: \"0px\",\n              fontSize: \"1.2rem\",\n              backgroundColor: looping ? \"darkgrey\" : \"transparent\"\n            }}\n            onClick={() => changeBlock(id, \"looping\", undefined)}\n          />\n        </div>\n\n        {/* all 8 notes */}\n        {l.map(x => {\n          let top = Math.floor(x / 3) * 160 + 30 + \"px\";\n          let left = (x % 3) * 105 + \"px\";\n          return (\n            <div\n              key={x}\n              style={{\n                position: \"absolute\",\n                top: top,\n                left: left\n              }}\n            >\n              <Beat\n                id={id}\n                num={x}\n                waveform={waveforms[x]}\n                modulation={modulations[x]}\n                modValue={modulationValues[x]}\n                duration={durations[x]}\n                note={notes[x]}\n                selected={selecteds[x]}\n                skipped={skippeds[x]}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Sequencer;\n","import React from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport { FaMinus, FaTimes } from \"react-icons/fa\";\nimport {\n  // #region all types\n  Delay,\n  Transposer,\n  Pan,\n  Player,\n  SignalGen,\n  Speaker,\n  DirectInput,\n  Pitch,\n  VSTHost,\n  Routing,\n  Mixer,\n  Record,\n  Spectroscope,\n  Oscilloscope,\n  Envelope,\n  Filter,\n  Keyboard,\n  SamplePlayer,\n  Sequencer\n  // #endregion\n} from \"./types/all\";\nimport store from \"../../index\";\n\nconst eva = typeName => {\n  let t;\n  switch (typeName) {\n    case \"Delay\":\n      t = Delay;\n      break;\n    case \"Transposer\":\n      t = Transposer;\n      break;\n    case \"Pan\":\n      t = Pan;\n      break;\n    case \"Player\":\n      t = Player;\n      break;\n    case \"SignalGen\":\n      t = SignalGen;\n      break;\n    case \"Speaker\":\n      t = Speaker;\n      break;\n    case \"DirectInput\":\n      t = DirectInput;\n      break;\n    case \"Pitch\":\n      t = Pitch;\n      break;\n    case \"VSTHost\":\n      t = VSTHost;\n      break;\n    case \"Routing\":\n      t = Routing;\n      break;\n    case \"Mixer\":\n      t = Mixer;\n      break;\n    case \"Record\":\n      t = Record;\n      break;\n    case \"Spectroscope\":\n      t = Spectroscope;\n      break;\n    case \"Oscilloscope\":\n      t = Oscilloscope;\n      break;\n    case \"Envelope\":\n      t = Envelope;\n      break;\n    case \"Filter\":\n      t = Filter;\n      break;\n    case \"Keyboard\":\n      t = Keyboard;\n      break;\n    case \"SamplePlayer\":\n      t = SamplePlayer;\n      break;\n    case \"Sequencer\":\n      t = Sequencer;\n      break;\n    default:\n      t = <span>No setup yet!</span>;\n  }\n  return t;\n};\n\nconst WithHeader = ({ blockInfo, nowOut, handleDelete }) => {\n  let {\n    typeName,\n    name,\n    id,\n    audioObj,\n    inDisabled,\n    outDisabled,\n    outNode,\n    inNode,\n    collapse,\n    color\n  } = blockInfo;\n  const Block = eva(typeName);\n  let inButton;\n  let outButton;\n\n  // conditionally render in and out buttons in the header\n  if (inDisabled) {\n    inButton = (\n      // nothing, placeholder\n      <div\n        className=\"btn btn-sm m-1 text-center\"\n        style={{\n          // width: \"1.5rem\",\n          height: \"1.5rem\",\n          fontSize: \"0.8rem\",\n          padding: \"0px\"\n        }}\n      />\n    );\n  } else {\n    inButton = (\n      <button\n        id=\"inButton\"\n        className=\"btn btn-light btn-sm m-1 text-center\"\n        style={{\n          width: \"1.5rem\",\n          height: \"1.5rem\",\n          fontSize: \"0.8rem\",\n          padding: \"0px\"\n        }}\n        onClick={() => {\n          store.dispatch({\n            type: \"CONNECTING_BLOCK\",\n            node: \"nowIn\",\n            value: [name, \"0\", id, audioObj]\n          });\n        }}\n      >\n        <div>{inNode[0] === undefined ? \"In\" : inNode[0][0]}</div>\n      </button>\n    );\n  }\n\n  const style1 = {\n    backgroundColor: \"white\",\n    textAlign: \"center\",\n    padding: \"0px\",\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n    fontSize: \"0.8rem\"\n  };\n  const circleStyle = {\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n    textAlign: \"center\",\n    fontSize: \"0.8rem\",\n    padding: \"0px\",\n    lineHeight: 1.428571429,\n    borderRadius: \"0.5rem\",\n    borderColor: \"black\",\n    backgroundColor: \"white\"\n  };\n\n  const outId = nowOut === undefined ? undefined : nowOut[2];\n\n  if (outDisabled) {\n    outButton = <span />;\n  } else {\n    outButton = (\n      <button\n        id=\"outButton\"\n        className=\"btn btn-sm text-center m-1\"\n        style={outId === id ? circleStyle : style1}\n        onClick={() =>\n          store.dispatch({\n            type: \"CONNECTING_BLOCK\",\n            node: \"nowOut\",\n            value: [name, \"0\", id, audioObj]\n          })\n        }\n      >\n        <div>{outNode[0] === undefined ? \"Out\" : outNode[0][0]}</div>\n      </button>\n    );\n  }\n\n  return (\n    <div\n      className=\"text-left my-2\"\n      style={{\n        width: \"20rem\",\n        backgroundColor: color,\n        borderColor: \"grey\",\n        borderStyle: \"solid\",\n        borderWidth: \"2px\"\n      }}\n    >\n      <div className=\"\">\n        {inButton}\n        <span className=\"m-1\" style={{ fontSize: \"0.8rem\" }} id=\"blockName\">\n          {name}\n        </span>\n        <span\n          className=\"badge badge-secondary badge-pill m-1\"\n          style={{ fontSize: \"0.8rem\" }}\n          id=\"typeName\"\n        >\n          {typeName}\n        </span>\n        <span className=\"float-right\">\n          <button\n            id=\"collapseButton\"\n            className=\"btn btn-light btn-sm m-1 text-center\"\n            style={{\n              width: \"1.5rem\",\n              height: \"1.5rem\",\n              fontSize: \"0.4rem\"\n            }}\n            onClick={() =>\n              store.dispatch({\n                type: \"CHANGE_BLOCK\",\n                id: id,\n                field: \"collapse\",\n                value: undefined\n              })\n            }\n          >\n            <FaMinus style={{ marginLeft: \"-1px\" }} />\n          </button>\n\n          <button\n            id=\"closeButton\"\n            className=\"btn btn-light btn-sm m-1 text-center\"\n            style={{\n              width: \"1.5rem\",\n              height: \"1.5rem\",\n              fontSize: \"0.4rem\"\n            }}\n            onClick={() => {\n              handleDelete();\n              store.dispatch({\n                type: \"DELETE_BLOCK\",\n                id: id\n              });\n            }}\n          >\n            <FaTimes style={{ marginLeft: \"-1px\" }} />\n          </button>\n          {outButton}\n        </span>\n      </div>\n      <Collapse isOpen={collapse}>\n        <Block blockInfo={blockInfo} />\n      </Collapse>\n    </div>\n  );\n};\n\nexport default WithHeader;\n","export const sidebar1 = [\r\n  {\r\n    id: \"Delay\",\r\n    typeName: \"Delay\",\r\n    image: \"/assets/images/Delay.png\",\r\n    // content: \"Pan\",\r\n    // additional: \"1\",\r\n    // icon: \"https://picsum.photos/id/10/50/50\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"SignalGen\",\r\n    typeName: \"SignalGen\",\r\n    image: \"/assets/images/SignalGen.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Speaker\",\r\n    typeName: \"Speaker\",\r\n    image: \"/assets/images/Speaker.png\",\r\n    // content: \"Transposer\",\r\n    // additional: \"2\",\r\n    // icon: \"https://picsum.photos/id/11/50/50\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"DirectInput\",\r\n    typeName: \"DirectInput\",\r\n    image: \"/assets/images/DirectInput.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Mixer\",\r\n    typeName: \"Mixer\",\r\n    image: \"/assets/images/Mixer.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Pan\",\r\n    typeName: \"Pan\",\r\n    image: \"/assets/images/Pan.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Player\",\r\n    typeName: \"Player\",\r\n    image: \"/assets/images/Player.png\",\r\n    lastIndex: 1\r\n  }\r\n];\r\n\r\nexport const sidebar2 = [\r\n  // {\r\n  //     id: 'delay',\r\n  //     // content: \"Delay\",\r\n  //     // additional: \"3\",\r\n  //     // icon: \"https://picsum.photos/id/12/50/50\",\r\n  //     lastIndex:1\r\n  //   }\r\n\r\n  {\r\n    id: \"Pitch\",\r\n    typeName: \"Pitch\",\r\n    image: \"/assets/images/Pitch.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Routing\",\r\n    typeName: \"Routing\",\r\n    image: \"/assets/images/Routing.PNG\",\r\n    lastIndex: 1\r\n  },\r\n\r\n  {\r\n    id: \"Transposer\",\r\n    image: \"/assets/images/Transposer.png\",\r\n    typeName: \"Transposer\",\r\n    lastIndex: 1\r\n  },\r\n  //   {\r\n  //     id: \"Record\",\r\n  //     typeName: \"Record\",\r\n  //     image: \"/assets/images/Record.png\",\r\n  //     lastIndex: 1\r\n  //   },\r\n  {\r\n    id: \"Oscilloscope\",\r\n    typeName: \"Oscilloscope\",\r\n    image: \"/assets/images/Oscilloscope.png\",\r\n    lastIndex: 1\r\n  },\r\n  {\r\n    id: \"Spectroscope\",\r\n    typeName: \"Spectroscope\",\r\n    image: \"/assets/images/Spectroscope.png\",\r\n    lastIndex: 1\r\n  }\r\n];\r\n\r\nexport const major1 = [];\r\n\r\nexport const major2 = [];\r\n","const toHex = (r, g, b) => {\n  return \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\n};\n\nconst specValues = {\n  Delay: {\n    color: toHex(210, 189, 120),\n    delayTime: 76,\n    feedback: 0.119,\n    kinect: false,\n    osc: undefined\n  },\n  Transposer: {\n    color: toHex(193, 133, 200),\n    buttonCents: 0,\n    sliderCents: 0,\n    osc: undefined\n  },\n  Pan: {\n    color: toHex(136, 179, 95),\n    panVal: 0,\n    kinect: false,\n    osc: undefined\n  },\n  Player: {\n    inDisabled: true,\n    color: toHex(229, 119, 125),\n    playing: false,\n    reversed: false,\n    loop: false,\n    speed: 1,\n    volume: 60,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    file: undefined,\n    kinect: false,\n    osc: undefined\n  },\n  SignalGen: {\n    color: toHex(89, 199, 198),\n    frequency: 440,\n    waveform: \"Silence\",\n    modulation: \"No Mod\",\n    MI: 0,\n    FD: 0,\n    volume: 0.6,\n    kinect: false,\n    osc: undefined\n  },\n  Speaker: {\n    color: toHex(240, 254, 199),\n    muted: false,\n    meterL: 60,\n    meterR: 60,\n    renderRate: 100\n  },\n  DirectInput: {\n    inDisabled: true,\n    color: toHex(200, 231, 253),\n    direction: 0,\n    muted: false,\n    channel: 1,\n    volume: 6,\n    osc: undefined\n  },\n  Pitch: {\n    color: toHex(220, 105, 216),\n    cents: 0,\n    kinect: false,\n    osc: undefined\n  },\n  VSTHost: {\n    color: toHex(136, 179, 95),\n    file: undefined,\n    module: true,\n    version: \"to Soundcool 3.1.1\",\n    channel: 1,\n    osc: undefined\n  },\n  Routing: {\n    color: toHex(58, 82, 221),\n    inDisabled: true,\n    outDisabled: true,\n    off1: true,\n    output11: false,\n    output21: false,\n    off2: true,\n    output12: false,\n    output22: false\n  },\n  Mixer: {\n    color: toHex(103, 227, 229),\n    inDisabled: true,\n    volumeMaster: 60,\n    volume1: 60,\n    volume2: 60,\n    volume3: 60,\n    volume4: 60,\n    volume5: 60,\n    volume6: 60,\n    volume7: 60,\n    volume8: 60,\n    osc: undefined\n  },\n  Record: {\n    color: toHex(159, 125, 119),\n    outDisabled: true,\n    module: false,\n    fileName: undefined,\n    recording: false,\n    volume: 60,\n    timer: 0\n  },\n  Spectroscope: {\n    color: toHex(141, 104, 133),\n    outDisabled: true,\n    renderRate: 100\n  },\n  Oscilloscope: {\n    color: toHex(141, 104, 133),\n    outDisabled: true,\n    renderRate: 100\n  },\n  Envelope: {\n    color: toHex(80, 174, 55),\n    envelope: [],\n    loop: false,\n    style: \"line\",\n    dur: 2,\n    osc: undefined\n  },\n  Filter: {\n    color: toHex(144, 81, 57)\n  },\n  Sequencer: {\n    color: toHex(202, 240, 253),\n    inDisabled: true,\n    outDisabled: true,\n    waveforms: [\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\",\n      \"Silence\"\n    ],\n    modulations: [\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\",\n      \"No Mod\"\n    ],\n    modulationValues: [0, 0, 0, 0, 0, 0, 0, 0],\n    notes: [0, 4, 8, 10, 14, 18, 22, 0],\n    durations: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000],\n    selecteds: [true, true, true, true, true, true, true, true],\n    skippeds: [false, false, false, false, false, false, false, false],\n    looping: false,\n    playStyle: \"None\"\n  },\n  SamplePlayer: {\n    color: toHex(229, 119, 125),\n    inDisabled: true,\n    random: false,\n    loop: false,\n    speed: 1,\n    reversed: false,\n    kinect: false,\n    osc: undefined,\n    playings: [\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false\n    ],\n    files: [\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined\n    ],\n    masterVolume: 60\n  },\n  Keyboard: {\n    color: toHex(89, 162, 179),\n    inDisabled: true,\n    instrument: \"1 Acoustic Grand Piano\",\n    channel: 1,\n    viewNames: false,\n    volume: 60,\n    module: false,\n    octave: \"3\",\n    //\n    noteOn: [\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false\n    ],\n    midiMessage: undefined\n  }\n};\n\nexport default specValues;\n","import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { reorder, getListStyle, getItemStyle, move } from \"./extra\";\n// import myAction from \"../reducers/major_boxes\";\nimport WithHeader from \"../Components/WithHeader\";\n\n// import {BLOCKS} from './shared/blocks';\nimport { sidebar1, sidebar2, major1, major2 } from \"../shared/content_box\";\n\nimport store from \"../../index\";\nimport specValues from \"../Components/blockSpecs.jsx\";\n\nconst addBlock = typeName => {\n  store.dispatch({\n    type: \"ADD_BLOCK\",\n    typeName,\n    values: {\n      // inNode and outNode are a list, since a block can have multiple input and output\n      inNode: [],\n      outNode: [],\n      collapse: false,\n      ...specValues[typeName]\n    }\n  });\n};\n\nclass ProjectPage extends React.Component {\n  idList = {\n    sidebar1: \"sidebar1\",\n    sidebar2: \"sidebar2\",\n    major1: \"major1\",\n    major2: \"major2\"\n  };\n  getList = id => this.state[this.idList[id]];\n\n  getListNameFromId = id => this.state[id];\n\n  handleDelete = id => {\n    // console.log(this.state[\"major1\"]);\n    // const list;\n    let list;\n    if (this.state[\"major1\"].filter(a => a.id === id).length) {\n      list = \"major1\";\n    }\n    if (this.state[\"major2\"].filter(a => a.id === id).length) {\n      list = \"major2\";\n    }\n    // console.log();\n    this.setState({ [list]: this.getList(list).filter(a => a.id !== id) });\n    // console.log(this.state[\"major1\"].filter(a => a.id!=id));\n    // this.setState([list]: );\n  };\n\n  onDragEnd = result => {\n    // console.log(result);\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n      const result = {};\n      result[destination.droppableId] = items;\n      const destinationList = this.idList[destination.droppableId];\n      this.setState({ [destinationList]: result[destination.droppableId] });\n    } else {\n      const list = this.getList(source.droppableId);\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination,\n        list[source.index][\"lastIndex\"],\n        list[source.index][\"typeName\"]\n      );\n      list[source.index][\"lastIndex\"]++;\n      this.setState(this.state);\n      const sourceList = this.idList[source.droppableId];\n      const destinationList = this.idList[destination.droppableId];\n      // console.log(this.state[sourceList]);\n\n      this.setState({\n        [sourceList]: result[source.droppableId],\n        [destinationList]: result[destination.droppableId]\n      });\n    }\n    // console.log(source.droppableId);\n    // console.log(destination.droppableId);\n    if (\n      (source.droppableId === \"sidebar1\" ||\n        source.droppableId === \"sidebar2\") &&\n      (destination.droppableId === \"major1\" ||\n        destination.droppableId === \"major2\")\n    ) {\n      addBlock(result.draggableId);\n    }\n  };\n\n  fetchContent(type, item, snapshot) {\n    if (type === \"sidebar\") {\n      return (\n        <div>\n          <img src={item.image} alt={item.id} />\n        </div>\n      );\n    } else if (type === \"contentBox\") {\n      let { blocks } = { ...store.getState() };\n      // console.log(blocks.bs[0]);\n      let { bs, nowOut } = blocks;\n      var b = bs.filter(block => {\n        return (\n          block.typeName === item.typeName && block.typeId === item.lastIndex\n        );\n      })[0];\n      const param = b.typeName + b.typeId;\n\n      return (\n        <div className=\"d-flex align-items-center\">\n          <WithHeader\n            key={b.id}\n            blockInfo={b}\n            nowOut={nowOut}\n            handleDelete={() => this.handleDelete(param)}\n          />\n          {/* <button onClick={() => this.handleDelete(param)}>x</button> */}\n        </div>\n      );\n    }\n  }\n\n  display(snapshot) {\n    return <div>{snapshot.isDraggingOver}</div>;\n  }\n\n  droppableContructur(id, list, type) {\n    return (\n      <Droppable droppableId={id}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}\n          >\n            {this.display(snapshot)}\n            {list.map((item, index) => (\n              <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    // style={getItemStyle(\n                    //   snapshot.isDragging,\n                    //   provided.draggableProps.style\n                    // )}\n                  >\n                    {this.fetchContent(type, item, snapshot)}\n                    {/* <button></button> */}\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sidebar1: sidebar1,\n      sidebar2: sidebar2,\n      major1: major1,\n      major2: major2\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <div class=\"container-fluid\">\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <div class=\"row text-center\">\n              <div class=\"col-sm-3\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                    {this.droppableContructur(\n                      \"sidebar1\",\n                      this.state.sidebar1,\n                      \"sidebar\"\n                    )}\n                  </div>\n                  <div class=\"col-sm-6\">\n                    {this.droppableContructur(\n                      \"sidebar2\",\n                      this.state.sidebar2,\n                      \"sidebar\"\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-sm-9\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6 full pl-3\">\n                    {this.droppableContructur(\n                      \"major1\",\n                      this.state.major1,\n                      \"contentBox\"\n                    )}\n                  </div>\n                  <div class=\"col-sm-6 full\">\n                    {this.droppableContructur(\n                      \"major2\",\n                      this.state.major2,\n                      \"contentBox\"\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </DragDropContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n// import { Delay, Transposer, Pan } from \"./Components/types/all\";\n// import AddBlock from \"./ui/Components/AddBlock\";\n// import SLButton from \"./ui/Components/SLButton\";\nimport blocks from \"./ui/reducers/blocks\";\nimport { createStore, combineReducers } from \"redux\";\nimport ProjectPage from \"./ui/component_pp/ProjectPage\";\n// #region reducers\n\nconst blockApp = combineReducers({\n  blocks\n});\n// #endregion\n\nconst store = createStore(blockApp);\nexport default store;\n\n// #region rendering components\n\n// #endregion\n\nconst BlockApp = ({ blocks }) => {\n  // let {} = blocks;\n  return (\n    <div>\n      {/* <SLButton /> */}\n      {/* <AddBlock /> */}\n      <ProjectPage />\n    </div>\n  );\n  // return (<NavigationBar/>)\n};\n\nconst render = () => {\n  ReactDOM.render(\n    <BlockApp {...store.getState()} />,\n    document.getElementById(\"root\")\n  );\n};\n\nstore.subscribe(render);\nrender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}